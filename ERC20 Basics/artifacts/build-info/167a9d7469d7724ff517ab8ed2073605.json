{
	"id": "167a9d7469d7724ff517ab8ed2073605",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"TRTtheSalad.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.24;\r\n\r\nimport \"./ERC20.sol\";\r\n\r\ncontract TRTtheSalad is ERC20 {\r\n    // Global variables for token name, symbol, and total supply\r\n    string public _tokenName;\r\n    string public _tokenSymbol;\r\n    uint256 public _totalSupply;\r\n\r\n    // Constructor that mints the initial supply to the deployer of the contract\r\n    constructor(uint256 initialSupply) ERC20(_tokenName, _tokenSymbol) {\r\n        _tokenName = \"TRTtheSalad\";         \r\n        _tokenSymbol = \"TRT\";           \r\n        _totalSupply = initialSupply;    \r\n        _mint(msg.sender, initialSupply); \r\n    }\r\n    // Function to mint new tokens to a specified address\r\n    function mint(address to, uint256 amount) public {\r\n        _mint(to, amount); // Call the _mint function from ERC20\r\n        _totalSupply += amount; // Update the total supply\r\n    }\r\n\r\n    // Function to burn tokens from a specified address\r\n    function burn(address from, uint256 amount) public {\r\n        _burn(from, amount); // Call the _burn function from ERC20\r\n        _totalSupply -= amount; // Update the total supply\r\n    }\r\n\r\n    // Override the transfer function to send tokens from the caller's address to a specified address\r\n    function transfer(address to, uint256 amount) public override returns (bool) {\r\n        _transfer(_msgSender(), to, amount); // Call the _transfer function from ERC20\r\n        return true;\r\n    }\r\n\r\n    // Override the approve function to authorize another address to spend a certain amount of tokens\r\n    function approve(address spender, uint256 amount) public override returns (bool) {\r\n        _approve(_msgSender(), spender, amount); // Call the _approve function from ERC20\r\n        return true;\r\n    }\r\n\r\n    // Override the transferFrom function to allow a spender to transfer tokens using an allowance\r\n    function transferFrom(address from, address to, uint256 amount) public override returns (bool) {\r\n        _transfer(from, to, amount); // Call the _transfer function from ERC20\r\n        _approve(from, _msgSender(), allowance(from, _msgSender()) - amount); // Decrease the allowance\r\n        return true;\r\n    }\r\n\r\n    // Function to get the balance of a specified account\r\n    function getBalanceOf(address account) public view returns (uint256) {\r\n        return balanceOf(account); // Return the balance of the account\r\n    }\r\n\r\n    // Getter functions for the global variables\r\n    function getTokenName() public view returns (string memory) {\r\n        return _tokenName;\r\n    }\r\n\r\n    function getTokenSymbol() public view returns (string memory) {\r\n        return _tokenSymbol;\r\n    }\r\n\r\n    function getTotalSupply() public view returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n}\r\n"
			},
			"ERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/ERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport  \"./IERC20.sol\";\nimport  \"./IERC20Metadata.sol\";\nimport  \"./Context.sol\";\nimport  \"./draft-IERC6093.sol\";\n\n/**\n * @dev Implementation of the {IERC20} interface.\n *\n * This implementation is agnostic to the way tokens are created. This means\n * that a supply mechanism has to be added in a derived contract using {_mint}.\n *\n * TIP: For a detailed writeup see our guide\n * https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n * to implement supply mechanisms].\n *\n * The default value of {decimals} is 18. To change this, you should override\n * this function so it returns a different value.\n *\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\n * instead returning `false` on failure. This behavior is nonetheless\n * conventional and does not conflict with the expectations of ERC20\n * applications.\n *\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n * This allows applications to reconstruct the allowance for all accounts just\n * by listening to said events. Other implementations of the EIP may not emit\n * these events, as it isn't required by the specification.\n */\nabstract contract ERC20 is Context, IERC20, IERC20Metadata, IERC20Errors {\n    mapping(address account => uint256) private _balances;\n\n    mapping(address account => mapping(address spender => uint256)) private _allowances;\n\n    uint256 private _totalSupply;\n\n    string private _name;\n    string private _symbol;\n\n    /**\n     * @dev Sets the values for {name} and {symbol}.\n     *\n     * All two of these values are immutable: they can only be set once during\n     * construction.\n     */\n    constructor(string memory name_, string memory symbol_) {\n        _name = name_;\n        _symbol = symbol_;\n    }\n\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() public view virtual returns (string memory) {\n        return _name;\n    }\n\n    /**\n     * @dev Returns the symbol of the token, usually a shorter version of the\n     * name.\n     */\n    function symbol() public view virtual returns (string memory) {\n        return _symbol;\n    }\n\n    /**\n     * @dev Returns the number of decimals used to get its user representation.\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\n     *\n     * Tokens usually opt for a value of 18, imitating the relationship between\n     * Ether and Wei. This is the default value returned by this function, unless\n     * it's overridden.\n     *\n     * NOTE: This information is only used for _display_ purposes: it in\n     * no way affects any of the arithmetic of the contract, including\n     * {IERC20-balanceOf} and {IERC20-transfer}.\n     */\n    function decimals() public view virtual returns (uint8) {\n        return 18;\n    }\n\n    /**\n     * @dev See {IERC20-totalSupply}.\n     */\n    function totalSupply() public view virtual returns (uint256) {\n        return _totalSupply;\n    }\n\n    /**\n     * @dev See {IERC20-balanceOf}.\n     */\n    function balanceOf(address account) public view virtual returns (uint256) {\n        return _balances[account];\n    }\n\n    /**\n     * @dev See {IERC20-transfer}.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - the caller must have a balance of at least `value`.\n     */\n    function transfer(address to, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _transfer(owner, to, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-allowance}.\n     */\n    function allowance(address owner, address spender) public view virtual returns (uint256) {\n        return _allowances[owner][spender];\n    }\n\n    /**\n     * @dev See {IERC20-approve}.\n     *\n     * NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     */\n    function approve(address spender, uint256 value) public virtual returns (bool) {\n        address owner = _msgSender();\n        _approve(owner, spender, value);\n        return true;\n    }\n\n    /**\n     * @dev See {IERC20-transferFrom}.\n     *\n     * Emits an {Approval} event indicating the updated allowance. This is not\n     * required by the EIP. See the note at the beginning of {ERC20}.\n     *\n     * NOTE: Does not update the allowance if the current allowance\n     * is the maximum `uint256`.\n     *\n     * Requirements:\n     *\n     * - `from` and `to` cannot be the zero address.\n     * - `from` must have a balance of at least `value`.\n     * - the caller must have allowance for ``from``'s tokens of at least\n     * `value`.\n     */\n    function transferFrom(address from, address to, uint256 value) public virtual returns (bool) {\n        address spender = _msgSender();\n        _spendAllowance(from, spender, value);\n        _transfer(from, to, value);\n        return true;\n    }\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to`.\n     *\n     * This internal function is equivalent to {transfer}, and can be used to\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\n     *\n     * Emits a {Transfer} event.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _transfer(address from, address to, uint256 value) internal {\n        if (from == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        if (to == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(from, to, value);\n    }\n\n    /**\n     * @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n     * (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n     * this function.\n     *\n     * Emits a {Transfer} event.\n     */\n    function _update(address from, address to, uint256 value) internal virtual {\n        if (from == address(0)) {\n            // Overflow check required: The rest of the code assumes that totalSupply never overflows\n            _totalSupply += value;\n        } else {\n            uint256 fromBalance = _balances[from];\n            if (fromBalance < value) {\n                revert ERC20InsufficientBalance(from, fromBalance, value);\n            }\n            unchecked {\n                // Overflow not possible: value <= fromBalance <= totalSupply.\n                _balances[from] = fromBalance - value;\n            }\n        }\n\n        if (to == address(0)) {\n            unchecked {\n                // Overflow not possible: value <= totalSupply or value <= fromBalance <= totalSupply.\n                _totalSupply -= value;\n            }\n        } else {\n            unchecked {\n                // Overflow not possible: balance + value is at most totalSupply, which we know fits into a uint256.\n                _balances[to] += value;\n            }\n        }\n\n        emit Transfer(from, to, value);\n    }\n\n    /**\n     * @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n     * Relies on the `_update` mechanism\n     *\n     * Emits a {Transfer} event with `from` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead.\n     */\n    function _mint(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidReceiver(address(0));\n        }\n        _update(address(0), account, value);\n    }\n\n    /**\n     * @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n     * Relies on the `_update` mechanism.\n     *\n     * Emits a {Transfer} event with `to` set to the zero address.\n     *\n     * NOTE: This function is not virtual, {_update} should be overridden instead\n     */\n    function _burn(address account, uint256 value) internal {\n        if (account == address(0)) {\n            revert ERC20InvalidSender(address(0));\n        }\n        _update(account, address(0), value);\n    }\n\n    /**\n     * @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n     *\n     * This internal function is equivalent to `approve`, and can be used to\n     * e.g. set automatic allowances for certain subsystems, etc.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `owner` cannot be the zero address.\n     * - `spender` cannot be the zero address.\n     *\n     * Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument.\n     */\n    function _approve(address owner, address spender, uint256 value) internal {\n        _approve(owner, spender, value, true);\n    }\n\n    /**\n     * @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n     *\n     * By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n     * `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n     * `Approval` event during `transferFrom` operations.\n     *\n     * Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n     * true using the following override:\n     * ```\n     * function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     *     super._approve(owner, spender, value, true);\n     * }\n     * ```\n     *\n     * Requirements are the same as {_approve}.\n     */\n    function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {\n        if (owner == address(0)) {\n            revert ERC20InvalidApprover(address(0));\n        }\n        if (spender == address(0)) {\n            revert ERC20InvalidSpender(address(0));\n        }\n        _allowances[owner][spender] = value;\n        if (emitEvent) {\n            emit Approval(owner, spender, value);\n        }\n    }\n\n    /**\n     * @dev Updates `owner` s allowance for `spender` based on spent `value`.\n     *\n     * Does not update the allowance value in case of infinite allowance.\n     * Revert if not enough allowance is available.\n     *\n     * Does not emit an {Approval} event.\n     */\n    function _spendAllowance(address owner, address spender, uint256 value) internal virtual {\n        uint256 currentAllowance = allowance(owner, spender);\n        if (currentAllowance != type(uint256).max) {\n            if (currentAllowance < value) {\n                revert ERC20InsufficientAllowance(spender, currentAllowance, value);\n            }\n            unchecked {\n                _approve(owner, spender, currentAllowance - value, false);\n            }\n        }\n    }\n}\n"
			},
			"draft-IERC6093.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC6093.sol)\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard ERC20 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\n */\ninterface IERC20Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientBalance(address sender, uint256 balance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC20InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC20InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     * @param allowance Amount of tokens a `spender` is allowed to operate with.\n     * @param needed Minimum amount required to perform a transfer.\n     */\n    error ERC20InsufficientAllowance(address spender, uint256 allowance, uint256 needed);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC20InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n     * @param spender Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC20InvalidSpender(address spender);\n}\n\n/**\n * @dev Standard ERC721 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\n */\ninterface IERC721Errors {\n    /**\n     * @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n     * Used in balance queries.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721InvalidOwner(address owner);\n\n    /**\n     * @dev Indicates a `tokenId` whose `owner` is the zero address.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721NonexistentToken(uint256 tokenId);\n\n    /**\n     * @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param tokenId Identifier number of a token.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC721IncorrectOwner(address sender, uint256 tokenId, address owner);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC721InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC721InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC721InsufficientApproval(address operator, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC721InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC721InvalidOperator(address operator);\n}\n\n/**\n * @dev Standard ERC1155 Errors\n * Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\n */\ninterface IERC1155Errors {\n    /**\n     * @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     * @param balance Current balance for the interacting account.\n     * @param needed Minimum amount required to perform a transfer.\n     * @param tokenId Identifier number of a token.\n     */\n    error ERC1155InsufficientBalance(address sender, uint256 balance, uint256 needed, uint256 tokenId);\n\n    /**\n     * @dev Indicates a failure with the token `sender`. Used in transfers.\n     * @param sender Address whose tokens are being transferred.\n     */\n    error ERC1155InvalidSender(address sender);\n\n    /**\n     * @dev Indicates a failure with the token `receiver`. Used in transfers.\n     * @param receiver Address to which tokens are being transferred.\n     */\n    error ERC1155InvalidReceiver(address receiver);\n\n    /**\n     * @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     * @param owner Address of the current owner of a token.\n     */\n    error ERC1155MissingApprovalForAll(address operator, address owner);\n\n    /**\n     * @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n     * @param approver Address initiating an approval operation.\n     */\n    error ERC1155InvalidApprover(address approver);\n\n    /**\n     * @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n     * @param operator Address that may be allowed to operate on tokens without being their owner.\n     */\n    error ERC1155InvalidOperator(address operator);\n\n    /**\n     * @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n     * Used in batch transfers.\n     * @param idsLength Length of the array of token identifiers\n     * @param valuesLength Length of the array of token amounts\n     */\n    error ERC1155InvalidArrayLength(uint256 idsLength, uint256 valuesLength);\n}\n"
			},
			"Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"Context.sol\":\"Context\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"ERC20.sol": {
				"ERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"approve(address,uint256)": {
								"details": "See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"constructor": {
								"details": "Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							},
							"transfer(address,uint256)": {
								"details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`."
							},
							"transferFrom(address,address,uint256)": {
								"details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. TIP: For a detailed writeup see our guide https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. The default value of {decimals} is 18. To change this, you should override this function so it returns a different value. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `value` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `value`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `value`. - the caller must have allowance for ``from``'s tokens of at least `value`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"ERC20.sol\":\"ERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ERC20.sol\":{\"keccak256\":\"0x21252862dd51c6d4910692dbd0ef512c6ee51f9bf5b5bea50c3d4c3e27b61407\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://421978e5236a5afd6cf06e767e8f7c5896eac304af0d7f75d216a5719f566768\",\"dweb:/ipfs/QmQaZoXhKSZspKBNuZsPFdn9uZUcuRqzqSESQngTfnoneP\"]},\"IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 48,
								"contract": "ERC20.sol:ERC20",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 54,
								"contract": "ERC20.sol:ERC20",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 56,
								"contract": "ERC20.sol:ERC20",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 58,
								"contract": "ERC20.sol:ERC20",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 60,
								"contract": "ERC20.sol:ERC20",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20.sol\":\"IERC20\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"TRTtheSalad.sol": {
				"TRTtheSalad": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "initialSupply",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "_tokenName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_tokenSymbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "_totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "burn",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "getBalanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenName",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTokenSymbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getTotalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "mint",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "See {IERC20-allowance}."
							},
							"balanceOf(address)": {
								"details": "See {IERC20-balanceOf}."
							},
							"decimals()": {
								"details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token, usually a shorter version of the name."
							},
							"totalSupply()": {
								"details": "See {IERC20-totalSupply}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"TRTtheSalad.sol\":86:2742  contract TRTtheSalad is ERC20 {... */\n  mstore(0x40, 0x80)\n    /* \"TRTtheSalad.sol\":371:621  constructor(uint256 initialSupply) ERC20(_tokenName, _tokenSymbol) {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"TRTtheSalad.sol\":412:422  _tokenName */\n  0x05\n    /* \"ERC20.sol\":1793:1906  constructor(string memory name_, string memory symbol_) {... */\n  dup1\n  sload\n  tag_5\n  swap1\n  tag_6\n  jump\t// in\ntag_5:\n  dup1\n  0x1f\n  add\n  0x20\n  dup1\n  swap2\n  div\n  mul\n  0x20\n  add\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  swap3\n  swap2\n  swap1\n  dup2\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup1\n  sload\n  tag_7\n  swap1\n  tag_6\n  jump\t// in\ntag_7:\n  dup1\n  iszero\n  tag_8\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_9\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  0x20\n  add\n  swap2\n  jump(tag_8)\ntag_9:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_10:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_10\n  jumpi\n  dup3\n  swap1\n  sub\n  0x1f\n  and\n  dup3\n  add\n  swap2\ntag_8:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"TRTtheSalad.sol\":424:436  _tokenSymbol */\n  0x06\n    /* \"ERC20.sol\":1793:1906  constructor(string memory name_, string memory symbol_) {... */\n  dup1\n  sload\n  tag_11\n  swap1\n  tag_6\n  jump\t// in\ntag_11:\n  dup1\n  0x1f\n  add\n  0x20\n  dup1\n  swap2\n  div\n  mul\n  0x20\n  add\n  mload(0x40)\n  swap1\n  dup2\n  add\n  0x40\n  mstore\n  dup1\n  swap3\n  swap2\n  swap1\n  dup2\n  dup2\n  mstore\n  0x20\n  add\n  dup3\n  dup1\n  sload\n  tag_12\n  swap1\n  tag_6\n  jump\t// in\ntag_12:\n  dup1\n  iszero\n  tag_13\n  jumpi\n  dup1\n  0x1f\n  lt\n  tag_14\n  jumpi\n  0x0100\n  dup1\n  dup4\n  sload\n  div\n  mul\n  dup4\n  mstore\n  swap2\n  0x20\n  add\n  swap2\n  jump(tag_13)\ntag_14:\n  dup3\n  add\n  swap2\n  swap1\n  0x00\n  mstore\n  keccak256(0x00, 0x20)\n  swap1\ntag_15:\n  dup2\n  sload\n  dup2\n  mstore\n  swap1\n  0x01\n  add\n  swap1\n  0x20\n  add\n  dup1\n  dup4\n  gt\n  tag_15\n  jumpi\n  dup3\n  swap1\n  sub\n  0x1f\n  and\n  dup3\n  add\n  swap2\ntag_13:\n  pop\n  pop\n  pop\n  pop\n  pop\n    /* \"ERC20.sol\":1867:1872  name_ */\n  dup2\n    /* \"ERC20.sol\":1859:1864  _name */\n  0x03\n    /* \"ERC20.sol\":1859:1872  _name = name_ */\n  swap1\n  dup2\n  tag_18\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_18:\n  pop\n    /* \"ERC20.sol\":1892:1899  symbol_ */\n  dup1\n    /* \"ERC20.sol\":1882:1889  _symbol */\n  0x04\n    /* \"ERC20.sol\":1882:1899  _symbol = symbol_ */\n  swap1\n  dup2\n  tag_20\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_20:\n  pop\n    /* \"ERC20.sol\":1793:1906  constructor(string memory name_, string memory symbol_) {... */\n  pop\n  pop\n    /* \"TRTtheSalad.sol\":449:475  _tokenName = \"TRTtheSalad\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x0b\n  dup2\n  mstore\n  0x20\n  add\n  0x54525474686553616c6164000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"TRTtheSalad.sol\":449:459  _tokenName */\n  0x05\n    /* \"TRTtheSalad.sol\":449:475  _tokenName = \"TRTtheSalad\" */\n  swap1\n  dup2\n  tag_22\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_22:\n  pop\n    /* \"TRTtheSalad.sol\":495:515  _tokenSymbol = \"TRT\" */\n  mload(0x40)\n  dup1\n  0x40\n  add\n  0x40\n  mstore\n  dup1\n  0x03\n  dup2\n  mstore\n  0x20\n  add\n  0x5452540000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  pop\n    /* \"TRTtheSalad.sol\":495:507  _tokenSymbol */\n  0x06\n    /* \"TRTtheSalad.sol\":495:515  _tokenSymbol = \"TRT\" */\n  swap1\n  dup2\n  tag_23\n  swap2\n  swap1\n  tag_19\n  jump\t// in\ntag_23:\n  pop\n    /* \"TRTtheSalad.sol\":552:565  initialSupply */\n  dup1\n    /* \"TRTtheSalad.sol\":537:549  _totalSupply */\n  0x07\n    /* \"TRTtheSalad.sol\":537:565  _totalSupply = initialSupply */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"TRTtheSalad.sol\":580:612  _mint(msg.sender, initialSupply) */\n  tag_24\n    /* \"TRTtheSalad.sol\":586:596  msg.sender */\n  caller\n    /* \"TRTtheSalad.sol\":598:611  initialSupply */\n  dup3\n    /* \"TRTtheSalad.sol\":580:585  _mint */\n  shl(0x20, tag_25)\n    /* \"TRTtheSalad.sol\":580:612  _mint(msg.sender, initialSupply) */\n  0x20\n  shr\n  jump\t// in\ntag_24:\n    /* \"TRTtheSalad.sol\":371:621  constructor(uint256 initialSupply) ERC20(_tokenName, _tokenSymbol) {... */\n  pop\n    /* \"TRTtheSalad.sol\":86:2742  contract TRTtheSalad is ERC20 {... */\n  jump(tag_26)\n    /* \"ERC20.sol\":7618:7826  function _mint(address account, uint256 value) internal {... */\ntag_25:\n    /* \"ERC20.sol\":7707:7708  0 */\n  0x00\n    /* \"ERC20.sol\":7688:7709  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":7688:7695  account */\n  dup3\n    /* \"ERC20.sol\":7688:7709  account == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"ERC20.sol\":7684:7775  if (account == address(0)) {... */\n  tag_28\n  jumpi\n    /* \"ERC20.sol\":7761:7762  0 */\n  0x00\n    /* \"ERC20.sol\":7732:7764  ERC20InvalidReceiver(address(0)) */\n  mload(0x40)\n  0xec442f0500000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_29\n  swap2\n  swap1\n  tag_30\n  jump\t// in\ntag_29:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"ERC20.sol\":7684:7775  if (account == address(0)) {... */\ntag_28:\n    /* \"ERC20.sol\":7784:7819  _update(address(0), account, value) */\n  tag_31\n    /* \"ERC20.sol\":7800:7801  0 */\n  0x00\n    /* \"ERC20.sol\":7804:7811  account */\n  dup4\n    /* \"ERC20.sol\":7813:7818  value */\n  dup4\n    /* \"ERC20.sol\":7784:7791  _update */\n  shl(0x20, tag_32)\n    /* \"ERC20.sol\":7784:7819  _update(address(0), account, value) */\n  0x20\n  shr\n  jump\t// in\ntag_31:\n    /* \"ERC20.sol\":7618:7826  function _mint(address account, uint256 value) internal {... */\n  pop\n  pop\n  jump\t// out\n    /* \"ERC20.sol\":6168:7275  function _update(address from, address to, uint256 value) internal virtual {... */\ntag_32:\n    /* \"ERC20.sol\":6273:6274  0 */\n  0x00\n    /* \"ERC20.sol\":6257:6275  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":6257:6261  from */\n  dup4\n    /* \"ERC20.sol\":6257:6275  from == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"ERC20.sol\":6253:6793  if (from == address(0)) {... */\n  tag_34\n  jumpi\n    /* \"ERC20.sol\":6409:6414  value */\n  dup1\n    /* \"ERC20.sol\":6393:6405  _totalSupply */\n  0x02\n  0x00\n    /* \"ERC20.sol\":6393:6414  _totalSupply += value */\n  dup3\n  dup3\n  sload\n  tag_35\n  swap2\n  swap1\n  tag_36\n  jump\t// in\ntag_35:\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":6253:6793  if (from == address(0)) {... */\n  jump(tag_37)\ntag_34:\n    /* \"ERC20.sol\":6445:6464  uint256 fromBalance */\n  0x00\n    /* \"ERC20.sol\":6467:6476  _balances */\n  dup1\n    /* \"ERC20.sol\":6467:6482  _balances[from] */\n  0x00\n    /* \"ERC20.sol\":6477:6481  from */\n  dup6\n    /* \"ERC20.sol\":6467:6482  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  sload\n    /* \"ERC20.sol\":6445:6482  uint256 fromBalance = _balances[from] */\n  swap1\n  pop\n    /* \"ERC20.sol\":6514:6519  value */\n  dup2\n    /* \"ERC20.sol\":6500:6511  fromBalance */\n  dup2\n    /* \"ERC20.sol\":6500:6519  fromBalance < value */\n  lt\n    /* \"ERC20.sol\":6496:6611  if (fromBalance < value) {... */\n  iszero\n  tag_38\n  jumpi\n    /* \"ERC20.sol\":6571:6575  from */\n  dup4\n    /* \"ERC20.sol\":6577:6588  fromBalance */\n  dup2\n    /* \"ERC20.sol\":6590:6595  value */\n  dup4\n    /* \"ERC20.sol\":6546:6596  ERC20InsufficientBalance(from, fromBalance, value) */\n  mload(0x40)\n  0xe450d38c00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_39\n  swap4\n  swap3\n  swap2\n  swap1\n  tag_40\n  jump\t// in\ntag_39:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"ERC20.sol\":6496:6611  if (fromBalance < value) {... */\ntag_38:\n    /* \"ERC20.sol\":6763:6768  value */\n  dup2\n    /* \"ERC20.sol\":6749:6760  fromBalance */\n  dup2\n    /* \"ERC20.sol\":6749:6768  fromBalance - value */\n  sub\n    /* \"ERC20.sol\":6731:6740  _balances */\n  0x00\n    /* \"ERC20.sol\":6731:6746  _balances[from] */\n  dup1\n    /* \"ERC20.sol\":6741:6745  from */\n  dup7\n    /* \"ERC20.sol\":6731:6746  _balances[from] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n    /* \"ERC20.sol\":6731:6768  _balances[from] = fromBalance - value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":6431:6793  {... */\n  pop\n    /* \"ERC20.sol\":6253:6793  if (from == address(0)) {... */\ntag_37:\n    /* \"ERC20.sol\":6821:6822  0 */\n  0x00\n    /* \"ERC20.sol\":6807:6823  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":6807:6809  to */\n  dup3\n    /* \"ERC20.sol\":6807:6823  to == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"ERC20.sol\":6803:7228  if (to == address(0)) {... */\n  tag_41\n  jumpi\n    /* \"ERC20.sol\":6986:6991  value */\n  dup1\n    /* \"ERC20.sol\":6970:6982  _totalSupply */\n  0x02\n  0x00\n    /* \"ERC20.sol\":6970:6991  _totalSupply -= value */\n  dup3\n  dup3\n  sload\n  sub\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":6803:7228  if (to == address(0)) {... */\n  jump(tag_42)\ntag_41:\n    /* \"ERC20.sol\":7198:7203  value */\n  dup1\n    /* \"ERC20.sol\":7181:7190  _balances */\n  0x00\n    /* \"ERC20.sol\":7181:7194  _balances[to] */\n  dup1\n    /* \"ERC20.sol\":7191:7193  to */\n  dup5\n    /* \"ERC20.sol\":7181:7194  _balances[to] */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"ERC20.sol\":7181:7203  _balances[to] += value */\n  dup3\n  dup3\n  sload\n  add\n  swap3\n  pop\n  pop\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"ERC20.sol\":6803:7228  if (to == address(0)) {... */\ntag_42:\n    /* \"ERC20.sol\":7258:7260  to */\n  dup2\n    /* \"ERC20.sol\":7243:7268  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"ERC20.sol\":7252:7256  from */\n  dup4\n    /* \"ERC20.sol\":7243:7268  Transfer(from, to, value) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n    /* \"ERC20.sol\":7262:7267  value */\n  dup4\n    /* \"ERC20.sol\":7243:7268  Transfer(from, to, value) */\n  mload(0x40)\n  tag_43\n  swap2\n  swap1\n  tag_44\n  jump\t// in\ntag_43:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"ERC20.sol\":6168:7275  function _update(address from, address to, uint256 value) internal virtual {... */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_46:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  dup1\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:411   */\ntag_48:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":400:405   */\n  dup2\n    /* \"#utility.yul\":389:405   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:411   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":417:539   */\ntag_49:\n    /* \"#utility.yul\":490:514   */\n  tag_80\n    /* \"#utility.yul\":508:513   */\n  dup2\n    /* \"#utility.yul\":490:514   */\n  tag_48\n  jump\t// in\ntag_80:\n    /* \"#utility.yul\":483:488   */\n  dup2\n    /* \"#utility.yul\":480:515   */\n  eq\n    /* \"#utility.yul\":470:533   */\n  tag_81\n  jumpi\n    /* \"#utility.yul\":529:530   */\n  0x00\n    /* \"#utility.yul\":526:527   */\n  dup1\n    /* \"#utility.yul\":519:531   */\n  revert\n    /* \"#utility.yul\":470:533   */\ntag_81:\n    /* \"#utility.yul\":417:539   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":545:688   */\ntag_50:\n    /* \"#utility.yul\":602:607   */\n  0x00\n    /* \"#utility.yul\":633:639   */\n  dup2\n    /* \"#utility.yul\":627:640   */\n  mload\n    /* \"#utility.yul\":618:640   */\n  swap1\n  pop\n    /* \"#utility.yul\":649:682   */\n  tag_83\n    /* \"#utility.yul\":676:681   */\n  dup2\n    /* \"#utility.yul\":649:682   */\n  tag_49\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":545:688   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":694:1045   */\ntag_3:\n    /* \"#utility.yul\":764:770   */\n  0x00\n    /* \"#utility.yul\":813:815   */\n  0x20\n    /* \"#utility.yul\":801:810   */\n  dup3\n    /* \"#utility.yul\":792:799   */\n  dup5\n    /* \"#utility.yul\":788:811   */\n  sub\n    /* \"#utility.yul\":784:816   */\n  slt\n    /* \"#utility.yul\":781:900   */\n  iszero\n  tag_85\n  jumpi\n    /* \"#utility.yul\":819:898   */\n  tag_86\n  tag_46\n  jump\t// in\ntag_86:\n    /* \"#utility.yul\":781:900   */\ntag_85:\n    /* \"#utility.yul\":939:940   */\n  0x00\n    /* \"#utility.yul\":964:1028   */\n  tag_87\n    /* \"#utility.yul\":1020:1027   */\n  dup5\n    /* \"#utility.yul\":1011:1017   */\n  dup3\n    /* \"#utility.yul\":1000:1009   */\n  dup6\n    /* \"#utility.yul\":996:1018   */\n  add\n    /* \"#utility.yul\":964:1028   */\n  tag_50\n  jump\t// in\ntag_87:\n    /* \"#utility.yul\":954:1028   */\n  swap2\n  pop\n    /* \"#utility.yul\":910:1038   */\n  pop\n    /* \"#utility.yul\":694:1045   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1051:1231   */\ntag_51:\n    /* \"#utility.yul\":1099:1176   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1096:1097   */\n  0x00\n    /* \"#utility.yul\":1089:1177   */\n  mstore\n    /* \"#utility.yul\":1196:1200   */\n  0x22\n    /* \"#utility.yul\":1193:1194   */\n  0x04\n    /* \"#utility.yul\":1186:1201   */\n  mstore\n    /* \"#utility.yul\":1220:1224   */\n  0x24\n    /* \"#utility.yul\":1217:1218   */\n  0x00\n    /* \"#utility.yul\":1210:1225   */\n  revert\n    /* \"#utility.yul\":1237:1557   */\ntag_6:\n    /* \"#utility.yul\":1281:1287   */\n  0x00\n    /* \"#utility.yul\":1318:1319   */\n  0x02\n    /* \"#utility.yul\":1312:1316   */\n  dup3\n    /* \"#utility.yul\":1308:1320   */\n  div\n    /* \"#utility.yul\":1298:1320   */\n  swap1\n  pop\n    /* \"#utility.yul\":1365:1366   */\n  0x01\n    /* \"#utility.yul\":1359:1363   */\n  dup3\n    /* \"#utility.yul\":1355:1367   */\n  and\n    /* \"#utility.yul\":1386:1404   */\n  dup1\n    /* \"#utility.yul\":1376:1457   */\n  tag_90\n  jumpi\n    /* \"#utility.yul\":1442:1446   */\n  0x7f\n    /* \"#utility.yul\":1434:1440   */\n  dup3\n    /* \"#utility.yul\":1430:1447   */\n  and\n    /* \"#utility.yul\":1420:1447   */\n  swap2\n  pop\n    /* \"#utility.yul\":1376:1457   */\ntag_90:\n    /* \"#utility.yul\":1504:1506   */\n  0x20\n    /* \"#utility.yul\":1496:1502   */\n  dup3\n    /* \"#utility.yul\":1493:1507   */\n  lt\n    /* \"#utility.yul\":1473:1491   */\n  dup2\n    /* \"#utility.yul\":1470:1508   */\n  sub\n    /* \"#utility.yul\":1467:1551   */\n  tag_91\n  jumpi\n    /* \"#utility.yul\":1523:1541   */\n  tag_92\n  tag_51\n  jump\t// in\ntag_92:\n    /* \"#utility.yul\":1467:1551   */\ntag_91:\n    /* \"#utility.yul\":1288:1557   */\n  pop\n    /* \"#utility.yul\":1237:1557   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1563:1662   */\ntag_52:\n    /* \"#utility.yul\":1615:1621   */\n  0x00\n    /* \"#utility.yul\":1649:1654   */\n  dup2\n    /* \"#utility.yul\":1643:1655   */\n  mload\n    /* \"#utility.yul\":1633:1655   */\n  swap1\n  pop\n    /* \"#utility.yul\":1563:1662   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1668:1848   */\ntag_53:\n    /* \"#utility.yul\":1716:1793   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":1713:1714   */\n  0x00\n    /* \"#utility.yul\":1706:1794   */\n  mstore\n    /* \"#utility.yul\":1813:1817   */\n  0x41\n    /* \"#utility.yul\":1810:1811   */\n  0x04\n    /* \"#utility.yul\":1803:1818   */\n  mstore\n    /* \"#utility.yul\":1837:1841   */\n  0x24\n    /* \"#utility.yul\":1834:1835   */\n  0x00\n    /* \"#utility.yul\":1827:1842   */\n  revert\n    /* \"#utility.yul\":1854:1995   */\ntag_54:\n    /* \"#utility.yul\":1903:1907   */\n  0x00\n    /* \"#utility.yul\":1926:1929   */\n  dup2\n    /* \"#utility.yul\":1918:1929   */\n  swap1\n  pop\n    /* \"#utility.yul\":1949:1952   */\n  dup2\n    /* \"#utility.yul\":1946:1947   */\n  0x00\n    /* \"#utility.yul\":1939:1953   */\n  mstore\n    /* \"#utility.yul\":1983:1987   */\n  0x20\n    /* \"#utility.yul\":1980:1981   */\n  0x00\n    /* \"#utility.yul\":1970:1988   */\n  keccak256\n    /* \"#utility.yul\":1962:1988   */\n  swap1\n  pop\n    /* \"#utility.yul\":1854:1995   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2001:2094   */\ntag_55:\n    /* \"#utility.yul\":2038:2044   */\n  0x00\n    /* \"#utility.yul\":2085:2087   */\n  0x20\n    /* \"#utility.yul\":2080:2082   */\n  0x1f\n    /* \"#utility.yul\":2073:2078   */\n  dup4\n    /* \"#utility.yul\":2069:2083   */\n  add\n    /* \"#utility.yul\":2065:2088   */\n  div\n    /* \"#utility.yul\":2055:2088   */\n  swap1\n  pop\n    /* \"#utility.yul\":2001:2094   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2100:2207   */\ntag_56:\n    /* \"#utility.yul\":2144:2152   */\n  0x00\n    /* \"#utility.yul\":2194:2199   */\n  dup3\n    /* \"#utility.yul\":2188:2192   */\n  dup3\n    /* \"#utility.yul\":2184:2200   */\n  shl\n    /* \"#utility.yul\":2163:2200   */\n  swap1\n  pop\n    /* \"#utility.yul\":2100:2207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2213:2606   */\ntag_57:\n    /* \"#utility.yul\":2282:2288   */\n  0x00\n    /* \"#utility.yul\":2332:2333   */\n  0x08\n    /* \"#utility.yul\":2320:2330   */\n  dup4\n    /* \"#utility.yul\":2316:2334   */\n  mul\n    /* \"#utility.yul\":2355:2452   */\n  tag_99\n    /* \"#utility.yul\":2385:2451   */\n  0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":2374:2383   */\n  dup3\n    /* \"#utility.yul\":2355:2452   */\n  tag_56\n  jump\t// in\ntag_99:\n    /* \"#utility.yul\":2473:2512   */\n  tag_100\n    /* \"#utility.yul\":2503:2511   */\n  dup7\n    /* \"#utility.yul\":2492:2501   */\n  dup4\n    /* \"#utility.yul\":2473:2512   */\n  tag_56\n  jump\t// in\ntag_100:\n    /* \"#utility.yul\":2461:2512   */\n  swap6\n  pop\n    /* \"#utility.yul\":2545:2549   */\n  dup1\n    /* \"#utility.yul\":2541:2550   */\n  not\n    /* \"#utility.yul\":2534:2539   */\n  dup5\n    /* \"#utility.yul\":2530:2551   */\n  and\n    /* \"#utility.yul\":2521:2551   */\n  swap4\n  pop\n    /* \"#utility.yul\":2594:2598   */\n  dup1\n    /* \"#utility.yul\":2584:2592   */\n  dup7\n    /* \"#utility.yul\":2580:2599   */\n  and\n    /* \"#utility.yul\":2573:2578   */\n  dup5\n    /* \"#utility.yul\":2570:2600   */\n  or\n    /* \"#utility.yul\":2560:2600   */\n  swap3\n  pop\n    /* \"#utility.yul\":2289:2606   */\n  pop\n  pop\n    /* \"#utility.yul\":2213:2606   */\n  swap4\n  swap3\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2612:2672   */\ntag_58:\n    /* \"#utility.yul\":2640:2643   */\n  0x00\n    /* \"#utility.yul\":2661:2666   */\n  dup2\n    /* \"#utility.yul\":2654:2666   */\n  swap1\n  pop\n    /* \"#utility.yul\":2612:2672   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2678:2820   */\ntag_59:\n    /* \"#utility.yul\":2728:2737   */\n  0x00\n    /* \"#utility.yul\":2761:2814   */\n  tag_103\n    /* \"#utility.yul\":2779:2813   */\n  tag_104\n    /* \"#utility.yul\":2788:2812   */\n  tag_105\n    /* \"#utility.yul\":2806:2811   */\n  dup5\n    /* \"#utility.yul\":2788:2812   */\n  tag_48\n  jump\t// in\ntag_105:\n    /* \"#utility.yul\":2779:2813   */\n  tag_58\n  jump\t// in\ntag_104:\n    /* \"#utility.yul\":2761:2814   */\n  tag_48\n  jump\t// in\ntag_103:\n    /* \"#utility.yul\":2748:2814   */\n  swap1\n  pop\n    /* \"#utility.yul\":2678:2820   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2826:2901   */\ntag_60:\n    /* \"#utility.yul\":2869:2872   */\n  0x00\n    /* \"#utility.yul\":2890:2895   */\n  dup2\n    /* \"#utility.yul\":2883:2895   */\n  swap1\n  pop\n    /* \"#utility.yul\":2826:2901   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2907:3176   */\ntag_61:\n    /* \"#utility.yul\":3017:3056   */\n  tag_108\n    /* \"#utility.yul\":3048:3055   */\n  dup4\n    /* \"#utility.yul\":3017:3056   */\n  tag_59\n  jump\t// in\ntag_108:\n    /* \"#utility.yul\":3078:3169   */\n  tag_109\n    /* \"#utility.yul\":3127:3168   */\n  tag_110\n    /* \"#utility.yul\":3151:3167   */\n  dup3\n    /* \"#utility.yul\":3127:3168   */\n  tag_60\n  jump\t// in\ntag_110:\n    /* \"#utility.yul\":3119:3125   */\n  dup5\n    /* \"#utility.yul\":3112:3116   */\n  dup5\n    /* \"#utility.yul\":3106:3117   */\n  sload\n    /* \"#utility.yul\":3078:3169   */\n  tag_57\n  jump\t// in\ntag_109:\n    /* \"#utility.yul\":3072:3076   */\n  dup3\n    /* \"#utility.yul\":3065:3170   */\n  sstore\n    /* \"#utility.yul\":2983:3176   */\n  pop\n    /* \"#utility.yul\":2907:3176   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3182:3255   */\ntag_62:\n    /* \"#utility.yul\":3227:3230   */\n  0x00\n    /* \"#utility.yul\":3182:3255   */\n  swap1\n  jump\t// out\n    /* \"#utility.yul\":3261:3450   */\ntag_63:\n    /* \"#utility.yul\":3338:3370   */\n  tag_113\n  tag_62\n  jump\t// in\ntag_113:\n    /* \"#utility.yul\":3379:3444   */\n  tag_114\n    /* \"#utility.yul\":3437:3443   */\n  dup2\n    /* \"#utility.yul\":3429:3435   */\n  dup5\n    /* \"#utility.yul\":3423:3427   */\n  dup5\n    /* \"#utility.yul\":3379:3444   */\n  tag_61\n  jump\t// in\ntag_114:\n    /* \"#utility.yul\":3314:3450   */\n  pop\n    /* \"#utility.yul\":3261:3450   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3456:3642   */\ntag_64:\n    /* \"#utility.yul\":3516:3636   */\ntag_116:\n    /* \"#utility.yul\":3533:3536   */\n  dup2\n    /* \"#utility.yul\":3526:3531   */\n  dup2\n    /* \"#utility.yul\":3523:3537   */\n  lt\n    /* \"#utility.yul\":3516:3636   */\n  iszero\n  tag_118\n  jumpi\n    /* \"#utility.yul\":3587:3626   */\n  tag_119\n    /* \"#utility.yul\":3624:3625   */\n  0x00\n    /* \"#utility.yul\":3617:3622   */\n  dup3\n    /* \"#utility.yul\":3587:3626   */\n  tag_63\n  jump\t// in\ntag_119:\n    /* \"#utility.yul\":3560:3561   */\n  0x01\n    /* \"#utility.yul\":3553:3558   */\n  dup2\n    /* \"#utility.yul\":3549:3562   */\n  add\n    /* \"#utility.yul\":3540:3562   */\n  swap1\n  pop\n    /* \"#utility.yul\":3516:3636   */\n  jump(tag_116)\ntag_118:\n    /* \"#utility.yul\":3456:3642   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":3648:4191   */\ntag_65:\n    /* \"#utility.yul\":3749:3751   */\n  0x1f\n    /* \"#utility.yul\":3744:3747   */\n  dup3\n    /* \"#utility.yul\":3741:3752   */\n  gt\n    /* \"#utility.yul\":3738:4184   */\n  iszero\n  tag_121\n  jumpi\n    /* \"#utility.yul\":3783:3821   */\n  tag_122\n    /* \"#utility.yul\":3815:3820   */\n  dup2\n    /* \"#utility.yul\":3783:3821   */\n  tag_54\n  jump\t// in\ntag_122:\n    /* \"#utility.yul\":3867:3896   */\n  tag_123\n    /* \"#utility.yul\":3885:3895   */\n  dup5\n    /* \"#utility.yul\":3867:3896   */\n  tag_55\n  jump\t// in\ntag_123:\n    /* \"#utility.yul\":3857:3865   */\n  dup2\n    /* \"#utility.yul\":3853:3897   */\n  add\n    /* \"#utility.yul\":4050:4052   */\n  0x20\n    /* \"#utility.yul\":4038:4048   */\n  dup6\n    /* \"#utility.yul\":4035:4053   */\n  lt\n    /* \"#utility.yul\":4032:4081   */\n  iszero\n  tag_124\n  jumpi\n    /* \"#utility.yul\":4071:4079   */\n  dup2\n    /* \"#utility.yul\":4056:4079   */\n  swap1\n  pop\n    /* \"#utility.yul\":4032:4081   */\ntag_124:\n    /* \"#utility.yul\":4094:4174   */\n  tag_125\n    /* \"#utility.yul\":4150:4172   */\n  tag_126\n    /* \"#utility.yul\":4168:4171   */\n  dup6\n    /* \"#utility.yul\":4150:4172   */\n  tag_55\n  jump\t// in\ntag_126:\n    /* \"#utility.yul\":4140:4148   */\n  dup4\n    /* \"#utility.yul\":4136:4173   */\n  add\n    /* \"#utility.yul\":4123:4134   */\n  dup3\n    /* \"#utility.yul\":4094:4174   */\n  tag_64\n  jump\t// in\ntag_125:\n    /* \"#utility.yul\":3753:4184   */\n  pop\n  pop\n    /* \"#utility.yul\":3738:4184   */\ntag_121:\n    /* \"#utility.yul\":3648:4191   */\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4197:4314   */\ntag_66:\n    /* \"#utility.yul\":4251:4259   */\n  0x00\n    /* \"#utility.yul\":4301:4306   */\n  dup3\n    /* \"#utility.yul\":4295:4299   */\n  dup3\n    /* \"#utility.yul\":4291:4307   */\n  shr\n    /* \"#utility.yul\":4270:4307   */\n  swap1\n  pop\n    /* \"#utility.yul\":4197:4314   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4320:4489   */\ntag_67:\n    /* \"#utility.yul\":4364:4370   */\n  0x00\n    /* \"#utility.yul\":4397:4448   */\n  tag_129\n    /* \"#utility.yul\":4445:4446   */\n  0x00\n    /* \"#utility.yul\":4441:4447   */\n  not\n    /* \"#utility.yul\":4433:4438   */\n  dup5\n    /* \"#utility.yul\":4430:4431   */\n  0x08\n    /* \"#utility.yul\":4426:4439   */\n  mul\n    /* \"#utility.yul\":4397:4448   */\n  tag_66\n  jump\t// in\ntag_129:\n    /* \"#utility.yul\":4393:4449   */\n  not\n    /* \"#utility.yul\":4478:4482   */\n  dup1\n    /* \"#utility.yul\":4472:4476   */\n  dup4\n    /* \"#utility.yul\":4468:4483   */\n  and\n    /* \"#utility.yul\":4458:4483   */\n  swap2\n  pop\n    /* \"#utility.yul\":4371:4489   */\n  pop\n    /* \"#utility.yul\":4320:4489   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4494:4789   */\ntag_68:\n    /* \"#utility.yul\":4570:4574   */\n  0x00\n    /* \"#utility.yul\":4716:4745   */\n  tag_131\n    /* \"#utility.yul\":4741:4744   */\n  dup4\n    /* \"#utility.yul\":4735:4739   */\n  dup4\n    /* \"#utility.yul\":4716:4745   */\n  tag_67\n  jump\t// in\ntag_131:\n    /* \"#utility.yul\":4708:4745   */\n  swap2\n  pop\n    /* \"#utility.yul\":4778:4781   */\n  dup3\n    /* \"#utility.yul\":4775:4776   */\n  0x02\n    /* \"#utility.yul\":4771:4782   */\n  mul\n    /* \"#utility.yul\":4765:4769   */\n  dup3\n    /* \"#utility.yul\":4762:4783   */\n  or\n    /* \"#utility.yul\":4754:4783   */\n  swap1\n  pop\n    /* \"#utility.yul\":4494:4789   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":4794:6189   */\ntag_19:\n    /* \"#utility.yul\":4911:4948   */\n  tag_133\n    /* \"#utility.yul\":4944:4947   */\n  dup3\n    /* \"#utility.yul\":4911:4948   */\n  tag_52\n  jump\t// in\ntag_133:\n    /* \"#utility.yul\":5013:5031   */\n  0xffffffffffffffff\n    /* \"#utility.yul\":5005:5011   */\n  dup2\n    /* \"#utility.yul\":5002:5032   */\n  gt\n    /* \"#utility.yul\":4999:5055   */\n  iszero\n  tag_134\n  jumpi\n    /* \"#utility.yul\":5035:5053   */\n  tag_135\n  tag_53\n  jump\t// in\ntag_135:\n    /* \"#utility.yul\":4999:5055   */\ntag_134:\n    /* \"#utility.yul\":5079:5117   */\n  tag_136\n    /* \"#utility.yul\":5111:5115   */\n  dup3\n    /* \"#utility.yul\":5105:5116   */\n  sload\n    /* \"#utility.yul\":5079:5117   */\n  tag_6\n  jump\t// in\ntag_136:\n    /* \"#utility.yul\":5164:5231   */\n  tag_137\n    /* \"#utility.yul\":5224:5230   */\n  dup3\n    /* \"#utility.yul\":5216:5222   */\n  dup3\n    /* \"#utility.yul\":5210:5214   */\n  dup6\n    /* \"#utility.yul\":5164:5231   */\n  tag_65\n  jump\t// in\ntag_137:\n    /* \"#utility.yul\":5258:5259   */\n  0x00\n    /* \"#utility.yul\":5282:5286   */\n  0x20\n    /* \"#utility.yul\":5269:5286   */\n  swap1\n  pop\n    /* \"#utility.yul\":5314:5316   */\n  0x1f\n    /* \"#utility.yul\":5306:5312   */\n  dup4\n    /* \"#utility.yul\":5303:5317   */\n  gt\n    /* \"#utility.yul\":5331:5332   */\n  0x01\n    /* \"#utility.yul\":5326:5944   */\n  dup2\n  eq\n  tag_139\n  jumpi\n    /* \"#utility.yul\":5988:5989   */\n  0x00\n    /* \"#utility.yul\":6005:6011   */\n  dup5\n    /* \"#utility.yul\":6002:6079   */\n  iszero\n  tag_140\n  jumpi\n    /* \"#utility.yul\":6054:6063   */\n  dup3\n    /* \"#utility.yul\":6049:6052   */\n  dup8\n    /* \"#utility.yul\":6045:6064   */\n  add\n    /* \"#utility.yul\":6039:6065   */\n  mload\n    /* \"#utility.yul\":6030:6065   */\n  swap1\n  pop\n    /* \"#utility.yul\":6002:6079   */\ntag_140:\n    /* \"#utility.yul\":6105:6172   */\n  tag_141\n    /* \"#utility.yul\":6165:6171   */\n  dup6\n    /* \"#utility.yul\":6158:6163   */\n  dup3\n    /* \"#utility.yul\":6105:6172   */\n  tag_68\n  jump\t// in\ntag_141:\n    /* \"#utility.yul\":6099:6103   */\n  dup7\n    /* \"#utility.yul\":6092:6173   */\n  sstore\n    /* \"#utility.yul\":5961:6183   */\n  pop\n    /* \"#utility.yul\":5296:6183   */\n  jump(tag_138)\n    /* \"#utility.yul\":5326:5944   */\ntag_139:\n    /* \"#utility.yul\":5378:5382   */\n  0x1f\n    /* \"#utility.yul\":5374:5383   */\n  not\n    /* \"#utility.yul\":5366:5372   */\n  dup5\n    /* \"#utility.yul\":5362:5384   */\n  and\n    /* \"#utility.yul\":5412:5449   */\n  tag_142\n    /* \"#utility.yul\":5444:5448   */\n  dup7\n    /* \"#utility.yul\":5412:5449   */\n  tag_54\n  jump\t// in\ntag_142:\n    /* \"#utility.yul\":5471:5472   */\n  0x00\n    /* \"#utility.yul\":5485:5693   */\ntag_143:\n    /* \"#utility.yul\":5499:5506   */\n  dup3\n    /* \"#utility.yul\":5496:5497   */\n  dup2\n    /* \"#utility.yul\":5493:5507   */\n  lt\n    /* \"#utility.yul\":5485:5693   */\n  iszero\n  tag_145\n  jumpi\n    /* \"#utility.yul\":5578:5587   */\n  dup5\n    /* \"#utility.yul\":5573:5576   */\n  dup10\n    /* \"#utility.yul\":5569:5588   */\n  add\n    /* \"#utility.yul\":5563:5589   */\n  mload\n    /* \"#utility.yul\":5555:5561   */\n  dup3\n    /* \"#utility.yul\":5548:5590   */\n  sstore\n    /* \"#utility.yul\":5629:5630   */\n  0x01\n    /* \"#utility.yul\":5621:5627   */\n  dup3\n    /* \"#utility.yul\":5617:5631   */\n  add\n    /* \"#utility.yul\":5607:5631   */\n  swap2\n  pop\n    /* \"#utility.yul\":5676:5678   */\n  0x20\n    /* \"#utility.yul\":5665:5674   */\n  dup6\n    /* \"#utility.yul\":5661:5679   */\n  add\n    /* \"#utility.yul\":5648:5679   */\n  swap5\n  pop\n    /* \"#utility.yul\":5522:5526   */\n  0x20\n    /* \"#utility.yul\":5519:5520   */\n  dup2\n    /* \"#utility.yul\":5515:5527   */\n  add\n    /* \"#utility.yul\":5510:5527   */\n  swap1\n  pop\n    /* \"#utility.yul\":5485:5693   */\n  jump(tag_143)\ntag_145:\n    /* \"#utility.yul\":5721:5727   */\n  dup7\n    /* \"#utility.yul\":5712:5719   */\n  dup4\n    /* \"#utility.yul\":5709:5728   */\n  lt\n    /* \"#utility.yul\":5706:5885   */\n  iszero\n  tag_146\n  jumpi\n    /* \"#utility.yul\":5779:5788   */\n  dup5\n    /* \"#utility.yul\":5774:5777   */\n  dup10\n    /* \"#utility.yul\":5770:5789   */\n  add\n    /* \"#utility.yul\":5764:5790   */\n  mload\n    /* \"#utility.yul\":5822:5870   */\n  tag_147\n    /* \"#utility.yul\":5864:5868   */\n  0x1f\n    /* \"#utility.yul\":5856:5862   */\n  dup10\n    /* \"#utility.yul\":5852:5869   */\n  and\n    /* \"#utility.yul\":5841:5850   */\n  dup3\n    /* \"#utility.yul\":5822:5870   */\n  tag_67\n  jump\t// in\ntag_147:\n    /* \"#utility.yul\":5814:5820   */\n  dup4\n    /* \"#utility.yul\":5807:5871   */\n  sstore\n    /* \"#utility.yul\":5729:5885   */\n  pop\n    /* \"#utility.yul\":5706:5885   */\ntag_146:\n    /* \"#utility.yul\":5931:5932   */\n  0x01\n    /* \"#utility.yul\":5927:5928   */\n  0x02\n    /* \"#utility.yul\":5919:5925   */\n  dup9\n    /* \"#utility.yul\":5915:5929   */\n  mul\n    /* \"#utility.yul\":5911:5933   */\n  add\n    /* \"#utility.yul\":5905:5909   */\n  dup9\n    /* \"#utility.yul\":5898:5934   */\n  sstore\n    /* \"#utility.yul\":5333:5944   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":5296:6183   */\ntag_138:\n  pop\n    /* \"#utility.yul\":4886:6189   */\n  pop\n  pop\n  pop\n    /* \"#utility.yul\":4794:6189   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6195:6321   */\ntag_69:\n    /* \"#utility.yul\":6232:6239   */\n  0x00\n    /* \"#utility.yul\":6272:6314   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":6265:6270   */\n  dup3\n    /* \"#utility.yul\":6261:6315   */\n  and\n    /* \"#utility.yul\":6250:6315   */\n  swap1\n  pop\n    /* \"#utility.yul\":6195:6321   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6327:6423   */\ntag_70:\n    /* \"#utility.yul\":6364:6371   */\n  0x00\n    /* \"#utility.yul\":6393:6417   */\n  tag_150\n    /* \"#utility.yul\":6411:6416   */\n  dup3\n    /* \"#utility.yul\":6393:6417   */\n  tag_69\n  jump\t// in\ntag_150:\n    /* \"#utility.yul\":6382:6417   */\n  swap1\n  pop\n    /* \"#utility.yul\":6327:6423   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6429:6547   */\ntag_71:\n    /* \"#utility.yul\":6516:6540   */\n  tag_152\n    /* \"#utility.yul\":6534:6539   */\n  dup2\n    /* \"#utility.yul\":6516:6540   */\n  tag_70\n  jump\t// in\ntag_152:\n    /* \"#utility.yul\":6511:6514   */\n  dup3\n    /* \"#utility.yul\":6504:6541   */\n  mstore\n    /* \"#utility.yul\":6429:6547   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6553:6775   */\ntag_30:\n    /* \"#utility.yul\":6646:6650   */\n  0x00\n    /* \"#utility.yul\":6684:6686   */\n  0x20\n    /* \"#utility.yul\":6673:6682   */\n  dup3\n    /* \"#utility.yul\":6669:6687   */\n  add\n    /* \"#utility.yul\":6661:6687   */\n  swap1\n  pop\n    /* \"#utility.yul\":6697:6768   */\n  tag_154\n    /* \"#utility.yul\":6765:6766   */\n  0x00\n    /* \"#utility.yul\":6754:6763   */\n  dup4\n    /* \"#utility.yul\":6750:6767   */\n  add\n    /* \"#utility.yul\":6741:6747   */\n  dup5\n    /* \"#utility.yul\":6697:6768   */\n  tag_71\n  jump\t// in\ntag_154:\n    /* \"#utility.yul\":6553:6775   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":6781:6961   */\ntag_72:\n    /* \"#utility.yul\":6829:6906   */\n  0x4e487b7100000000000000000000000000000000000000000000000000000000\n    /* \"#utility.yul\":6826:6827   */\n  0x00\n    /* \"#utility.yul\":6819:6907   */\n  mstore\n    /* \"#utility.yul\":6926:6930   */\n  0x11\n    /* \"#utility.yul\":6923:6924   */\n  0x04\n    /* \"#utility.yul\":6916:6931   */\n  mstore\n    /* \"#utility.yul\":6950:6954   */\n  0x24\n    /* \"#utility.yul\":6947:6948   */\n  0x00\n    /* \"#utility.yul\":6940:6955   */\n  revert\n    /* \"#utility.yul\":6967:7158   */\ntag_36:\n    /* \"#utility.yul\":7007:7010   */\n  0x00\n    /* \"#utility.yul\":7026:7046   */\n  tag_157\n    /* \"#utility.yul\":7044:7045   */\n  dup3\n    /* \"#utility.yul\":7026:7046   */\n  tag_48\n  jump\t// in\ntag_157:\n    /* \"#utility.yul\":7021:7046   */\n  swap2\n  pop\n    /* \"#utility.yul\":7060:7080   */\n  tag_158\n    /* \"#utility.yul\":7078:7079   */\n  dup4\n    /* \"#utility.yul\":7060:7080   */\n  tag_48\n  jump\t// in\ntag_158:\n    /* \"#utility.yul\":7055:7080   */\n  swap3\n  pop\n    /* \"#utility.yul\":7103:7104   */\n  dup3\n    /* \"#utility.yul\":7100:7101   */\n  dup3\n    /* \"#utility.yul\":7096:7105   */\n  add\n    /* \"#utility.yul\":7089:7105   */\n  swap1\n  pop\n    /* \"#utility.yul\":7124:7127   */\n  dup1\n    /* \"#utility.yul\":7121:7122   */\n  dup3\n    /* \"#utility.yul\":7118:7128   */\n  gt\n    /* \"#utility.yul\":7115:7151   */\n  iszero\n  tag_159\n  jumpi\n    /* \"#utility.yul\":7131:7149   */\n  tag_160\n  tag_72\n  jump\t// in\ntag_160:\n    /* \"#utility.yul\":7115:7151   */\ntag_159:\n    /* \"#utility.yul\":6967:7158   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7164:7282   */\ntag_73:\n    /* \"#utility.yul\":7251:7275   */\n  tag_162\n    /* \"#utility.yul\":7269:7274   */\n  dup2\n    /* \"#utility.yul\":7251:7275   */\n  tag_48\n  jump\t// in\ntag_162:\n    /* \"#utility.yul\":7246:7249   */\n  dup3\n    /* \"#utility.yul\":7239:7276   */\n  mstore\n    /* \"#utility.yul\":7164:7282   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7288:7730   */\ntag_40:\n    /* \"#utility.yul\":7437:7441   */\n  0x00\n    /* \"#utility.yul\":7475:7477   */\n  0x60\n    /* \"#utility.yul\":7464:7473   */\n  dup3\n    /* \"#utility.yul\":7460:7478   */\n  add\n    /* \"#utility.yul\":7452:7478   */\n  swap1\n  pop\n    /* \"#utility.yul\":7488:7559   */\n  tag_164\n    /* \"#utility.yul\":7556:7557   */\n  0x00\n    /* \"#utility.yul\":7545:7554   */\n  dup4\n    /* \"#utility.yul\":7541:7558   */\n  add\n    /* \"#utility.yul\":7532:7538   */\n  dup7\n    /* \"#utility.yul\":7488:7559   */\n  tag_71\n  jump\t// in\ntag_164:\n    /* \"#utility.yul\":7569:7641   */\n  tag_165\n    /* \"#utility.yul\":7637:7639   */\n  0x20\n    /* \"#utility.yul\":7626:7635   */\n  dup4\n    /* \"#utility.yul\":7622:7640   */\n  add\n    /* \"#utility.yul\":7613:7619   */\n  dup6\n    /* \"#utility.yul\":7569:7641   */\n  tag_73\n  jump\t// in\ntag_165:\n    /* \"#utility.yul\":7651:7723   */\n  tag_166\n    /* \"#utility.yul\":7719:7721   */\n  0x40\n    /* \"#utility.yul\":7708:7717   */\n  dup4\n    /* \"#utility.yul\":7704:7722   */\n  add\n    /* \"#utility.yul\":7695:7701   */\n  dup5\n    /* \"#utility.yul\":7651:7723   */\n  tag_73\n  jump\t// in\ntag_166:\n    /* \"#utility.yul\":7288:7730   */\n  swap5\n  swap4\n  pop\n  pop\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7736:7958   */\ntag_44:\n    /* \"#utility.yul\":7829:7833   */\n  0x00\n    /* \"#utility.yul\":7867:7869   */\n  0x20\n    /* \"#utility.yul\":7856:7865   */\n  dup3\n    /* \"#utility.yul\":7852:7870   */\n  add\n    /* \"#utility.yul\":7844:7870   */\n  swap1\n  pop\n    /* \"#utility.yul\":7880:7951   */\n  tag_168\n    /* \"#utility.yul\":7948:7949   */\n  0x00\n    /* \"#utility.yul\":7937:7946   */\n  dup4\n    /* \"#utility.yul\":7933:7950   */\n  add\n    /* \"#utility.yul\":7924:7930   */\n  dup5\n    /* \"#utility.yul\":7880:7951   */\n  tag_73\n  jump\t// in\ntag_168:\n    /* \"#utility.yul\":7736:7958   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"TRTtheSalad.sol\":86:2742  contract TRTtheSalad is ERC20 {... */\ntag_26:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"TRTtheSalad.sol\":86:2742  contract TRTtheSalad is ERC20 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x95d89b41\n      gt\n      tag_21\n      jumpi\n      dup1\n      0xa9059cbb\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xa9059cbb\n      eq\n      tag_16\n      jumpi\n      dup1\n      0xc4e41b22\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xdd62ed3e\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xecf35cca\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xf1850af8\n      eq\n      tag_20\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x95d89b41\n      eq\n      tag_12\n      jumpi\n      dup1\n      0x9b96eece\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x9dc29fac\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x9f0c8125\n      eq\n      tag_15\n      jumpi\n      jump(tag_2)\n    tag_21:\n      dup1\n      0x313ce567\n      gt\n      tag_23\n      jumpi\n      dup1\n      0x313ce567\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3eaaf86b\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x40c10f19\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x70a08231\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x862b092b\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x06fdde03\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x095ea7b3\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x18160ddd\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x23b872dd\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"ERC20.sol\":1971:2060  function name() public view virtual returns (string memory) {... */\n    tag_3:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TRTtheSalad.sol\":1538:1740  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_4:\n      tag_28\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      tag_31\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_32\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3041:3138  function totalSupply() public view virtual returns (uint256) {... */\n    tag_5:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TRTtheSalad.sol\":1848:2158  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n    tag_6:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n      tag_41\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2899:2981  function decimals() public view virtual returns (uint8) {... */\n    tag_7:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TRTtheSalad.sol\":253:280  uint256 public _totalSupply */\n    tag_8:\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      tag_49\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TRTtheSalad.sol\":686:869  function mint(address to, uint256 amount) public {... */\n    tag_9:\n      tag_50\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_51\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_51:\n      tag_52\n      jump\t// in\n    tag_50:\n      stop\n        /* \"ERC20.sol\":3196:3312  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_10:\n      tag_53\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_54\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      tag_57\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TRTtheSalad.sol\":2433:2529  function getTokenName() public view returns (string memory) {... */\n    tag_11:\n      tag_58\n      tag_59\n      jump\t// in\n    tag_58:\n      mload(0x40)\n      tag_60\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":2173:2266  function symbol() public view virtual returns (string memory) {... */\n    tag_12:\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n      mload(0x40)\n      tag_63\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_63:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TRTtheSalad.sol\":2225:2375  function getBalanceOf(address account) public view returns (uint256) {... */\n    tag_13:\n      tag_64\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_65\n      swap2\n      swap1\n      tag_55\n      jump\t// in\n    tag_65:\n      tag_66\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      tag_67\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_67:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TRTtheSalad.sol\":934:1121  function burn(address from, uint256 amount) public {... */\n    tag_14:\n      tag_68\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_69\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_69:\n      tag_70\n      jump\t// in\n    tag_68:\n      stop\n        /* \"TRTtheSalad.sol\":189:213  string public _tokenName */\n    tag_15:\n      tag_71\n      tag_72\n      jump\t// in\n    tag_71:\n      mload(0x40)\n      tag_73\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_73:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TRTtheSalad.sol\":1232:1427  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_16:\n      tag_74\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_75\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_75:\n      tag_76\n      jump\t// in\n    tag_74:\n      mload(0x40)\n      tag_77\n      swap2\n      swap1\n      tag_33\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TRTtheSalad.sol\":2645:2739  function getTotalSupply() public view returns (uint256) {... */\n    tag_17:\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n      mload(0x40)\n      tag_80\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_80:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":3743:3883  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_18:\n      tag_81\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_82\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_85\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_85:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TRTtheSalad.sol\":220:246  string public _tokenSymbol */\n    tag_19:\n      tag_86\n      tag_87\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      tag_88\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_88:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"TRTtheSalad.sol\":2537:2637  function getTokenSymbol() public view returns (string memory) {... */\n    tag_20:\n      tag_89\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"ERC20.sol\":1971:2060  function name() public view virtual returns (string memory) {... */\n    tag_25:\n        /* \"ERC20.sol\":2016:2029  string memory */\n      0x60\n        /* \"ERC20.sol\":2048:2053  _name */\n      0x03\n        /* \"ERC20.sol\":2041:2053  return _name */\n      dup1\n      sload\n      tag_93\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_95\n      swap1\n      tag_94\n      jump\t// in\n    tag_95:\n      dup1\n      iszero\n      tag_96\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_97\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_96)\n    tag_97:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_98:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_98\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":1971:2060  function name() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"TRTtheSalad.sol\":1538:1740  function approve(address spender, uint256 amount) public override returns (bool) {... */\n    tag_31:\n        /* \"TRTtheSalad.sol\":1613:1617  bool */\n      0x00\n        /* \"TRTtheSalad.sol\":1630:1669  _approve(_msgSender(), spender, amount) */\n      tag_100\n        /* \"TRTtheSalad.sol\":1639:1651  _msgSender() */\n      tag_101\n        /* \"TRTtheSalad.sol\":1639:1649  _msgSender */\n      tag_102\n        /* \"TRTtheSalad.sol\":1639:1651  _msgSender() */\n      jump\t// in\n    tag_101:\n        /* \"TRTtheSalad.sol\":1653:1660  spender */\n      dup5\n        /* \"TRTtheSalad.sol\":1662:1668  amount */\n      dup5\n        /* \"TRTtheSalad.sol\":1630:1638  _approve */\n      tag_103\n        /* \"TRTtheSalad.sol\":1630:1669  _approve(_msgSender(), spender, amount) */\n      jump\t// in\n    tag_100:\n        /* \"TRTtheSalad.sol\":1728:1732  true */\n      0x01\n        /* \"TRTtheSalad.sol\":1721:1732  return true */\n      swap1\n      pop\n        /* \"TRTtheSalad.sol\":1538:1740  function approve(address spender, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3041:3138  function totalSupply() public view virtual returns (uint256) {... */\n    tag_35:\n        /* \"ERC20.sol\":3093:3100  uint256 */\n      0x00\n        /* \"ERC20.sol\":3119:3131  _totalSupply */\n      sload(0x02)\n        /* \"ERC20.sol\":3112:3131  return _totalSupply */\n      swap1\n      pop\n        /* \"ERC20.sol\":3041:3138  function totalSupply() public view virtual returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"TRTtheSalad.sol\":1848:2158  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n    tag_41:\n        /* \"TRTtheSalad.sol\":1937:1941  bool */\n      0x00\n        /* \"TRTtheSalad.sol\":1954:1981  _transfer(from, to, amount) */\n      tag_106\n        /* \"TRTtheSalad.sol\":1964:1968  from */\n      dup5\n        /* \"TRTtheSalad.sol\":1970:1972  to */\n      dup5\n        /* \"TRTtheSalad.sol\":1974:1980  amount */\n      dup5\n        /* \"TRTtheSalad.sol\":1954:1963  _transfer */\n      tag_107\n        /* \"TRTtheSalad.sol\":1954:1981  _transfer(from, to, amount) */\n      jump\t// in\n    tag_106:\n        /* \"TRTtheSalad.sol\":2034:2102  _approve(from, _msgSender(), allowance(from, _msgSender()) - amount) */\n      tag_108\n        /* \"TRTtheSalad.sol\":2043:2047  from */\n      dup5\n        /* \"TRTtheSalad.sol\":2049:2061  _msgSender() */\n      tag_109\n        /* \"TRTtheSalad.sol\":2049:2059  _msgSender */\n      tag_102\n        /* \"TRTtheSalad.sol\":2049:2061  _msgSender() */\n      jump\t// in\n    tag_109:\n        /* \"TRTtheSalad.sol\":2095:2101  amount */\n      dup5\n        /* \"TRTtheSalad.sol\":2063:2092  allowance(from, _msgSender()) */\n      tag_110\n        /* \"TRTtheSalad.sol\":2073:2077  from */\n      dup9\n        /* \"TRTtheSalad.sol\":2079:2091  _msgSender() */\n      tag_111\n        /* \"TRTtheSalad.sol\":2079:2089  _msgSender */\n      tag_102\n        /* \"TRTtheSalad.sol\":2079:2091  _msgSender() */\n      jump\t// in\n    tag_111:\n        /* \"TRTtheSalad.sol\":2063:2072  allowance */\n      tag_84\n        /* \"TRTtheSalad.sol\":2063:2092  allowance(from, _msgSender()) */\n      jump\t// in\n    tag_110:\n        /* \"TRTtheSalad.sol\":2063:2101  allowance(from, _msgSender()) - amount */\n      tag_112\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"TRTtheSalad.sol\":2034:2042  _approve */\n      tag_103\n        /* \"TRTtheSalad.sol\":2034:2102  _approve(from, _msgSender(), allowance(from, _msgSender()) - amount) */\n      jump\t// in\n    tag_108:\n        /* \"TRTtheSalad.sol\":2146:2150  true */\n      0x01\n        /* \"TRTtheSalad.sol\":2139:2150  return true */\n      swap1\n      pop\n        /* \"TRTtheSalad.sol\":1848:2158  function transferFrom(address from, address to, uint256 amount) public override returns (bool) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":2899:2981  function decimals() public view virtual returns (uint8) {... */\n    tag_44:\n        /* \"ERC20.sol\":2948:2953  uint8 */\n      0x00\n        /* \"ERC20.sol\":2972:2974  18 */\n      0x12\n        /* \"ERC20.sol\":2965:2974  return 18 */\n      swap1\n      pop\n        /* \"ERC20.sol\":2899:2981  function decimals() public view virtual returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"TRTtheSalad.sol\":253:280  uint256 public _totalSupply */\n    tag_48:\n      sload(0x07)\n      dup2\n      jump\t// out\n        /* \"TRTtheSalad.sol\":686:869  function mint(address to, uint256 amount) public {... */\n    tag_52:\n        /* \"TRTtheSalad.sol\":746:763  _mint(to, amount) */\n      tag_116\n        /* \"TRTtheSalad.sol\":752:754  to */\n      dup3\n        /* \"TRTtheSalad.sol\":756:762  amount */\n      dup3\n        /* \"TRTtheSalad.sol\":746:751  _mint */\n      tag_117\n        /* \"TRTtheSalad.sol\":746:763  _mint(to, amount) */\n      jump\t// in\n    tag_116:\n        /* \"TRTtheSalad.sol\":828:834  amount */\n      dup1\n        /* \"TRTtheSalad.sol\":812:824  _totalSupply */\n      0x07\n      0x00\n        /* \"TRTtheSalad.sol\":812:834  _totalSupply += amount */\n      dup3\n      dup3\n      sload\n      tag_118\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_118:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TRTtheSalad.sol\":686:869  function mint(address to, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":3196:3312  function balanceOf(address account) public view virtual returns (uint256) {... */\n    tag_56:\n        /* \"ERC20.sol\":3261:3268  uint256 */\n      0x00\n        /* \"ERC20.sol\":3287:3296  _balances */\n      dup1\n        /* \"ERC20.sol\":3287:3305  _balances[account] */\n      0x00\n        /* \"ERC20.sol\":3297:3304  account */\n      dup4\n        /* \"ERC20.sol\":3287:3305  _balances[account] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":3280:3305  return _balances[account] */\n      swap1\n      pop\n        /* \"ERC20.sol\":3196:3312  function balanceOf(address account) public view virtual returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TRTtheSalad.sol\":2433:2529  function getTokenName() public view returns (string memory) {... */\n    tag_59:\n        /* \"TRTtheSalad.sol\":2478:2491  string memory */\n      0x60\n        /* \"TRTtheSalad.sol\":2511:2521  _tokenName */\n      0x05\n        /* \"TRTtheSalad.sol\":2504:2521  return _tokenName */\n      dup1\n      sload\n      tag_122\n      swap1\n      tag_94\n      jump\t// in\n    tag_122:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_123\n      swap1\n      tag_94\n      jump\t// in\n    tag_123:\n      dup1\n      iszero\n      tag_124\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_125\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_124)\n    tag_125:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_126:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_126\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_124:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"TRTtheSalad.sol\":2433:2529  function getTokenName() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":2173:2266  function symbol() public view virtual returns (string memory) {... */\n    tag_62:\n        /* \"ERC20.sol\":2220:2233  string memory */\n      0x60\n        /* \"ERC20.sol\":2252:2259  _symbol */\n      0x04\n        /* \"ERC20.sol\":2245:2259  return _symbol */\n      dup1\n      sload\n      tag_128\n      swap1\n      tag_94\n      jump\t// in\n    tag_128:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_129\n      swap1\n      tag_94\n      jump\t// in\n    tag_129:\n      dup1\n      iszero\n      tag_130\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_131\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_130)\n    tag_131:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_132:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_132\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_130:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"ERC20.sol\":2173:2266  function symbol() public view virtual returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"TRTtheSalad.sol\":2225:2375  function getBalanceOf(address account) public view returns (uint256) {... */\n    tag_66:\n        /* \"TRTtheSalad.sol\":2285:2292  uint256 */\n      0x00\n        /* \"TRTtheSalad.sol\":2312:2330  balanceOf(account) */\n      tag_134\n        /* \"TRTtheSalad.sol\":2322:2329  account */\n      dup3\n        /* \"TRTtheSalad.sol\":2312:2321  balanceOf */\n      tag_56\n        /* \"TRTtheSalad.sol\":2312:2330  balanceOf(account) */\n      jump\t// in\n    tag_134:\n        /* \"TRTtheSalad.sol\":2305:2330  return balanceOf(account) */\n      swap1\n      pop\n        /* \"TRTtheSalad.sol\":2225:2375  function getBalanceOf(address account) public view returns (uint256) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"TRTtheSalad.sol\":934:1121  function burn(address from, uint256 amount) public {... */\n    tag_70:\n        /* \"TRTtheSalad.sol\":996:1015  _burn(from, amount) */\n      tag_136\n        /* \"TRTtheSalad.sol\":1002:1006  from */\n      dup3\n        /* \"TRTtheSalad.sol\":1008:1014  amount */\n      dup3\n        /* \"TRTtheSalad.sol\":996:1001  _burn */\n      tag_137\n        /* \"TRTtheSalad.sol\":996:1015  _burn(from, amount) */\n      jump\t// in\n    tag_136:\n        /* \"TRTtheSalad.sol\":1080:1086  amount */\n      dup1\n        /* \"TRTtheSalad.sol\":1064:1076  _totalSupply */\n      0x07\n      0x00\n        /* \"TRTtheSalad.sol\":1064:1086  _totalSupply -= amount */\n      dup3\n      dup3\n      sload\n      tag_138\n      swap2\n      swap1\n      tag_113\n      jump\t// in\n    tag_138:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"TRTtheSalad.sol\":934:1121  function burn(address from, uint256 amount) public {... */\n      pop\n      pop\n      jump\t// out\n        /* \"TRTtheSalad.sol\":189:213  string public _tokenName */\n    tag_72:\n      0x05\n      dup1\n      sload\n      tag_139\n      swap1\n      tag_94\n      jump\t// in\n    tag_139:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_140\n      swap1\n      tag_94\n      jump\t// in\n    tag_140:\n      dup1\n      iszero\n      tag_141\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_142\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_141)\n    tag_142:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_143:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_143\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_141:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"TRTtheSalad.sol\":1232:1427  function transfer(address to, uint256 amount) public override returns (bool) {... */\n    tag_76:\n        /* \"TRTtheSalad.sol\":1303:1307  bool */\n      0x00\n        /* \"TRTtheSalad.sol\":1320:1355  _transfer(_msgSender(), to, amount) */\n      tag_145\n        /* \"TRTtheSalad.sol\":1330:1342  _msgSender() */\n      tag_146\n        /* \"TRTtheSalad.sol\":1330:1340  _msgSender */\n      tag_102\n        /* \"TRTtheSalad.sol\":1330:1342  _msgSender() */\n      jump\t// in\n    tag_146:\n        /* \"TRTtheSalad.sol\":1344:1346  to */\n      dup5\n        /* \"TRTtheSalad.sol\":1348:1354  amount */\n      dup5\n        /* \"TRTtheSalad.sol\":1320:1329  _transfer */\n      tag_107\n        /* \"TRTtheSalad.sol\":1320:1355  _transfer(_msgSender(), to, amount) */\n      jump\t// in\n    tag_145:\n        /* \"TRTtheSalad.sol\":1415:1419  true */\n      0x01\n        /* \"TRTtheSalad.sol\":1408:1419  return true */\n      swap1\n      pop\n        /* \"TRTtheSalad.sol\":1232:1427  function transfer(address to, uint256 amount) public override returns (bool) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TRTtheSalad.sol\":2645:2739  function getTotalSupply() public view returns (uint256) {... */\n    tag_79:\n        /* \"TRTtheSalad.sol\":2692:2699  uint256 */\n      0x00\n        /* \"TRTtheSalad.sol\":2719:2731  _totalSupply */\n      sload(0x07)\n        /* \"TRTtheSalad.sol\":2712:2731  return _totalSupply */\n      swap1\n      pop\n        /* \"TRTtheSalad.sol\":2645:2739  function getTotalSupply() public view returns (uint256) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":3743:3883  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n    tag_84:\n        /* \"ERC20.sol\":3823:3830  uint256 */\n      0x00\n        /* \"ERC20.sol\":3849:3860  _allowances */\n      0x01\n        /* \"ERC20.sol\":3849:3867  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":3861:3866  owner */\n      dup5\n        /* \"ERC20.sol\":3849:3867  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":3849:3876  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":3868:3875  spender */\n      dup4\n        /* \"ERC20.sol\":3849:3876  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":3842:3876  return _allowances[owner][spender] */\n      swap1\n      pop\n        /* \"ERC20.sol\":3743:3883  function allowance(address owner, address spender) public view virtual returns (uint256) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"TRTtheSalad.sol\":220:246  string public _tokenSymbol */\n    tag_87:\n      0x06\n      dup1\n      sload\n      tag_149\n      swap1\n      tag_94\n      jump\t// in\n    tag_149:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_150\n      swap1\n      tag_94\n      jump\t// in\n    tag_150:\n      dup1\n      iszero\n      tag_151\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_152\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_151)\n    tag_152:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_153:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_153\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_151:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      jump\t// out\n        /* \"TRTtheSalad.sol\":2537:2637  function getTokenSymbol() public view returns (string memory) {... */\n    tag_90:\n        /* \"TRTtheSalad.sol\":2584:2597  string memory */\n      0x60\n        /* \"TRTtheSalad.sol\":2617:2629  _tokenSymbol */\n      0x06\n        /* \"TRTtheSalad.sol\":2610:2629  return _tokenSymbol */\n      dup1\n      sload\n      tag_155\n      swap1\n      tag_94\n      jump\t// in\n    tag_155:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_156\n      swap1\n      tag_94\n      jump\t// in\n    tag_156:\n      dup1\n      iszero\n      tag_157\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_158\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_157)\n    tag_158:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_159:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_159\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_157:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"TRTtheSalad.sol\":2537:2637  function getTokenSymbol() public view returns (string memory) {... */\n      swap1\n      jump\t// out\n        /* \"Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_102:\n        /* \"Context.sol\":709:716  address */\n      0x00\n        /* \"Context.sol\":735:745  msg.sender */\n      caller\n        /* \"Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"ERC20.sol\":8886:9014  function _approve(address owner, address spender, uint256 value) internal {... */\n    tag_103:\n        /* \"ERC20.sol\":8970:9007  _approve(owner, spender, value, true) */\n      tag_162\n        /* \"ERC20.sol\":8979:8984  owner */\n      dup4\n        /* \"ERC20.sol\":8986:8993  spender */\n      dup4\n        /* \"ERC20.sol\":8995:9000  value */\n      dup4\n        /* \"ERC20.sol\":9002:9006  true */\n      0x01\n        /* \"ERC20.sol\":8970:8978  _approve */\n      tag_163\n        /* \"ERC20.sol\":8970:9007  _approve(owner, spender, value, true) */\n      jump\t// in\n    tag_162:\n        /* \"ERC20.sol\":8886:9014  function _approve(address owner, address spender, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":5553:5853  function _transfer(address from, address to, uint256 value) internal {... */\n    tag_107:\n        /* \"ERC20.sol\":5652:5653  0 */\n      0x00\n        /* \"ERC20.sol\":5636:5654  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":5636:5640  from */\n      dup4\n        /* \"ERC20.sol\":5636:5654  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":5632:5718  if (from == address(0)) {... */\n      tag_165\n      jumpi\n        /* \"ERC20.sol\":5704:5705  0 */\n      0x00\n        /* \"ERC20.sol\":5677:5707  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_166\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_166:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":5632:5718  if (from == address(0)) {... */\n    tag_165:\n        /* \"ERC20.sol\":5745:5746  0 */\n      0x00\n        /* \"ERC20.sol\":5731:5747  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":5731:5733  to */\n      dup3\n        /* \"ERC20.sol\":5731:5747  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":5727:5813  if (to == address(0)) {... */\n      tag_168\n      jumpi\n        /* \"ERC20.sol\":5799:5800  0 */\n      0x00\n        /* \"ERC20.sol\":5770:5802  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_169\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_169:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":5727:5813  if (to == address(0)) {... */\n    tag_168:\n        /* \"ERC20.sol\":5822:5846  _update(from, to, value) */\n      tag_170\n        /* \"ERC20.sol\":5830:5834  from */\n      dup4\n        /* \"ERC20.sol\":5836:5838  to */\n      dup4\n        /* \"ERC20.sol\":5840:5845  value */\n      dup4\n        /* \"ERC20.sol\":5822:5829  _update */\n      tag_171\n        /* \"ERC20.sol\":5822:5846  _update(from, to, value) */\n      jump\t// in\n    tag_170:\n        /* \"ERC20.sol\":5553:5853  function _transfer(address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":7618:7826  function _mint(address account, uint256 value) internal {... */\n    tag_117:\n        /* \"ERC20.sol\":7707:7708  0 */\n      0x00\n        /* \"ERC20.sol\":7688:7709  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7688:7695  account */\n      dup3\n        /* \"ERC20.sol\":7688:7709  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":7684:7775  if (account == address(0)) {... */\n      tag_173\n      jumpi\n        /* \"ERC20.sol\":7761:7762  0 */\n      0x00\n        /* \"ERC20.sol\":7732:7764  ERC20InvalidReceiver(address(0)) */\n      mload(0x40)\n      0xec442f0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_174\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_174:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":7684:7775  if (account == address(0)) {... */\n    tag_173:\n        /* \"ERC20.sol\":7784:7819  _update(address(0), account, value) */\n      tag_175\n        /* \"ERC20.sol\":7800:7801  0 */\n      0x00\n        /* \"ERC20.sol\":7804:7811  account */\n      dup4\n        /* \"ERC20.sol\":7813:7818  value */\n      dup4\n        /* \"ERC20.sol\":7784:7791  _update */\n      tag_171\n        /* \"ERC20.sol\":7784:7819  _update(address(0), account, value) */\n      jump\t// in\n    tag_175:\n        /* \"ERC20.sol\":7618:7826  function _mint(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":8144:8350  function _burn(address account, uint256 value) internal {... */\n    tag_137:\n        /* \"ERC20.sol\":8233:8234  0 */\n      0x00\n        /* \"ERC20.sol\":8214:8235  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":8214:8221  account */\n      dup3\n        /* \"ERC20.sol\":8214:8235  account == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":8210:8299  if (account == address(0)) {... */\n      tag_177\n      jumpi\n        /* \"ERC20.sol\":8285:8286  0 */\n      0x00\n        /* \"ERC20.sol\":8258:8288  ERC20InvalidSender(address(0)) */\n      mload(0x40)\n      0x96c6fd1e00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_178\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_178:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":8210:8299  if (account == address(0)) {... */\n    tag_177:\n        /* \"ERC20.sol\":8308:8343  _update(account, address(0), value) */\n      tag_179\n        /* \"ERC20.sol\":8316:8323  account */\n      dup3\n        /* \"ERC20.sol\":8333:8334  0 */\n      0x00\n        /* \"ERC20.sol\":8337:8342  value */\n      dup4\n        /* \"ERC20.sol\":8308:8315  _update */\n      tag_171\n        /* \"ERC20.sol\":8308:8343  _update(account, address(0), value) */\n      jump\t// in\n    tag_179:\n        /* \"ERC20.sol\":8144:8350  function _burn(address account, uint256 value) internal {... */\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":9846:10278  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n    tag_163:\n        /* \"ERC20.sol\":9975:9976  0 */\n      0x00\n        /* \"ERC20.sol\":9958:9977  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":9958:9963  owner */\n      dup5\n        /* \"ERC20.sol\":9958:9977  owner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":9954:10043  if (owner == address(0)) {... */\n      tag_181\n      jumpi\n        /* \"ERC20.sol\":10029:10030  0 */\n      0x00\n        /* \"ERC20.sol\":10000:10032  ERC20InvalidApprover(address(0)) */\n      mload(0x40)\n      0xe602df0500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_182\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_182:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":9954:10043  if (owner == address(0)) {... */\n    tag_181:\n        /* \"ERC20.sol\":10075:10076  0 */\n      0x00\n        /* \"ERC20.sol\":10056:10077  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10056:10063  spender */\n      dup4\n        /* \"ERC20.sol\":10056:10077  spender == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":10052:10142  if (spender == address(0)) {... */\n      tag_183\n      jumpi\n        /* \"ERC20.sol\":10128:10129  0 */\n      0x00\n        /* \"ERC20.sol\":10100:10131  ERC20InvalidSpender(address(0)) */\n      mload(0x40)\n      0x94280d6200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_184\n      swap2\n      swap1\n      tag_167\n      jump\t// in\n    tag_184:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":10052:10142  if (spender == address(0)) {... */\n    tag_183:\n        /* \"ERC20.sol\":10181:10186  value */\n      dup2\n        /* \"ERC20.sol\":10151:10162  _allowances */\n      0x01\n        /* \"ERC20.sol\":10151:10169  _allowances[owner] */\n      0x00\n        /* \"ERC20.sol\":10163:10168  owner */\n      dup7\n        /* \"ERC20.sol\":10151:10169  _allowances[owner] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":10151:10178  _allowances[owner][spender] */\n      0x00\n        /* \"ERC20.sol\":10170:10177  spender */\n      dup6\n        /* \"ERC20.sol\":10151:10178  _allowances[owner][spender] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":10151:10186  _allowances[owner][spender] = value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":10200:10209  emitEvent */\n      dup1\n        /* \"ERC20.sol\":10196:10272  if (emitEvent) {... */\n      iszero\n      tag_185\n      jumpi\n        /* \"ERC20.sol\":10246:10253  spender */\n      dup3\n        /* \"ERC20.sol\":10230:10261  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":10239:10244  owner */\n      dup5\n        /* \"ERC20.sol\":10230:10261  Approval(owner, spender, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925\n        /* \"ERC20.sol\":10255:10260  value */\n      dup5\n        /* \"ERC20.sol\":10230:10261  Approval(owner, spender, value) */\n      mload(0x40)\n      tag_186\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_186:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":10196:10272  if (emitEvent) {... */\n    tag_185:\n        /* \"ERC20.sol\":9846:10278  function _approve(address owner, address spender, uint256 value, bool emitEvent) internal virtual {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"ERC20.sol\":6168:7275  function _update(address from, address to, uint256 value) internal virtual {... */\n    tag_171:\n        /* \"ERC20.sol\":6273:6274  0 */\n      0x00\n        /* \"ERC20.sol\":6257:6275  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":6257:6261  from */\n      dup4\n        /* \"ERC20.sol\":6257:6275  from == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":6253:6793  if (from == address(0)) {... */\n      tag_188\n      jumpi\n        /* \"ERC20.sol\":6409:6414  value */\n      dup1\n        /* \"ERC20.sol\":6393:6405  _totalSupply */\n      0x02\n      0x00\n        /* \"ERC20.sol\":6393:6414  _totalSupply += value */\n      dup3\n      dup3\n      sload\n      tag_189\n      swap2\n      swap1\n      tag_119\n      jump\t// in\n    tag_189:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":6253:6793  if (from == address(0)) {... */\n      jump(tag_190)\n    tag_188:\n        /* \"ERC20.sol\":6445:6464  uint256 fromBalance */\n      0x00\n        /* \"ERC20.sol\":6467:6476  _balances */\n      dup1\n        /* \"ERC20.sol\":6467:6482  _balances[from] */\n      0x00\n        /* \"ERC20.sol\":6477:6481  from */\n      dup6\n        /* \"ERC20.sol\":6467:6482  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"ERC20.sol\":6445:6482  uint256 fromBalance = _balances[from] */\n      swap1\n      pop\n        /* \"ERC20.sol\":6514:6519  value */\n      dup2\n        /* \"ERC20.sol\":6500:6511  fromBalance */\n      dup2\n        /* \"ERC20.sol\":6500:6519  fromBalance < value */\n      lt\n        /* \"ERC20.sol\":6496:6611  if (fromBalance < value) {... */\n      iszero\n      tag_191\n      jumpi\n        /* \"ERC20.sol\":6571:6575  from */\n      dup4\n        /* \"ERC20.sol\":6577:6588  fromBalance */\n      dup2\n        /* \"ERC20.sol\":6590:6595  value */\n      dup4\n        /* \"ERC20.sol\":6546:6596  ERC20InsufficientBalance(from, fromBalance, value) */\n      mload(0x40)\n      0xe450d38c00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_192\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_193\n      jump\t// in\n    tag_192:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"ERC20.sol\":6496:6611  if (fromBalance < value) {... */\n    tag_191:\n        /* \"ERC20.sol\":6763:6768  value */\n      dup2\n        /* \"ERC20.sol\":6749:6760  fromBalance */\n      dup2\n        /* \"ERC20.sol\":6749:6768  fromBalance - value */\n      sub\n        /* \"ERC20.sol\":6731:6740  _balances */\n      0x00\n        /* \"ERC20.sol\":6731:6746  _balances[from] */\n      dup1\n        /* \"ERC20.sol\":6741:6745  from */\n      dup7\n        /* \"ERC20.sol\":6731:6746  _balances[from] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"ERC20.sol\":6731:6768  _balances[from] = fromBalance - value */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":6431:6793  {... */\n      pop\n        /* \"ERC20.sol\":6253:6793  if (from == address(0)) {... */\n    tag_190:\n        /* \"ERC20.sol\":6821:6822  0 */\n      0x00\n        /* \"ERC20.sol\":6807:6823  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":6807:6809  to */\n      dup3\n        /* \"ERC20.sol\":6807:6823  to == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"ERC20.sol\":6803:7228  if (to == address(0)) {... */\n      tag_194\n      jumpi\n        /* \"ERC20.sol\":6986:6991  value */\n      dup1\n        /* \"ERC20.sol\":6970:6982  _totalSupply */\n      0x02\n      0x00\n        /* \"ERC20.sol\":6970:6991  _totalSupply -= value */\n      dup3\n      dup3\n      sload\n      sub\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":6803:7228  if (to == address(0)) {... */\n      jump(tag_195)\n    tag_194:\n        /* \"ERC20.sol\":7198:7203  value */\n      dup1\n        /* \"ERC20.sol\":7181:7190  _balances */\n      0x00\n        /* \"ERC20.sol\":7181:7194  _balances[to] */\n      dup1\n        /* \"ERC20.sol\":7191:7193  to */\n      dup5\n        /* \"ERC20.sol\":7181:7194  _balances[to] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"ERC20.sol\":7181:7203  _balances[to] += value */\n      dup3\n      dup3\n      sload\n      add\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"ERC20.sol\":6803:7228  if (to == address(0)) {... */\n    tag_195:\n        /* \"ERC20.sol\":7258:7260  to */\n      dup2\n        /* \"ERC20.sol\":7243:7268  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"ERC20.sol\":7252:7256  from */\n      dup4\n        /* \"ERC20.sol\":7243:7268  Transfer(from, to, value) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef\n        /* \"ERC20.sol\":7262:7267  value */\n      dup4\n        /* \"ERC20.sol\":7243:7268  Transfer(from, to, value) */\n      mload(0x40)\n      tag_196\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_196:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"ERC20.sol\":6168:7275  function _update(address from, address to, uint256 value) internal virtual {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:106   */\n    tag_197:\n        /* \"#utility.yul\":59:65   */\n      0x00\n        /* \"#utility.yul\":93:98   */\n      dup2\n        /* \"#utility.yul\":87:99   */\n      mload\n        /* \"#utility.yul\":77:99   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:106   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":112:281   */\n    tag_198:\n        /* \"#utility.yul\":196:207   */\n      0x00\n        /* \"#utility.yul\":230:236   */\n      dup3\n        /* \"#utility.yul\":225:228   */\n      dup3\n        /* \"#utility.yul\":218:237   */\n      mstore\n        /* \"#utility.yul\":270:274   */\n      0x20\n        /* \"#utility.yul\":265:268   */\n      dup3\n        /* \"#utility.yul\":261:275   */\n      add\n        /* \"#utility.yul\":246:275   */\n      swap1\n      pop\n        /* \"#utility.yul\":112:281   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":287:426   */\n    tag_199:\n        /* \"#utility.yul\":376:382   */\n      dup3\n        /* \"#utility.yul\":371:374   */\n      dup2\n        /* \"#utility.yul\":366:369   */\n      dup4\n        /* \"#utility.yul\":360:383   */\n      mcopy\n        /* \"#utility.yul\":417:418   */\n      0x00\n        /* \"#utility.yul\":408:414   */\n      dup4\n        /* \"#utility.yul\":403:406   */\n      dup4\n        /* \"#utility.yul\":399:415   */\n      add\n        /* \"#utility.yul\":392:419   */\n      mstore\n        /* \"#utility.yul\":287:426   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":432:534   */\n    tag_200:\n        /* \"#utility.yul\":473:479   */\n      0x00\n        /* \"#utility.yul\":524:526   */\n      0x1f\n        /* \"#utility.yul\":520:527   */\n      not\n        /* \"#utility.yul\":515:517   */\n      0x1f\n        /* \"#utility.yul\":508:513   */\n      dup4\n        /* \"#utility.yul\":504:518   */\n      add\n        /* \"#utility.yul\":500:528   */\n      and\n        /* \"#utility.yul\":490:528   */\n      swap1\n      pop\n        /* \"#utility.yul\":432:534   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":540:917   */\n    tag_201:\n        /* \"#utility.yul\":628:631   */\n      0x00\n        /* \"#utility.yul\":656:695   */\n      tag_226\n        /* \"#utility.yul\":689:694   */\n      dup3\n        /* \"#utility.yul\":656:695   */\n      tag_197\n      jump\t// in\n    tag_226:\n        /* \"#utility.yul\":711:782   */\n      tag_227\n        /* \"#utility.yul\":775:781   */\n      dup2\n        /* \"#utility.yul\":770:773   */\n      dup6\n        /* \"#utility.yul\":711:782   */\n      tag_198\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":704:782   */\n      swap4\n      pop\n        /* \"#utility.yul\":791:856   */\n      tag_228\n        /* \"#utility.yul\":849:855   */\n      dup2\n        /* \"#utility.yul\":844:847   */\n      dup6\n        /* \"#utility.yul\":837:841   */\n      0x20\n        /* \"#utility.yul\":830:835   */\n      dup7\n        /* \"#utility.yul\":826:842   */\n      add\n        /* \"#utility.yul\":791:856   */\n      tag_199\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":881:910   */\n      tag_229\n        /* \"#utility.yul\":903:909   */\n      dup2\n        /* \"#utility.yul\":881:910   */\n      tag_200\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":876:879   */\n      dup5\n        /* \"#utility.yul\":872:911   */\n      add\n        /* \"#utility.yul\":865:911   */\n      swap2\n      pop\n        /* \"#utility.yul\":632:917   */\n      pop\n        /* \"#utility.yul\":540:917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":923:1236   */\n    tag_27:\n        /* \"#utility.yul\":1036:1040   */\n      0x00\n        /* \"#utility.yul\":1074:1076   */\n      0x20\n        /* \"#utility.yul\":1063:1072   */\n      dup3\n        /* \"#utility.yul\":1059:1077   */\n      add\n        /* \"#utility.yul\":1051:1077   */\n      swap1\n      pop\n        /* \"#utility.yul\":1123:1132   */\n      dup2\n        /* \"#utility.yul\":1117:1121   */\n      dup2\n        /* \"#utility.yul\":1113:1133   */\n      sub\n        /* \"#utility.yul\":1109:1110   */\n      0x00\n        /* \"#utility.yul\":1098:1107   */\n      dup4\n        /* \"#utility.yul\":1094:1111   */\n      add\n        /* \"#utility.yul\":1087:1134   */\n      mstore\n        /* \"#utility.yul\":1151:1229   */\n      tag_231\n        /* \"#utility.yul\":1224:1228   */\n      dup2\n        /* \"#utility.yul\":1215:1221   */\n      dup5\n        /* \"#utility.yul\":1151:1229   */\n      tag_201\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":1143:1229   */\n      swap1\n      pop\n        /* \"#utility.yul\":923:1236   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1323:1440   */\n    tag_203:\n        /* \"#utility.yul\":1432:1433   */\n      0x00\n        /* \"#utility.yul\":1429:1430   */\n      dup1\n        /* \"#utility.yul\":1422:1434   */\n      revert\n        /* \"#utility.yul\":1569:1695   */\n    tag_205:\n        /* \"#utility.yul\":1606:1613   */\n      0x00\n        /* \"#utility.yul\":1646:1688   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1639:1644   */\n      dup3\n        /* \"#utility.yul\":1635:1689   */\n      and\n        /* \"#utility.yul\":1624:1689   */\n      swap1\n      pop\n        /* \"#utility.yul\":1569:1695   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1701:1797   */\n    tag_206:\n        /* \"#utility.yul\":1738:1745   */\n      0x00\n        /* \"#utility.yul\":1767:1791   */\n      tag_237\n        /* \"#utility.yul\":1785:1790   */\n      dup3\n        /* \"#utility.yul\":1767:1791   */\n      tag_205\n      jump\t// in\n    tag_237:\n        /* \"#utility.yul\":1756:1791   */\n      swap1\n      pop\n        /* \"#utility.yul\":1701:1797   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1803:1925   */\n    tag_207:\n        /* \"#utility.yul\":1876:1900   */\n      tag_239\n        /* \"#utility.yul\":1894:1899   */\n      dup2\n        /* \"#utility.yul\":1876:1900   */\n      tag_206\n      jump\t// in\n    tag_239:\n        /* \"#utility.yul\":1869:1874   */\n      dup2\n        /* \"#utility.yul\":1866:1901   */\n      eq\n        /* \"#utility.yul\":1856:1919   */\n      tag_240\n      jumpi\n        /* \"#utility.yul\":1915:1916   */\n      0x00\n        /* \"#utility.yul\":1912:1913   */\n      dup1\n        /* \"#utility.yul\":1905:1917   */\n      revert\n        /* \"#utility.yul\":1856:1919   */\n    tag_240:\n        /* \"#utility.yul\":1803:1925   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2070   */\n    tag_208:\n        /* \"#utility.yul\":1977:1982   */\n      0x00\n        /* \"#utility.yul\":2015:2021   */\n      dup2\n        /* \"#utility.yul\":2002:2022   */\n      calldataload\n        /* \"#utility.yul\":1993:2022   */\n      swap1\n      pop\n        /* \"#utility.yul\":2031:2064   */\n      tag_242\n        /* \"#utility.yul\":2058:2063   */\n      dup2\n        /* \"#utility.yul\":2031:2064   */\n      tag_207\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":1931:2070   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2076:2153   */\n    tag_209:\n        /* \"#utility.yul\":2113:2120   */\n      0x00\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2131:2147   */\n      swap1\n      pop\n        /* \"#utility.yul\":2076:2153   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2159:2281   */\n    tag_210:\n        /* \"#utility.yul\":2232:2256   */\n      tag_245\n        /* \"#utility.yul\":2250:2255   */\n      dup2\n        /* \"#utility.yul\":2232:2256   */\n      tag_209\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":2225:2230   */\n      dup2\n        /* \"#utility.yul\":2222:2257   */\n      eq\n        /* \"#utility.yul\":2212:2275   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":2271:2272   */\n      0x00\n        /* \"#utility.yul\":2268:2269   */\n      dup1\n        /* \"#utility.yul\":2261:2273   */\n      revert\n        /* \"#utility.yul\":2212:2275   */\n    tag_246:\n        /* \"#utility.yul\":2159:2281   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2287:2426   */\n    tag_211:\n        /* \"#utility.yul\":2333:2338   */\n      0x00\n        /* \"#utility.yul\":2371:2377   */\n      dup2\n        /* \"#utility.yul\":2358:2378   */\n      calldataload\n        /* \"#utility.yul\":2349:2378   */\n      swap1\n      pop\n        /* \"#utility.yul\":2387:2420   */\n      tag_248\n        /* \"#utility.yul\":2414:2419   */\n      dup2\n        /* \"#utility.yul\":2387:2420   */\n      tag_210\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":2287:2426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2432:2906   */\n    tag_30:\n        /* \"#utility.yul\":2500:2506   */\n      0x00\n        /* \"#utility.yul\":2508:2514   */\n      dup1\n        /* \"#utility.yul\":2557:2559   */\n      0x40\n        /* \"#utility.yul\":2545:2554   */\n      dup4\n        /* \"#utility.yul\":2536:2543   */\n      dup6\n        /* \"#utility.yul\":2532:2555   */\n      sub\n        /* \"#utility.yul\":2528:2560   */\n      slt\n        /* \"#utility.yul\":2525:2644   */\n      iszero\n      tag_250\n      jumpi\n        /* \"#utility.yul\":2563:2642   */\n      tag_251\n      tag_203\n      jump\t// in\n    tag_251:\n        /* \"#utility.yul\":2525:2644   */\n    tag_250:\n        /* \"#utility.yul\":2683:2684   */\n      0x00\n        /* \"#utility.yul\":2708:2761   */\n      tag_252\n        /* \"#utility.yul\":2753:2760   */\n      dup6\n        /* \"#utility.yul\":2744:2750   */\n      dup3\n        /* \"#utility.yul\":2733:2742   */\n      dup7\n        /* \"#utility.yul\":2729:2751   */\n      add\n        /* \"#utility.yul\":2708:2761   */\n      tag_208\n      jump\t// in\n    tag_252:\n        /* \"#utility.yul\":2698:2761   */\n      swap3\n      pop\n        /* \"#utility.yul\":2654:2771   */\n      pop\n        /* \"#utility.yul\":2810:2812   */\n      0x20\n        /* \"#utility.yul\":2836:2889   */\n      tag_253\n        /* \"#utility.yul\":2881:2888   */\n      dup6\n        /* \"#utility.yul\":2872:2878   */\n      dup3\n        /* \"#utility.yul\":2861:2870   */\n      dup7\n        /* \"#utility.yul\":2857:2879   */\n      add\n        /* \"#utility.yul\":2836:2889   */\n      tag_211\n      jump\t// in\n    tag_253:\n        /* \"#utility.yul\":2826:2889   */\n      swap2\n      pop\n        /* \"#utility.yul\":2781:2899   */\n      pop\n        /* \"#utility.yul\":2432:2906   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2912:3002   */\n    tag_212:\n        /* \"#utility.yul\":2946:2953   */\n      0x00\n        /* \"#utility.yul\":2989:2994   */\n      dup2\n        /* \"#utility.yul\":2982:2995   */\n      iszero\n        /* \"#utility.yul\":2975:2996   */\n      iszero\n        /* \"#utility.yul\":2964:2996   */\n      swap1\n      pop\n        /* \"#utility.yul\":2912:3002   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3008:3117   */\n    tag_213:\n        /* \"#utility.yul\":3089:3110   */\n      tag_256\n        /* \"#utility.yul\":3104:3109   */\n      dup2\n        /* \"#utility.yul\":3089:3110   */\n      tag_212\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":3084:3087   */\n      dup3\n        /* \"#utility.yul\":3077:3111   */\n      mstore\n        /* \"#utility.yul\":3008:3117   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3123:3333   */\n    tag_33:\n        /* \"#utility.yul\":3210:3214   */\n      0x00\n        /* \"#utility.yul\":3248:3250   */\n      0x20\n        /* \"#utility.yul\":3237:3246   */\n      dup3\n        /* \"#utility.yul\":3233:3251   */\n      add\n        /* \"#utility.yul\":3225:3251   */\n      swap1\n      pop\n        /* \"#utility.yul\":3261:3326   */\n      tag_258\n        /* \"#utility.yul\":3323:3324   */\n      0x00\n        /* \"#utility.yul\":3312:3321   */\n      dup4\n        /* \"#utility.yul\":3308:3325   */\n      add\n        /* \"#utility.yul\":3299:3305   */\n      dup5\n        /* \"#utility.yul\":3261:3326   */\n      tag_213\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":3123:3333   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3339:3457   */\n    tag_214:\n        /* \"#utility.yul\":3426:3450   */\n      tag_260\n        /* \"#utility.yul\":3444:3449   */\n      dup2\n        /* \"#utility.yul\":3426:3450   */\n      tag_209\n      jump\t// in\n    tag_260:\n        /* \"#utility.yul\":3421:3424   */\n      dup3\n        /* \"#utility.yul\":3414:3451   */\n      mstore\n        /* \"#utility.yul\":3339:3457   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3463:3685   */\n    tag_37:\n        /* \"#utility.yul\":3556:3560   */\n      0x00\n        /* \"#utility.yul\":3594:3596   */\n      0x20\n        /* \"#utility.yul\":3583:3592   */\n      dup3\n        /* \"#utility.yul\":3579:3597   */\n      add\n        /* \"#utility.yul\":3571:3597   */\n      swap1\n      pop\n        /* \"#utility.yul\":3607:3678   */\n      tag_262\n        /* \"#utility.yul\":3675:3676   */\n      0x00\n        /* \"#utility.yul\":3664:3673   */\n      dup4\n        /* \"#utility.yul\":3660:3677   */\n      add\n        /* \"#utility.yul\":3651:3657   */\n      dup5\n        /* \"#utility.yul\":3607:3678   */\n      tag_214\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":3463:3685   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3691:4310   */\n    tag_40:\n        /* \"#utility.yul\":3768:3774   */\n      0x00\n        /* \"#utility.yul\":3776:3782   */\n      dup1\n        /* \"#utility.yul\":3784:3790   */\n      0x00\n        /* \"#utility.yul\":3833:3835   */\n      0x60\n        /* \"#utility.yul\":3821:3830   */\n      dup5\n        /* \"#utility.yul\":3812:3819   */\n      dup7\n        /* \"#utility.yul\":3808:3831   */\n      sub\n        /* \"#utility.yul\":3804:3836   */\n      slt\n        /* \"#utility.yul\":3801:3920   */\n      iszero\n      tag_264\n      jumpi\n        /* \"#utility.yul\":3839:3918   */\n      tag_265\n      tag_203\n      jump\t// in\n    tag_265:\n        /* \"#utility.yul\":3801:3920   */\n    tag_264:\n        /* \"#utility.yul\":3959:3960   */\n      0x00\n        /* \"#utility.yul\":3984:4037   */\n      tag_266\n        /* \"#utility.yul\":4029:4036   */\n      dup7\n        /* \"#utility.yul\":4020:4026   */\n      dup3\n        /* \"#utility.yul\":4009:4018   */\n      dup8\n        /* \"#utility.yul\":4005:4027   */\n      add\n        /* \"#utility.yul\":3984:4037   */\n      tag_208\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":3974:4037   */\n      swap4\n      pop\n        /* \"#utility.yul\":3930:4047   */\n      pop\n        /* \"#utility.yul\":4086:4088   */\n      0x20\n        /* \"#utility.yul\":4112:4165   */\n      tag_267\n        /* \"#utility.yul\":4157:4164   */\n      dup7\n        /* \"#utility.yul\":4148:4154   */\n      dup3\n        /* \"#utility.yul\":4137:4146   */\n      dup8\n        /* \"#utility.yul\":4133:4155   */\n      add\n        /* \"#utility.yul\":4112:4165   */\n      tag_208\n      jump\t// in\n    tag_267:\n        /* \"#utility.yul\":4102:4165   */\n      swap3\n      pop\n        /* \"#utility.yul\":4057:4175   */\n      pop\n        /* \"#utility.yul\":4214:4216   */\n      0x40\n        /* \"#utility.yul\":4240:4293   */\n      tag_268\n        /* \"#utility.yul\":4285:4292   */\n      dup7\n        /* \"#utility.yul\":4276:4282   */\n      dup3\n        /* \"#utility.yul\":4265:4274   */\n      dup8\n        /* \"#utility.yul\":4261:4283   */\n      add\n        /* \"#utility.yul\":4240:4293   */\n      tag_211\n      jump\t// in\n    tag_268:\n        /* \"#utility.yul\":4230:4293   */\n      swap2\n      pop\n        /* \"#utility.yul\":4185:4303   */\n      pop\n        /* \"#utility.yul\":3691:4310   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":4316:4402   */\n    tag_215:\n        /* \"#utility.yul\":4351:4358   */\n      0x00\n        /* \"#utility.yul\":4391:4395   */\n      0xff\n        /* \"#utility.yul\":4384:4389   */\n      dup3\n        /* \"#utility.yul\":4380:4396   */\n      and\n        /* \"#utility.yul\":4369:4396   */\n      swap1\n      pop\n        /* \"#utility.yul\":4316:4402   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4408:4520   */\n    tag_216:\n        /* \"#utility.yul\":4491:4513   */\n      tag_271\n        /* \"#utility.yul\":4507:4512   */\n      dup2\n        /* \"#utility.yul\":4491:4513   */\n      tag_215\n      jump\t// in\n    tag_271:\n        /* \"#utility.yul\":4486:4489   */\n      dup3\n        /* \"#utility.yul\":4479:4514   */\n      mstore\n        /* \"#utility.yul\":4408:4520   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4526:4740   */\n    tag_46:\n        /* \"#utility.yul\":4615:4619   */\n      0x00\n        /* \"#utility.yul\":4653:4655   */\n      0x20\n        /* \"#utility.yul\":4642:4651   */\n      dup3\n        /* \"#utility.yul\":4638:4656   */\n      add\n        /* \"#utility.yul\":4630:4656   */\n      swap1\n      pop\n        /* \"#utility.yul\":4666:4733   */\n      tag_273\n        /* \"#utility.yul\":4730:4731   */\n      0x00\n        /* \"#utility.yul\":4719:4728   */\n      dup4\n        /* \"#utility.yul\":4715:4732   */\n      add\n        /* \"#utility.yul\":4706:4712   */\n      dup5\n        /* \"#utility.yul\":4666:4733   */\n      tag_216\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":4526:4740   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4746:5075   */\n    tag_55:\n        /* \"#utility.yul\":4805:4811   */\n      0x00\n        /* \"#utility.yul\":4854:4856   */\n      0x20\n        /* \"#utility.yul\":4842:4851   */\n      dup3\n        /* \"#utility.yul\":4833:4840   */\n      dup5\n        /* \"#utility.yul\":4829:4852   */\n      sub\n        /* \"#utility.yul\":4825:4857   */\n      slt\n        /* \"#utility.yul\":4822:4941   */\n      iszero\n      tag_275\n      jumpi\n        /* \"#utility.yul\":4860:4939   */\n      tag_276\n      tag_203\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":4822:4941   */\n    tag_275:\n        /* \"#utility.yul\":4980:4981   */\n      0x00\n        /* \"#utility.yul\":5005:5058   */\n      tag_277\n        /* \"#utility.yul\":5050:5057   */\n      dup5\n        /* \"#utility.yul\":5041:5047   */\n      dup3\n        /* \"#utility.yul\":5030:5039   */\n      dup6\n        /* \"#utility.yul\":5026:5048   */\n      add\n        /* \"#utility.yul\":5005:5058   */\n      tag_208\n      jump\t// in\n    tag_277:\n        /* \"#utility.yul\":4995:5058   */\n      swap2\n      pop\n        /* \"#utility.yul\":4951:5068   */\n      pop\n        /* \"#utility.yul\":4746:5075   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5081:5555   */\n    tag_83:\n        /* \"#utility.yul\":5149:5155   */\n      0x00\n        /* \"#utility.yul\":5157:5163   */\n      dup1\n        /* \"#utility.yul\":5206:5208   */\n      0x40\n        /* \"#utility.yul\":5194:5203   */\n      dup4\n        /* \"#utility.yul\":5185:5192   */\n      dup6\n        /* \"#utility.yul\":5181:5204   */\n      sub\n        /* \"#utility.yul\":5177:5209   */\n      slt\n        /* \"#utility.yul\":5174:5293   */\n      iszero\n      tag_279\n      jumpi\n        /* \"#utility.yul\":5212:5291   */\n      tag_280\n      tag_203\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":5174:5293   */\n    tag_279:\n        /* \"#utility.yul\":5332:5333   */\n      0x00\n        /* \"#utility.yul\":5357:5410   */\n      tag_281\n        /* \"#utility.yul\":5402:5409   */\n      dup6\n        /* \"#utility.yul\":5393:5399   */\n      dup3\n        /* \"#utility.yul\":5382:5391   */\n      dup7\n        /* \"#utility.yul\":5378:5400   */\n      add\n        /* \"#utility.yul\":5357:5410   */\n      tag_208\n      jump\t// in\n    tag_281:\n        /* \"#utility.yul\":5347:5410   */\n      swap3\n      pop\n        /* \"#utility.yul\":5303:5420   */\n      pop\n        /* \"#utility.yul\":5459:5461   */\n      0x20\n        /* \"#utility.yul\":5485:5538   */\n      tag_282\n        /* \"#utility.yul\":5530:5537   */\n      dup6\n        /* \"#utility.yul\":5521:5527   */\n      dup3\n        /* \"#utility.yul\":5510:5519   */\n      dup7\n        /* \"#utility.yul\":5506:5528   */\n      add\n        /* \"#utility.yul\":5485:5538   */\n      tag_208\n      jump\t// in\n    tag_282:\n        /* \"#utility.yul\":5475:5538   */\n      swap2\n      pop\n        /* \"#utility.yul\":5430:5548   */\n      pop\n        /* \"#utility.yul\":5081:5555   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5561:5741   */\n    tag_217:\n        /* \"#utility.yul\":5609:5686   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5606:5607   */\n      0x00\n        /* \"#utility.yul\":5599:5687   */\n      mstore\n        /* \"#utility.yul\":5706:5710   */\n      0x22\n        /* \"#utility.yul\":5703:5704   */\n      0x04\n        /* \"#utility.yul\":5696:5711   */\n      mstore\n        /* \"#utility.yul\":5730:5734   */\n      0x24\n        /* \"#utility.yul\":5727:5728   */\n      0x00\n        /* \"#utility.yul\":5720:5735   */\n      revert\n        /* \"#utility.yul\":5747:6067   */\n    tag_94:\n        /* \"#utility.yul\":5791:5797   */\n      0x00\n        /* \"#utility.yul\":5828:5829   */\n      0x02\n        /* \"#utility.yul\":5822:5826   */\n      dup3\n        /* \"#utility.yul\":5818:5830   */\n      div\n        /* \"#utility.yul\":5808:5830   */\n      swap1\n      pop\n        /* \"#utility.yul\":5875:5876   */\n      0x01\n        /* \"#utility.yul\":5869:5873   */\n      dup3\n        /* \"#utility.yul\":5865:5877   */\n      and\n        /* \"#utility.yul\":5896:5914   */\n      dup1\n        /* \"#utility.yul\":5886:5967   */\n      tag_285\n      jumpi\n        /* \"#utility.yul\":5952:5956   */\n      0x7f\n        /* \"#utility.yul\":5944:5950   */\n      dup3\n        /* \"#utility.yul\":5940:5957   */\n      and\n        /* \"#utility.yul\":5930:5957   */\n      swap2\n      pop\n        /* \"#utility.yul\":5886:5967   */\n    tag_285:\n        /* \"#utility.yul\":6014:6016   */\n      0x20\n        /* \"#utility.yul\":6006:6012   */\n      dup3\n        /* \"#utility.yul\":6003:6017   */\n      lt\n        /* \"#utility.yul\":5983:6001   */\n      dup2\n        /* \"#utility.yul\":5980:6018   */\n      sub\n        /* \"#utility.yul\":5977:6061   */\n      tag_286\n      jumpi\n        /* \"#utility.yul\":6033:6051   */\n      tag_287\n      tag_217\n      jump\t// in\n    tag_287:\n        /* \"#utility.yul\":5977:6061   */\n    tag_286:\n        /* \"#utility.yul\":5798:6067   */\n      pop\n        /* \"#utility.yul\":5747:6067   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6073:6253   */\n    tag_218:\n        /* \"#utility.yul\":6121:6198   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6118:6119   */\n      0x00\n        /* \"#utility.yul\":6111:6199   */\n      mstore\n        /* \"#utility.yul\":6218:6222   */\n      0x11\n        /* \"#utility.yul\":6215:6216   */\n      0x04\n        /* \"#utility.yul\":6208:6223   */\n      mstore\n        /* \"#utility.yul\":6242:6246   */\n      0x24\n        /* \"#utility.yul\":6239:6240   */\n      0x00\n        /* \"#utility.yul\":6232:6247   */\n      revert\n        /* \"#utility.yul\":6259:6453   */\n    tag_113:\n        /* \"#utility.yul\":6299:6303   */\n      0x00\n        /* \"#utility.yul\":6319:6339   */\n      tag_290\n        /* \"#utility.yul\":6337:6338   */\n      dup3\n        /* \"#utility.yul\":6319:6339   */\n      tag_209\n      jump\t// in\n    tag_290:\n        /* \"#utility.yul\":6314:6339   */\n      swap2\n      pop\n        /* \"#utility.yul\":6353:6373   */\n      tag_291\n        /* \"#utility.yul\":6371:6372   */\n      dup4\n        /* \"#utility.yul\":6353:6373   */\n      tag_209\n      jump\t// in\n    tag_291:\n        /* \"#utility.yul\":6348:6373   */\n      swap3\n      pop\n        /* \"#utility.yul\":6397:6398   */\n      dup3\n        /* \"#utility.yul\":6394:6395   */\n      dup3\n        /* \"#utility.yul\":6390:6399   */\n      sub\n        /* \"#utility.yul\":6382:6399   */\n      swap1\n      pop\n        /* \"#utility.yul\":6421:6422   */\n      dup2\n        /* \"#utility.yul\":6415:6419   */\n      dup2\n        /* \"#utility.yul\":6412:6423   */\n      gt\n        /* \"#utility.yul\":6409:6446   */\n      iszero\n      tag_292\n      jumpi\n        /* \"#utility.yul\":6426:6444   */\n      tag_293\n      tag_218\n      jump\t// in\n    tag_293:\n        /* \"#utility.yul\":6409:6446   */\n    tag_292:\n        /* \"#utility.yul\":6259:6453   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6459:6650   */\n    tag_119:\n        /* \"#utility.yul\":6499:6502   */\n      0x00\n        /* \"#utility.yul\":6518:6538   */\n      tag_295\n        /* \"#utility.yul\":6536:6537   */\n      dup3\n        /* \"#utility.yul\":6518:6538   */\n      tag_209\n      jump\t// in\n    tag_295:\n        /* \"#utility.yul\":6513:6538   */\n      swap2\n      pop\n        /* \"#utility.yul\":6552:6572   */\n      tag_296\n        /* \"#utility.yul\":6570:6571   */\n      dup4\n        /* \"#utility.yul\":6552:6572   */\n      tag_209\n      jump\t// in\n    tag_296:\n        /* \"#utility.yul\":6547:6572   */\n      swap3\n      pop\n        /* \"#utility.yul\":6595:6596   */\n      dup3\n        /* \"#utility.yul\":6592:6593   */\n      dup3\n        /* \"#utility.yul\":6588:6597   */\n      add\n        /* \"#utility.yul\":6581:6597   */\n      swap1\n      pop\n        /* \"#utility.yul\":6616:6619   */\n      dup1\n        /* \"#utility.yul\":6613:6614   */\n      dup3\n        /* \"#utility.yul\":6610:6620   */\n      gt\n        /* \"#utility.yul\":6607:6643   */\n      iszero\n      tag_297\n      jumpi\n        /* \"#utility.yul\":6623:6641   */\n      tag_298\n      tag_218\n      jump\t// in\n    tag_298:\n        /* \"#utility.yul\":6607:6643   */\n    tag_297:\n        /* \"#utility.yul\":6459:6650   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6656:6774   */\n    tag_219:\n        /* \"#utility.yul\":6743:6767   */\n      tag_300\n        /* \"#utility.yul\":6761:6766   */\n      dup2\n        /* \"#utility.yul\":6743:6767   */\n      tag_206\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":6738:6741   */\n      dup3\n        /* \"#utility.yul\":6731:6768   */\n      mstore\n        /* \"#utility.yul\":6656:6774   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6780:7002   */\n    tag_167:\n        /* \"#utility.yul\":6873:6877   */\n      0x00\n        /* \"#utility.yul\":6911:6913   */\n      0x20\n        /* \"#utility.yul\":6900:6909   */\n      dup3\n        /* \"#utility.yul\":6896:6914   */\n      add\n        /* \"#utility.yul\":6888:6914   */\n      swap1\n      pop\n        /* \"#utility.yul\":6924:6995   */\n      tag_302\n        /* \"#utility.yul\":6992:6993   */\n      0x00\n        /* \"#utility.yul\":6981:6990   */\n      dup4\n        /* \"#utility.yul\":6977:6994   */\n      add\n        /* \"#utility.yul\":6968:6974   */\n      dup5\n        /* \"#utility.yul\":6924:6995   */\n      tag_219\n      jump\t// in\n    tag_302:\n        /* \"#utility.yul\":6780:7002   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7008:7450   */\n    tag_193:\n        /* \"#utility.yul\":7157:7161   */\n      0x00\n        /* \"#utility.yul\":7195:7197   */\n      0x60\n        /* \"#utility.yul\":7184:7193   */\n      dup3\n        /* \"#utility.yul\":7180:7198   */\n      add\n        /* \"#utility.yul\":7172:7198   */\n      swap1\n      pop\n        /* \"#utility.yul\":7208:7279   */\n      tag_304\n        /* \"#utility.yul\":7276:7277   */\n      0x00\n        /* \"#utility.yul\":7265:7274   */\n      dup4\n        /* \"#utility.yul\":7261:7278   */\n      add\n        /* \"#utility.yul\":7252:7258   */\n      dup7\n        /* \"#utility.yul\":7208:7279   */\n      tag_219\n      jump\t// in\n    tag_304:\n        /* \"#utility.yul\":7289:7361   */\n      tag_305\n        /* \"#utility.yul\":7357:7359   */\n      0x20\n        /* \"#utility.yul\":7346:7355   */\n      dup4\n        /* \"#utility.yul\":7342:7360   */\n      add\n        /* \"#utility.yul\":7333:7339   */\n      dup6\n        /* \"#utility.yul\":7289:7361   */\n      tag_214\n      jump\t// in\n    tag_305:\n        /* \"#utility.yul\":7371:7443   */\n      tag_306\n        /* \"#utility.yul\":7439:7441   */\n      0x40\n        /* \"#utility.yul\":7428:7437   */\n      dup4\n        /* \"#utility.yul\":7424:7442   */\n      add\n        /* \"#utility.yul\":7415:7421   */\n      dup5\n        /* \"#utility.yul\":7371:7443   */\n      tag_214\n      jump\t// in\n    tag_306:\n        /* \"#utility.yul\":7008:7450   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122030e459317df432e3f2e43d346e07ab18613c035681f7b27a78b434a96208deb464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_683": {
									"entryPoint": null,
									"id": 683,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_77": {
									"entryPoint": null,
									"id": 77,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_380": {
									"entryPoint": 524,
									"id": 380,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_update_347": {
									"entryPoint": 657,
									"id": 347,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 1229,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 1249,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 2244,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 2123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 2259,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 2312,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_string_storage": {
									"entryPoint": 1440,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 1385,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 2193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_t_string_storage": {
									"entryPoint": 1716,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"cleanup_t_address": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2060,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1198,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"clear_storage_range_t_bytes1": {
									"entryPoint": 1682,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"convert_t_uint256_to_t_uint256": {
									"entryPoint": 1575,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 1853,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"divide_by_32_ceil": {
									"entryPoint": 1458,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_byte_array_length": {
									"entryPoint": 1337,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": 1826,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"identity": {
									"entryPoint": 1566,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"mask_bytes_dynamic": {
									"entryPoint": 1798,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2148,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 1292,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1395,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"prepare_store_t_uint256": {
									"entryPoint": 1608,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_dynamic": {
									"entryPoint": 1473,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"shift_right_unsigned_dynamic": {
									"entryPoint": 1786,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"storage_set_to_zero_t_uint256": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"update_byte_slice_dynamic32": {
									"entryPoint": 1485,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"update_storage_value_t_uint256_to_t_uint256": {
									"entryPoint": 1617,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1207,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"zero_value_for_split_t_uint256": {
									"entryPoint": 1654,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7961:6",
										"nodeType": "YulBlock",
										"src": "0:7961:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:6",
													"nodeType": "YulBlock",
													"src": "47:35:6",
													"statements": [
														{
															"nativeSrc": "57:19:6",
															"nodeType": "YulAssignment",
															"src": "57:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:6",
																		"nodeType": "YulLiteral",
																		"src": "73:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:6"
																},
																"nativeSrc": "67:9:6",
																"nodeType": "YulFunctionCall",
																"src": "67:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:6",
														"nodeType": "YulTypedName",
														"src": "40:6:6",
														"type": ""
													}
												],
												"src": "7:75:6"
											},
											{
												"body": {
													"nativeSrc": "177:28:6",
													"nodeType": "YulBlock",
													"src": "177:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:6",
																		"nodeType": "YulLiteral",
																		"src": "194:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:6",
																		"nodeType": "YulLiteral",
																		"src": "197:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:6"
																},
																"nativeSrc": "187:12:6",
																"nodeType": "YulFunctionCall",
																"src": "187:12:6"
															},
															"nativeSrc": "187:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:6"
											},
											{
												"body": {
													"nativeSrc": "300:28:6",
													"nodeType": "YulBlock",
													"src": "300:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:6",
																		"nodeType": "YulLiteral",
																		"src": "317:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:6",
																		"nodeType": "YulLiteral",
																		"src": "320:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:6"
																},
																"nativeSrc": "310:12:6",
																"nodeType": "YulFunctionCall",
																"src": "310:12:6"
															},
															"nativeSrc": "310:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:6"
											},
											{
												"body": {
													"nativeSrc": "379:32:6",
													"nodeType": "YulBlock",
													"src": "379:32:6",
													"statements": [
														{
															"nativeSrc": "389:16:6",
															"nodeType": "YulAssignment",
															"src": "389:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:6",
																"nodeType": "YulIdentifier",
																"src": "400:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:6",
														"nodeType": "YulTypedName",
														"src": "361:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:6",
														"nodeType": "YulTypedName",
														"src": "371:7:6",
														"type": ""
													}
												],
												"src": "334:77:6"
											},
											{
												"body": {
													"nativeSrc": "460:79:6",
													"nodeType": "YulBlock",
													"src": "460:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:6",
																"nodeType": "YulBlock",
																"src": "517:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:6",
																					"nodeType": "YulLiteral",
																					"src": "526:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:6",
																					"nodeType": "YulLiteral",
																					"src": "529:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:6"
																			},
																			"nativeSrc": "519:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:6"
																		},
																		"nativeSrc": "519:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:6"
																				},
																				"nativeSrc": "490:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:6"
																		},
																		"nativeSrc": "480:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:6"
																},
																"nativeSrc": "473:43:6",
																"nodeType": "YulFunctionCall",
																"src": "473:43:6"
															},
															"nativeSrc": "470:63:6",
															"nodeType": "YulIf",
															"src": "470:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:6",
														"nodeType": "YulTypedName",
														"src": "453:5:6",
														"type": ""
													}
												],
												"src": "417:122:6"
											},
											{
												"body": {
													"nativeSrc": "608:80:6",
													"nodeType": "YulBlock",
													"src": "608:80:6",
													"statements": [
														{
															"nativeSrc": "618:22:6",
															"nodeType": "YulAssignment",
															"src": "618:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:6"
																},
																"nativeSrc": "627:13:6",
																"nodeType": "YulFunctionCall",
																"src": "627:13:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:6"
																},
																"nativeSrc": "649:33:6",
																"nodeType": "YulFunctionCall",
																"src": "649:33:6"
															},
															"nativeSrc": "649:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:6",
														"nodeType": "YulTypedName",
														"src": "586:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:6",
														"nodeType": "YulTypedName",
														"src": "594:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:6",
														"nodeType": "YulTypedName",
														"src": "602:5:6",
														"type": ""
													}
												],
												"src": "545:143:6"
											},
											{
												"body": {
													"nativeSrc": "771:274:6",
													"nodeType": "YulBlock",
													"src": "771:274:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:6",
																"nodeType": "YulBlock",
																"src": "817:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:6"
																			},
																			"nativeSrc": "819:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:6"
																		},
																		"nativeSrc": "819:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:6"
																		},
																		"nativeSrc": "788:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:6",
																		"nodeType": "YulLiteral",
																		"src": "813:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:6"
																},
																"nativeSrc": "784:32:6",
																"nodeType": "YulFunctionCall",
																"src": "784:32:6"
															},
															"nativeSrc": "781:119:6",
															"nodeType": "YulIf",
															"src": "781:119:6"
														},
														{
															"nativeSrc": "910:128:6",
															"nodeType": "YulBlock",
															"src": "910:128:6",
															"statements": [
																{
																	"nativeSrc": "925:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:6",
																		"nodeType": "YulLiteral",
																		"src": "939:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:6",
																			"nodeType": "YulTypedName",
																			"src": "929:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:6",
																	"nodeType": "YulAssignment",
																	"src": "954:74:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:6"
																				},
																				"nativeSrc": "996:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:6",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:6"
																		},
																		"nativeSrc": "964:64:6",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:6",
														"nodeType": "YulTypedName",
														"src": "741:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:6",
														"nodeType": "YulTypedName",
														"src": "752:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:6",
														"nodeType": "YulTypedName",
														"src": "764:6:6",
														"type": ""
													}
												],
												"src": "694:351:6"
											},
											{
												"body": {
													"nativeSrc": "1079:152:6",
													"nodeType": "YulBlock",
													"src": "1079:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1096:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1096:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1099:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1099:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1089:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1089:6:6"
																},
																"nativeSrc": "1089:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1089:88:6"
															},
															"nativeSrc": "1089:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1089:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1193:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1193:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1196:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1196:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1186:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1186:6:6"
																},
																"nativeSrc": "1186:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1186:15:6"
															},
															"nativeSrc": "1186:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1186:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1217:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1217:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1220:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1220:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1210:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1210:6:6"
																},
																"nativeSrc": "1210:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1210:15:6"
															},
															"nativeSrc": "1210:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1210:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "1051:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1051:180:6"
											},
											{
												"body": {
													"nativeSrc": "1288:269:6",
													"nodeType": "YulBlock",
													"src": "1288:269:6",
													"statements": [
														{
															"nativeSrc": "1298:22:6",
															"nodeType": "YulAssignment",
															"src": "1298:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1312:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1312:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1318:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1318:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "1308:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1308:3:6"
																},
																"nativeSrc": "1308:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1308:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1298:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1298:6:6"
																}
															]
														},
														{
															"nativeSrc": "1329:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "1329:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "1359:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1359:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1365:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1355:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1355:3:6"
																},
																"nativeSrc": "1355:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1355:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "1333:18:6",
																	"nodeType": "YulTypedName",
																	"src": "1333:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1406:51:6",
																"nodeType": "YulBlock",
																"src": "1406:51:6",
																"statements": [
																	{
																		"nativeSrc": "1420:27:6",
																		"nodeType": "YulAssignment",
																		"src": "1420:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "1434:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "1434:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1442:4:6",
																					"nodeType": "YulLiteral",
																					"src": "1442:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "1430:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "1430:3:6"
																			},
																			"nativeSrc": "1430:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1430:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "1420:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1420:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1386:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1386:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1379:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1379:6:6"
																},
																"nativeSrc": "1379:26:6",
																"nodeType": "YulFunctionCall",
																"src": "1379:26:6"
															},
															"nativeSrc": "1376:81:6",
															"nodeType": "YulIf",
															"src": "1376:81:6"
														},
														{
															"body": {
																"nativeSrc": "1509:42:6",
																"nodeType": "YulBlock",
																"src": "1509:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "1523:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "1523:16:6"
																			},
																			"nativeSrc": "1523:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1523:18:6"
																		},
																		"nativeSrc": "1523:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1523:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "1473:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "1473:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "1496:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1504:2:6",
																				"nodeType": "YulLiteral",
																				"src": "1504:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "1493:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1493:2:6"
																		},
																		"nativeSrc": "1493:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1493:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "1470:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "1470:2:6"
																},
																"nativeSrc": "1470:38:6",
																"nodeType": "YulFunctionCall",
																"src": "1470:38:6"
															},
															"nativeSrc": "1467:84:6",
															"nodeType": "YulIf",
															"src": "1467:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "1237:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "1272:4:6",
														"nodeType": "YulTypedName",
														"src": "1272:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1281:6:6",
														"nodeType": "YulTypedName",
														"src": "1281:6:6",
														"type": ""
													}
												],
												"src": "1237:320:6"
											},
											{
												"body": {
													"nativeSrc": "1622:40:6",
													"nodeType": "YulBlock",
													"src": "1622:40:6",
													"statements": [
														{
															"nativeSrc": "1633:22:6",
															"nodeType": "YulAssignment",
															"src": "1633:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1649:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1649:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1643:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1643:5:6"
																},
																"nativeSrc": "1643:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1643:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "1633:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1633:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "1563:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1605:5:6",
														"nodeType": "YulTypedName",
														"src": "1605:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "1615:6:6",
														"nodeType": "YulTypedName",
														"src": "1615:6:6",
														"type": ""
													}
												],
												"src": "1563:99:6"
											},
											{
												"body": {
													"nativeSrc": "1696:152:6",
													"nodeType": "YulBlock",
													"src": "1696:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1713:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1713:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1716:77:6",
																		"nodeType": "YulLiteral",
																		"src": "1716:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1706:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1706:6:6"
																},
																"nativeSrc": "1706:88:6",
																"nodeType": "YulFunctionCall",
																"src": "1706:88:6"
															},
															"nativeSrc": "1706:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "1706:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1810:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1810:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1813:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1813:4:6",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1803:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1803:6:6"
																},
																"nativeSrc": "1803:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1803:15:6"
															},
															"nativeSrc": "1803:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1803:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1834:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1834:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1837:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1837:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1827:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1827:6:6"
																},
																"nativeSrc": "1827:15:6",
																"nodeType": "YulFunctionCall",
																"src": "1827:15:6"
															},
															"nativeSrc": "1827:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "1827:15:6"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1668:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1668:180:6"
											},
											{
												"body": {
													"nativeSrc": "1908:87:6",
													"nodeType": "YulBlock",
													"src": "1908:87:6",
													"statements": [
														{
															"nativeSrc": "1918:11:6",
															"nodeType": "YulAssignment",
															"src": "1918:11:6",
															"value": {
																"name": "ptr",
																"nativeSrc": "1926:3:6",
																"nodeType": "YulIdentifier",
																"src": "1926:3:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1918:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1918:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1946:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1946:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "1949:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "1949:3:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1939:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1939:6:6"
																},
																"nativeSrc": "1939:14:6",
																"nodeType": "YulFunctionCall",
																"src": "1939:14:6"
															},
															"nativeSrc": "1939:14:6",
															"nodeType": "YulExpressionStatement",
															"src": "1939:14:6"
														},
														{
															"nativeSrc": "1962:26:6",
															"nodeType": "YulAssignment",
															"src": "1962:26:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1980:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1980:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1983:4:6",
																		"nodeType": "YulLiteral",
																		"src": "1983:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "1970:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "1970:9:6"
																},
																"nativeSrc": "1970:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1970:18:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "1962:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1962:4:6"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_string_storage",
												"nativeSrc": "1854:141:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "1895:3:6",
														"nodeType": "YulTypedName",
														"src": "1895:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "1903:4:6",
														"nodeType": "YulTypedName",
														"src": "1903:4:6",
														"type": ""
													}
												],
												"src": "1854:141:6"
											},
											{
												"body": {
													"nativeSrc": "2045:49:6",
													"nodeType": "YulBlock",
													"src": "2045:49:6",
													"statements": [
														{
															"nativeSrc": "2055:33:6",
															"nodeType": "YulAssignment",
															"src": "2055:33:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2073:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2073:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2080:2:6",
																				"nodeType": "YulLiteral",
																				"src": "2080:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2069:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2069:3:6"
																		},
																		"nativeSrc": "2069:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2069:14:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2085:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2085:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "2065:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2065:3:6"
																},
																"nativeSrc": "2065:23:6",
																"nodeType": "YulFunctionCall",
																"src": "2065:23:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2055:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2055:6:6"
																}
															]
														}
													]
												},
												"name": "divide_by_32_ceil",
												"nativeSrc": "2001:93:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2028:5:6",
														"nodeType": "YulTypedName",
														"src": "2028:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2038:6:6",
														"nodeType": "YulTypedName",
														"src": "2038:6:6",
														"type": ""
													}
												],
												"src": "2001:93:6"
											},
											{
												"body": {
													"nativeSrc": "2153:54:6",
													"nodeType": "YulBlock",
													"src": "2153:54:6",
													"statements": [
														{
															"nativeSrc": "2163:37:6",
															"nodeType": "YulAssignment",
															"src": "2163:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "2188:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "2188:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "2194:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2194:5:6"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "2184:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2184:3:6"
																},
																"nativeSrc": "2184:16:6",
																"nodeType": "YulFunctionCall",
																"src": "2184:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "2163:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2163:8:6"
																}
															]
														}
													]
												},
												"name": "shift_left_dynamic",
												"nativeSrc": "2100:107:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "2128:4:6",
														"nodeType": "YulTypedName",
														"src": "2128:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "2134:5:6",
														"nodeType": "YulTypedName",
														"src": "2134:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "2144:8:6",
														"nodeType": "YulTypedName",
														"src": "2144:8:6",
														"type": ""
													}
												],
												"src": "2100:107:6"
											},
											{
												"body": {
													"nativeSrc": "2289:317:6",
													"nodeType": "YulBlock",
													"src": "2289:317:6",
													"statements": [
														{
															"nativeSrc": "2299:35:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2299:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBytes",
																		"nativeSrc": "2320:10:6",
																		"nodeType": "YulIdentifier",
																		"src": "2320:10:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2332:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2332:1:6",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "2316:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2316:3:6"
																},
																"nativeSrc": "2316:18:6",
																"nodeType": "YulFunctionCall",
																"src": "2316:18:6"
															},
															"variables": [
																{
																	"name": "shiftBits",
																	"nativeSrc": "2303:9:6",
																	"nodeType": "YulTypedName",
																	"src": "2303:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2343:109:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2343:109:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2374:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2374:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2385:66:6",
																		"nodeType": "YulLiteral",
																		"src": "2385:66:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2355:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2355:18:6"
																},
																"nativeSrc": "2355:97:6",
																"nodeType": "YulFunctionCall",
																"src": "2355:97:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "2347:4:6",
																	"nodeType": "YulTypedName",
																	"src": "2347:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2461:51:6",
															"nodeType": "YulAssignment",
															"src": "2461:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "shiftBits",
																		"nativeSrc": "2492:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "2492:9:6"
																	},
																	{
																		"name": "toInsert",
																		"nativeSrc": "2503:8:6",
																		"nodeType": "YulIdentifier",
																		"src": "2503:8:6"
																	}
																],
																"functionName": {
																	"name": "shift_left_dynamic",
																	"nativeSrc": "2473:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "2473:18:6"
																},
																"nativeSrc": "2473:39:6",
																"nodeType": "YulFunctionCall",
																"src": "2473:39:6"
															},
															"variableNames": [
																{
																	"name": "toInsert",
																	"nativeSrc": "2461:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "2461:8:6"
																}
															]
														},
														{
															"nativeSrc": "2521:30:6",
															"nodeType": "YulAssignment",
															"src": "2521:30:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2534:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2534:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "mask",
																				"nativeSrc": "2545:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:4:6"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "2541:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2541:3:6"
																		},
																		"nativeSrc": "2541:9:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2541:9:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2530:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2530:3:6"
																},
																"nativeSrc": "2530:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2530:21:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2521:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2521:5:6"
																}
															]
														},
														{
															"nativeSrc": "2560:40:6",
															"nodeType": "YulAssignment",
															"src": "2560:40:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2573:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2573:5:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "toInsert",
																				"nativeSrc": "2584:8:6",
																				"nodeType": "YulIdentifier",
																				"src": "2584:8:6"
																			},
																			{
																				"name": "mask",
																				"nativeSrc": "2594:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "2594:4:6"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2580:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2580:3:6"
																		},
																		"nativeSrc": "2580:19:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2580:19:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2570:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "2570:2:6"
																},
																"nativeSrc": "2570:30:6",
																"nodeType": "YulFunctionCall",
																"src": "2570:30:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "2560:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2560:6:6"
																}
															]
														}
													]
												},
												"name": "update_byte_slice_dynamic32",
												"nativeSrc": "2213:393:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2250:5:6",
														"nodeType": "YulTypedName",
														"src": "2250:5:6",
														"type": ""
													},
													{
														"name": "shiftBytes",
														"nativeSrc": "2257:10:6",
														"nodeType": "YulTypedName",
														"src": "2257:10:6",
														"type": ""
													},
													{
														"name": "toInsert",
														"nativeSrc": "2269:8:6",
														"nodeType": "YulTypedName",
														"src": "2269:8:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "2282:6:6",
														"nodeType": "YulTypedName",
														"src": "2282:6:6",
														"type": ""
													}
												],
												"src": "2213:393:6"
											},
											{
												"body": {
													"nativeSrc": "2644:28:6",
													"nodeType": "YulBlock",
													"src": "2644:28:6",
													"statements": [
														{
															"nativeSrc": "2654:12:6",
															"nodeType": "YulAssignment",
															"src": "2654:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2661:5:6",
																"nodeType": "YulIdentifier",
																"src": "2661:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2654:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2654:3:6"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "2612:60:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2630:5:6",
														"nodeType": "YulTypedName",
														"src": "2630:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2640:3:6",
														"nodeType": "YulTypedName",
														"src": "2640:3:6",
														"type": ""
													}
												],
												"src": "2612:60:6"
											},
											{
												"body": {
													"nativeSrc": "2738:82:6",
													"nodeType": "YulBlock",
													"src": "2738:82:6",
													"statements": [
														{
															"nativeSrc": "2748:66:6",
															"nodeType": "YulAssignment",
															"src": "2748:66:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2806:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2806:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2788:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2788:17:6"
																				},
																				"nativeSrc": "2788:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2788:24:6"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "2779:8:6",
																			"nodeType": "YulIdentifier",
																			"src": "2779:8:6"
																		},
																		"nativeSrc": "2779:34:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2779:34:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "2761:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "2761:17:6"
																},
																"nativeSrc": "2761:53:6",
																"nodeType": "YulFunctionCall",
																"src": "2761:53:6"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2748:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "2748:9:6"
																}
															]
														}
													]
												},
												"name": "convert_t_uint256_to_t_uint256",
												"nativeSrc": "2678:142:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2718:5:6",
														"nodeType": "YulTypedName",
														"src": "2718:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2728:9:6",
														"nodeType": "YulTypedName",
														"src": "2728:9:6",
														"type": ""
													}
												],
												"src": "2678:142:6"
											},
											{
												"body": {
													"nativeSrc": "2873:28:6",
													"nodeType": "YulBlock",
													"src": "2873:28:6",
													"statements": [
														{
															"nativeSrc": "2883:12:6",
															"nodeType": "YulAssignment",
															"src": "2883:12:6",
															"value": {
																"name": "value",
																"nativeSrc": "2890:5:6",
																"nodeType": "YulIdentifier",
																"src": "2890:5:6"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "2883:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2883:3:6"
																}
															]
														}
													]
												},
												"name": "prepare_store_t_uint256",
												"nativeSrc": "2826:75:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2859:5:6",
														"nodeType": "YulTypedName",
														"src": "2859:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "2869:3:6",
														"nodeType": "YulTypedName",
														"src": "2869:3:6",
														"type": ""
													}
												],
												"src": "2826:75:6"
											},
											{
												"body": {
													"nativeSrc": "2983:193:6",
													"nodeType": "YulBlock",
													"src": "2983:193:6",
													"statements": [
														{
															"nativeSrc": "2993:63:6",
															"nodeType": "YulVariableDeclaration",
															"src": "2993:63:6",
															"value": {
																"arguments": [
																	{
																		"name": "value_0",
																		"nativeSrc": "3048:7:6",
																		"nodeType": "YulIdentifier",
																		"src": "3048:7:6"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint256_to_t_uint256",
																	"nativeSrc": "3017:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3017:30:6"
																},
																"nativeSrc": "3017:39:6",
																"nodeType": "YulFunctionCall",
																"src": "3017:39:6"
															},
															"variables": [
																{
																	"name": "convertedValue_0",
																	"nativeSrc": "2997:16:6",
																	"nodeType": "YulTypedName",
																	"src": "2997:16:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3072:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3072:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "3112:4:6",
																						"nodeType": "YulIdentifier",
																						"src": "3112:4:6"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "3106:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3106:5:6"
																				},
																				"nativeSrc": "3106:11:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3106:11:6"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3119:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "3119:6:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "convertedValue_0",
																						"nativeSrc": "3151:16:6",
																						"nodeType": "YulIdentifier",
																						"src": "3151:16:6"
																					}
																				],
																				"functionName": {
																					"name": "prepare_store_t_uint256",
																					"nativeSrc": "3127:23:6",
																					"nodeType": "YulIdentifier",
																					"src": "3127:23:6"
																				},
																				"nativeSrc": "3127:41:6",
																				"nodeType": "YulFunctionCall",
																				"src": "3127:41:6"
																			}
																		],
																		"functionName": {
																			"name": "update_byte_slice_dynamic32",
																			"nativeSrc": "3078:27:6",
																			"nodeType": "YulIdentifier",
																			"src": "3078:27:6"
																		},
																		"nativeSrc": "3078:91:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3078:91:6"
																	}
																],
																"functionName": {
																	"name": "sstore",
																	"nativeSrc": "3065:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3065:6:6"
																},
																"nativeSrc": "3065:105:6",
																"nodeType": "YulFunctionCall",
																"src": "3065:105:6"
															},
															"nativeSrc": "3065:105:6",
															"nodeType": "YulExpressionStatement",
															"src": "3065:105:6"
														}
													]
												},
												"name": "update_storage_value_t_uint256_to_t_uint256",
												"nativeSrc": "2907:269:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "2960:4:6",
														"nodeType": "YulTypedName",
														"src": "2960:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "2966:6:6",
														"nodeType": "YulTypedName",
														"src": "2966:6:6",
														"type": ""
													},
													{
														"name": "value_0",
														"nativeSrc": "2974:7:6",
														"nodeType": "YulTypedName",
														"src": "2974:7:6",
														"type": ""
													}
												],
												"src": "2907:269:6"
											},
											{
												"body": {
													"nativeSrc": "3231:24:6",
													"nodeType": "YulBlock",
													"src": "3231:24:6",
													"statements": [
														{
															"nativeSrc": "3241:8:6",
															"nodeType": "YulAssignment",
															"src": "3241:8:6",
															"value": {
																"kind": "number",
																"nativeSrc": "3248:1:6",
																"nodeType": "YulLiteral",
																"src": "3248:1:6",
																"type": "",
																"value": "0"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "3241:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3241:3:6"
																}
															]
														}
													]
												},
												"name": "zero_value_for_split_t_uint256",
												"nativeSrc": "3182:73:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "3227:3:6",
														"nodeType": "YulTypedName",
														"src": "3227:3:6",
														"type": ""
													}
												],
												"src": "3182:73:6"
											},
											{
												"body": {
													"nativeSrc": "3314:136:6",
													"nodeType": "YulBlock",
													"src": "3314:136:6",
													"statements": [
														{
															"nativeSrc": "3324:46:6",
															"nodeType": "YulVariableDeclaration",
															"src": "3324:46:6",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "zero_value_for_split_t_uint256",
																	"nativeSrc": "3338:30:6",
																	"nodeType": "YulIdentifier",
																	"src": "3338:30:6"
																},
																"nativeSrc": "3338:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3338:32:6"
															},
															"variables": [
																{
																	"name": "zero_0",
																	"nativeSrc": "3328:6:6",
																	"nodeType": "YulTypedName",
																	"src": "3328:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "3423:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "3423:4:6"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3429:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3429:6:6"
																	},
																	{
																		"name": "zero_0",
																		"nativeSrc": "3437:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3437:6:6"
																	}
																],
																"functionName": {
																	"name": "update_storage_value_t_uint256_to_t_uint256",
																	"nativeSrc": "3379:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3379:43:6"
																},
																"nativeSrc": "3379:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3379:65:6"
															},
															"nativeSrc": "3379:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3379:65:6"
														}
													]
												},
												"name": "storage_set_to_zero_t_uint256",
												"nativeSrc": "3261:189:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "3300:4:6",
														"nodeType": "YulTypedName",
														"src": "3300:4:6",
														"type": ""
													},
													{
														"name": "offset",
														"nativeSrc": "3306:6:6",
														"nodeType": "YulTypedName",
														"src": "3306:6:6",
														"type": ""
													}
												],
												"src": "3261:189:6"
											},
											{
												"body": {
													"nativeSrc": "3506:136:6",
													"nodeType": "YulBlock",
													"src": "3506:136:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3573:63:6",
																"nodeType": "YulBlock",
																"src": "3573:63:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3617:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3617:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3624:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3624:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "storage_set_to_zero_t_uint256",
																				"nativeSrc": "3587:29:6",
																				"nodeType": "YulIdentifier",
																				"src": "3587:29:6"
																			},
																			"nativeSrc": "3587:39:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3587:39:6"
																		},
																		"nativeSrc": "3587:39:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3587:39:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "start",
																		"nativeSrc": "3526:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "3526:5:6"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "3533:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3533:3:6"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "3523:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3523:2:6"
																},
																"nativeSrc": "3523:14:6",
																"nodeType": "YulFunctionCall",
																"src": "3523:14:6"
															},
															"nativeSrc": "3516:120:6",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "3538:26:6",
																"nodeType": "YulBlock",
																"src": "3538:26:6",
																"statements": [
																	{
																		"nativeSrc": "3540:22:6",
																		"nodeType": "YulAssignment",
																		"src": "3540:22:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "3553:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3553:5:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3560:1:6",
																					"nodeType": "YulLiteral",
																					"src": "3560:1:6",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3549:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3549:3:6"
																			},
																			"nativeSrc": "3549:13:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3549:13:6"
																		},
																		"variableNames": [
																			{
																				"name": "start",
																				"nativeSrc": "3540:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3540:5:6"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "3520:2:6",
																"nodeType": "YulBlock",
																"src": "3520:2:6",
																"statements": []
															},
															"src": "3516:120:6"
														}
													]
												},
												"name": "clear_storage_range_t_bytes1",
												"nativeSrc": "3456:186:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "start",
														"nativeSrc": "3494:5:6",
														"nodeType": "YulTypedName",
														"src": "3494:5:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "3501:3:6",
														"nodeType": "YulTypedName",
														"src": "3501:3:6",
														"type": ""
													}
												],
												"src": "3456:186:6"
											},
											{
												"body": {
													"nativeSrc": "3727:464:6",
													"nodeType": "YulBlock",
													"src": "3727:464:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3753:431:6",
																"nodeType": "YulBlock",
																"src": "3753:431:6",
																"statements": [
																	{
																		"nativeSrc": "3767:54:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3767:54:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "array",
																					"nativeSrc": "3815:5:6",
																					"nodeType": "YulIdentifier",
																					"src": "3815:5:6"
																				}
																			],
																			"functionName": {
																				"name": "array_dataslot_t_string_storage",
																				"nativeSrc": "3783:31:6",
																				"nodeType": "YulIdentifier",
																				"src": "3783:31:6"
																			},
																			"nativeSrc": "3783:38:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3783:38:6"
																		},
																		"variables": [
																			{
																				"name": "dataArea",
																				"nativeSrc": "3771:8:6",
																				"nodeType": "YulTypedName",
																				"src": "3771:8:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "3834:63:6",
																		"nodeType": "YulVariableDeclaration",
																		"src": "3834:63:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "dataArea",
																					"nativeSrc": "3857:8:6",
																					"nodeType": "YulIdentifier",
																					"src": "3857:8:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "startIndex",
																							"nativeSrc": "3885:10:6",
																							"nodeType": "YulIdentifier",
																							"src": "3885:10:6"
																						}
																					],
																					"functionName": {
																						"name": "divide_by_32_ceil",
																						"nativeSrc": "3867:17:6",
																						"nodeType": "YulIdentifier",
																						"src": "3867:17:6"
																					},
																					"nativeSrc": "3867:29:6",
																					"nodeType": "YulFunctionCall",
																					"src": "3867:29:6"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "3853:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "3853:3:6"
																			},
																			"nativeSrc": "3853:44:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3853:44:6"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "3838:11:6",
																				"nodeType": "YulTypedName",
																				"src": "3838:11:6",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "4054:27:6",
																			"nodeType": "YulBlock",
																			"src": "4054:27:6",
																			"statements": [
																				{
																					"nativeSrc": "4056:23:6",
																					"nodeType": "YulAssignment",
																					"src": "4056:23:6",
																					"value": {
																						"name": "dataArea",
																						"nativeSrc": "4071:8:6",
																						"nodeType": "YulIdentifier",
																						"src": "4071:8:6"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "4056:11:6",
																							"nodeType": "YulIdentifier",
																							"src": "4056:11:6"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "4038:10:6",
																					"nodeType": "YulIdentifier",
																					"src": "4038:10:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4050:2:6",
																					"nodeType": "YulLiteral",
																					"src": "4050:2:6",
																					"type": "",
																					"value": "32"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "4035:2:6",
																				"nodeType": "YulIdentifier",
																				"src": "4035:2:6"
																			},
																			"nativeSrc": "4035:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4035:18:6"
																		},
																		"nativeSrc": "4032:49:6",
																		"nodeType": "YulIf",
																		"src": "4032:49:6"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "deleteStart",
																					"nativeSrc": "4123:11:6",
																					"nodeType": "YulIdentifier",
																					"src": "4123:11:6"
																				},
																				{
																					"arguments": [
																						{
																							"name": "dataArea",
																							"nativeSrc": "4140:8:6",
																							"nodeType": "YulIdentifier",
																							"src": "4140:8:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "4168:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:6"
																								}
																							],
																							"functionName": {
																								"name": "divide_by_32_ceil",
																								"nativeSrc": "4150:17:6",
																								"nodeType": "YulIdentifier",
																								"src": "4150:17:6"
																							},
																							"nativeSrc": "4150:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "4150:22:6"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "4136:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "4136:3:6"
																					},
																					"nativeSrc": "4136:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "4136:37:6"
																				}
																			],
																			"functionName": {
																				"name": "clear_storage_range_t_bytes1",
																				"nativeSrc": "4094:28:6",
																				"nodeType": "YulIdentifier",
																				"src": "4094:28:6"
																			},
																			"nativeSrc": "4094:80:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4094:80:6"
																		},
																		"nativeSrc": "4094:80:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4094:80:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "3744:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3744:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3749:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3749:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3741:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "3741:2:6"
																},
																"nativeSrc": "3741:11:6",
																"nodeType": "YulFunctionCall",
																"src": "3741:11:6"
															},
															"nativeSrc": "3738:446:6",
															"nodeType": "YulIf",
															"src": "3738:446:6"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_t_string_storage",
												"nativeSrc": "3648:543:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "3703:5:6",
														"nodeType": "YulTypedName",
														"src": "3703:5:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "3710:3:6",
														"nodeType": "YulTypedName",
														"src": "3710:3:6",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "3715:10:6",
														"nodeType": "YulTypedName",
														"src": "3715:10:6",
														"type": ""
													}
												],
												"src": "3648:543:6"
											},
											{
												"body": {
													"nativeSrc": "4260:54:6",
													"nodeType": "YulBlock",
													"src": "4260:54:6",
													"statements": [
														{
															"nativeSrc": "4270:37:6",
															"nodeType": "YulAssignment",
															"src": "4270:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "bits",
																		"nativeSrc": "4295:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4295:4:6"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "4301:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4301:5:6"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "4291:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4291:3:6"
																},
																"nativeSrc": "4291:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4291:16:6"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "4270:8:6",
																	"nodeType": "YulIdentifier",
																	"src": "4270:8:6"
																}
															]
														}
													]
												},
												"name": "shift_right_unsigned_dynamic",
												"nativeSrc": "4197:117:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "bits",
														"nativeSrc": "4235:4:6",
														"nodeType": "YulTypedName",
														"src": "4235:4:6",
														"type": ""
													},
													{
														"name": "value",
														"nativeSrc": "4241:5:6",
														"nodeType": "YulTypedName",
														"src": "4241:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "4251:8:6",
														"nodeType": "YulTypedName",
														"src": "4251:8:6",
														"type": ""
													}
												],
												"src": "4197:117:6"
											},
											{
												"body": {
													"nativeSrc": "4371:118:6",
													"nodeType": "YulBlock",
													"src": "4371:118:6",
													"statements": [
														{
															"nativeSrc": "4381:68:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4381:68:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4430:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4430:1:6",
																						"type": "",
																						"value": "8"
																					},
																					{
																						"name": "bytes",
																						"nativeSrc": "4433:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "4433:5:6"
																					}
																				],
																				"functionName": {
																					"name": "mul",
																					"nativeSrc": "4426:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4426:3:6"
																				},
																				"nativeSrc": "4426:13:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4426:13:6"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4445:1:6",
																						"nodeType": "YulLiteral",
																						"src": "4445:1:6",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4441:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4441:3:6"
																				},
																				"nativeSrc": "4441:6:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4441:6:6"
																			}
																		],
																		"functionName": {
																			"name": "shift_right_unsigned_dynamic",
																			"nativeSrc": "4397:28:6",
																			"nodeType": "YulIdentifier",
																			"src": "4397:28:6"
																		},
																		"nativeSrc": "4397:51:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4397:51:6"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "4393:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4393:3:6"
																},
																"nativeSrc": "4393:56:6",
																"nodeType": "YulFunctionCall",
																"src": "4393:56:6"
															},
															"variables": [
																{
																	"name": "mask",
																	"nativeSrc": "4385:4:6",
																	"nodeType": "YulTypedName",
																	"src": "4385:4:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4458:25:6",
															"nodeType": "YulAssignment",
															"src": "4458:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4472:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4472:4:6"
																	},
																	{
																		"name": "mask",
																		"nativeSrc": "4478:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4478:4:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4468:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4468:3:6"
																},
																"nativeSrc": "4468:15:6",
																"nodeType": "YulFunctionCall",
																"src": "4468:15:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "4458:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4458:6:6"
																}
															]
														}
													]
												},
												"name": "mask_bytes_dynamic",
												"nativeSrc": "4320:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4348:4:6",
														"nodeType": "YulTypedName",
														"src": "4348:4:6",
														"type": ""
													},
													{
														"name": "bytes",
														"nativeSrc": "4354:5:6",
														"nodeType": "YulTypedName",
														"src": "4354:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "4364:6:6",
														"nodeType": "YulTypedName",
														"src": "4364:6:6",
														"type": ""
													}
												],
												"src": "4320:169:6"
											},
											{
												"body": {
													"nativeSrc": "4575:214:6",
													"nodeType": "YulBlock",
													"src": "4575:214:6",
													"statements": [
														{
															"nativeSrc": "4708:37:6",
															"nodeType": "YulAssignment",
															"src": "4708:37:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4735:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4735:4:6"
																	},
																	{
																		"name": "len",
																		"nativeSrc": "4741:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4741:3:6"
																	}
																],
																"functionName": {
																	"name": "mask_bytes_dynamic",
																	"nativeSrc": "4716:18:6",
																	"nodeType": "YulIdentifier",
																	"src": "4716:18:6"
																},
																"nativeSrc": "4716:29:6",
																"nodeType": "YulFunctionCall",
																"src": "4716:29:6"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "4708:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4708:4:6"
																}
															]
														},
														{
															"nativeSrc": "4754:29:6",
															"nodeType": "YulAssignment",
															"src": "4754:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "4765:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "4765:4:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "4775:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4775:1:6",
																				"type": "",
																				"value": "2"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "4778:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "4778:3:6"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nativeSrc": "4771:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4771:3:6"
																		},
																		"nativeSrc": "4771:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4771:11:6"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4762:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "4762:2:6"
																},
																"nativeSrc": "4762:21:6",
																"nodeType": "YulFunctionCall",
																"src": "4762:21:6"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "4754:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4754:4:6"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "4494:295:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "4556:4:6",
														"nodeType": "YulTypedName",
														"src": "4556:4:6",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "4562:3:6",
														"nodeType": "YulTypedName",
														"src": "4562:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "4570:4:6",
														"nodeType": "YulTypedName",
														"src": "4570:4:6",
														"type": ""
													}
												],
												"src": "4494:295:6"
											},
											{
												"body": {
													"nativeSrc": "4886:1303:6",
													"nodeType": "YulBlock",
													"src": "4886:1303:6",
													"statements": [
														{
															"nativeSrc": "4897:51:6",
															"nodeType": "YulVariableDeclaration",
															"src": "4897:51:6",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "4944:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4944:3:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "4911:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "4911:32:6"
																},
																"nativeSrc": "4911:37:6",
																"nodeType": "YulFunctionCall",
																"src": "4911:37:6"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "4901:6:6",
																	"nodeType": "YulTypedName",
																	"src": "4901:6:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5033:22:6",
																"nodeType": "YulBlock",
																"src": "5033:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "5035:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "5035:16:6"
																			},
																			"nativeSrc": "5035:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5035:18:6"
																		},
																		"nativeSrc": "5035:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5035:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5005:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5005:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5013:18:6",
																		"nodeType": "YulLiteral",
																		"src": "5013:18:6",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5002:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5002:2:6"
																},
																"nativeSrc": "5002:30:6",
																"nodeType": "YulFunctionCall",
																"src": "5002:30:6"
															},
															"nativeSrc": "4999:56:6",
															"nodeType": "YulIf",
															"src": "4999:56:6"
														},
														{
															"nativeSrc": "5065:52:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5065:52:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "slot",
																				"nativeSrc": "5111:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "5111:4:6"
																			}
																		],
																		"functionName": {
																			"name": "sload",
																			"nativeSrc": "5105:5:6",
																			"nodeType": "YulIdentifier",
																			"src": "5105:5:6"
																		},
																		"nativeSrc": "5105:11:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5105:11:6"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "5079:25:6",
																	"nodeType": "YulIdentifier",
																	"src": "5079:25:6"
																},
																"nativeSrc": "5079:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5079:38:6"
															},
															"variables": [
																{
																	"name": "oldLen",
																	"nativeSrc": "5069:6:6",
																	"nodeType": "YulTypedName",
																	"src": "5069:6:6",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "5210:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5210:4:6"
																	},
																	{
																		"name": "oldLen",
																		"nativeSrc": "5216:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5216:6:6"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "5224:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5224:6:6"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_t_string_storage",
																	"nativeSrc": "5164:45:6",
																	"nodeType": "YulIdentifier",
																	"src": "5164:45:6"
																},
																"nativeSrc": "5164:67:6",
																"nodeType": "YulFunctionCall",
																"src": "5164:67:6"
															},
															"nativeSrc": "5164:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "5164:67:6"
														},
														{
															"nativeSrc": "5241:18:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5241:18:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5258:1:6",
																"nodeType": "YulLiteral",
																"src": "5258:1:6",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5245:9:6",
																	"nodeType": "YulTypedName",
																	"src": "5245:9:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5269:17:6",
															"nodeType": "YulAssignment",
															"src": "5269:17:6",
															"value": {
																"kind": "number",
																"nativeSrc": "5282:4:6",
																"nodeType": "YulLiteral",
																"src": "5282:4:6",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "5269:9:6",
																	"nodeType": "YulIdentifier",
																	"src": "5269:9:6"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "5333:611:6",
																		"nodeType": "YulBlock",
																		"src": "5333:611:6",
																		"statements": [
																			{
																				"nativeSrc": "5347:37:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5347:37:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "5366:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5366:6:6"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "5378:4:6",
																									"nodeType": "YulLiteral",
																									"src": "5378:4:6",
																									"type": "",
																									"value": "0x1f"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "5374:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "5374:3:6"
																							},
																							"nativeSrc": "5374:9:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5374:9:6"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "5362:3:6",
																						"nodeType": "YulIdentifier",
																						"src": "5362:3:6"
																					},
																					"nativeSrc": "5362:22:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5362:22:6"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "5351:7:6",
																						"nodeType": "YulTypedName",
																						"src": "5351:7:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5398:51:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5398:51:6",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5444:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5444:4:6"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_t_string_storage",
																						"nativeSrc": "5412:31:6",
																						"nodeType": "YulIdentifier",
																						"src": "5412:31:6"
																					},
																					"nativeSrc": "5412:37:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5412:37:6"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "5402:6:6",
																						"nodeType": "YulTypedName",
																						"src": "5402:6:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "5462:10:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5462:10:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5471:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5471:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "5466:1:6",
																						"nodeType": "YulTypedName",
																						"src": "5466:1:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "5530:163:6",
																					"nodeType": "YulBlock",
																					"src": "5530:163:6",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5555:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "5555:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "5573:3:6",
																														"nodeType": "YulIdentifier",
																														"src": "5573:3:6"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "5578:9:6",
																														"nodeType": "YulIdentifier",
																														"src": "5578:9:6"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "5569:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "5569:3:6"
																												},
																												"nativeSrc": "5569:19:6",
																												"nodeType": "YulFunctionCall",
																												"src": "5569:19:6"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "5563:5:6",
																											"nodeType": "YulIdentifier",
																											"src": "5563:5:6"
																										},
																										"nativeSrc": "5563:26:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5563:26:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5548:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5548:6:6"
																								},
																								"nativeSrc": "5548:42:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5548:42:6"
																							},
																							"nativeSrc": "5548:42:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "5548:42:6"
																						},
																						{
																							"nativeSrc": "5607:24:6",
																							"nodeType": "YulAssignment",
																							"src": "5607:24:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5621:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "5621:6:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5629:1:6",
																										"nodeType": "YulLiteral",
																										"src": "5629:1:6",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5617:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5617:3:6"
																								},
																								"nativeSrc": "5617:14:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5617:14:6"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "5607:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5607:6:6"
																								}
																							]
																						},
																						{
																							"nativeSrc": "5648:31:6",
																							"nodeType": "YulAssignment",
																							"src": "5648:31:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "5665:9:6",
																										"nodeType": "YulIdentifier",
																										"src": "5665:9:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5676:2:6",
																										"nodeType": "YulLiteral",
																										"src": "5676:2:6",
																										"type": "",
																										"value": "32"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5661:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5661:3:6"
																								},
																								"nativeSrc": "5661:18:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5661:18:6"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "5648:9:6",
																									"nodeType": "YulIdentifier",
																									"src": "5648:9:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "5496:1:6",
																							"nodeType": "YulIdentifier",
																							"src": "5496:1:6"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5499:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "5499:7:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5493:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5493:2:6"
																					},
																					"nativeSrc": "5493:14:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5493:14:6"
																				},
																				"nativeSrc": "5485:208:6",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "5508:21:6",
																					"nodeType": "YulBlock",
																					"src": "5508:21:6",
																					"statements": [
																						{
																							"nativeSrc": "5510:17:6",
																							"nodeType": "YulAssignment",
																							"src": "5510:17:6",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "5519:1:6",
																										"nodeType": "YulIdentifier",
																										"src": "5519:1:6"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "5522:4:6",
																										"nodeType": "YulLiteral",
																										"src": "5522:4:6",
																										"type": "",
																										"value": "0x20"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "5515:3:6",
																									"nodeType": "YulIdentifier",
																									"src": "5515:3:6"
																								},
																								"nativeSrc": "5515:12:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5515:12:6"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "5510:1:6",
																									"nodeType": "YulIdentifier",
																									"src": "5510:1:6"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "5489:3:6",
																					"nodeType": "YulBlock",
																					"src": "5489:3:6",
																					"statements": []
																				},
																				"src": "5485:208:6"
																			},
																			{
																				"body": {
																					"nativeSrc": "5729:156:6",
																					"nodeType": "YulBlock",
																					"src": "5729:156:6",
																					"statements": [
																						{
																							"nativeSrc": "5747:43:6",
																							"nodeType": "YulVariableDeclaration",
																							"src": "5747:43:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "5774:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "5774:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "5779:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5779:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "5770:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "5770:3:6"
																										},
																										"nativeSrc": "5770:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5770:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "5764:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "5764:5:6"
																								},
																								"nativeSrc": "5764:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5764:26:6"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "5751:9:6",
																									"nodeType": "YulTypedName",
																									"src": "5751:9:6",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "5814:6:6",
																										"nodeType": "YulIdentifier",
																										"src": "5814:6:6"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "5841:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "5841:9:6"
																											},
																											{
																												"arguments": [
																													{
																														"name": "newLen",
																														"nativeSrc": "5856:6:6",
																														"nodeType": "YulIdentifier",
																														"src": "5856:6:6"
																													},
																													{
																														"kind": "number",
																														"nativeSrc": "5864:4:6",
																														"nodeType": "YulLiteral",
																														"src": "5864:4:6",
																														"type": "",
																														"value": "0x1f"
																													}
																												],
																												"functionName": {
																													"name": "and",
																													"nativeSrc": "5852:3:6",
																													"nodeType": "YulIdentifier",
																													"src": "5852:3:6"
																												},
																												"nativeSrc": "5852:17:6",
																												"nodeType": "YulFunctionCall",
																												"src": "5852:17:6"
																											}
																										],
																										"functionName": {
																											"name": "mask_bytes_dynamic",
																											"nativeSrc": "5822:18:6",
																											"nodeType": "YulIdentifier",
																											"src": "5822:18:6"
																										},
																										"nativeSrc": "5822:48:6",
																										"nodeType": "YulFunctionCall",
																										"src": "5822:48:6"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "5807:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "5807:6:6"
																								},
																								"nativeSrc": "5807:64:6",
																								"nodeType": "YulFunctionCall",
																								"src": "5807:64:6"
																							},
																							"nativeSrc": "5807:64:6",
																							"nodeType": "YulExpressionStatement",
																							"src": "5807:64:6"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "5712:7:6",
																							"nodeType": "YulIdentifier",
																							"src": "5712:7:6"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "5721:6:6",
																							"nodeType": "YulIdentifier",
																							"src": "5721:6:6"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "5709:2:6",
																						"nodeType": "YulIdentifier",
																						"src": "5709:2:6"
																					},
																					"nativeSrc": "5709:19:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5709:19:6"
																				},
																				"nativeSrc": "5706:179:6",
																				"nodeType": "YulIf",
																				"src": "5706:179:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "5905:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "5905:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"name": "newLen",
																											"nativeSrc": "5919:6:6",
																											"nodeType": "YulIdentifier",
																											"src": "5919:6:6"
																										},
																										{
																											"kind": "number",
																											"nativeSrc": "5927:1:6",
																											"nodeType": "YulLiteral",
																											"src": "5927:1:6",
																											"type": "",
																											"value": "2"
																										}
																									],
																									"functionName": {
																										"name": "mul",
																										"nativeSrc": "5915:3:6",
																										"nodeType": "YulIdentifier",
																										"src": "5915:3:6"
																									},
																									"nativeSrc": "5915:14:6",
																									"nodeType": "YulFunctionCall",
																									"src": "5915:14:6"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "5931:1:6",
																									"nodeType": "YulLiteral",
																									"src": "5931:1:6",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "5911:3:6",
																								"nodeType": "YulIdentifier",
																								"src": "5911:3:6"
																							},
																							"nativeSrc": "5911:22:6",
																							"nodeType": "YulFunctionCall",
																							"src": "5911:22:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "5898:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5898:6:6"
																					},
																					"nativeSrc": "5898:36:6",
																					"nodeType": "YulFunctionCall",
																					"src": "5898:36:6"
																				},
																				"nativeSrc": "5898:36:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "5898:36:6"
																			}
																		]
																	},
																	"nativeSrc": "5326:618:6",
																	"nodeType": "YulCase",
																	"src": "5326:618:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5331:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5331:1:6",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "5961:222:6",
																		"nodeType": "YulBlock",
																		"src": "5961:222:6",
																		"statements": [
																			{
																				"nativeSrc": "5975:14:6",
																				"nodeType": "YulVariableDeclaration",
																				"src": "5975:14:6",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "5988:1:6",
																					"nodeType": "YulLiteral",
																					"src": "5988:1:6",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "5979:5:6",
																						"nodeType": "YulTypedName",
																						"src": "5979:5:6",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "6012:67:6",
																					"nodeType": "YulBlock",
																					"src": "6012:67:6",
																					"statements": [
																						{
																							"nativeSrc": "6030:35:6",
																							"nodeType": "YulAssignment",
																							"src": "6030:35:6",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "6049:3:6",
																												"nodeType": "YulIdentifier",
																												"src": "6049:3:6"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "6054:9:6",
																												"nodeType": "YulIdentifier",
																												"src": "6054:9:6"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "6045:3:6",
																											"nodeType": "YulIdentifier",
																											"src": "6045:3:6"
																										},
																										"nativeSrc": "6045:19:6",
																										"nodeType": "YulFunctionCall",
																										"src": "6045:19:6"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "6039:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6039:5:6"
																								},
																								"nativeSrc": "6039:26:6",
																								"nodeType": "YulFunctionCall",
																								"src": "6039:26:6"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "6030:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6030:5:6"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "6005:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "6005:6:6"
																				},
																				"nativeSrc": "6002:77:6",
																				"nodeType": "YulIf",
																				"src": "6002:77:6"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "6099:4:6",
																							"nodeType": "YulIdentifier",
																							"src": "6099:4:6"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "6158:5:6",
																									"nodeType": "YulIdentifier",
																									"src": "6158:5:6"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "6165:6:6",
																									"nodeType": "YulIdentifier",
																									"src": "6165:6:6"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "6105:52:6",
																								"nodeType": "YulIdentifier",
																								"src": "6105:52:6"
																							},
																							"nativeSrc": "6105:67:6",
																							"nodeType": "YulFunctionCall",
																							"src": "6105:67:6"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "6092:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "6092:6:6"
																					},
																					"nativeSrc": "6092:81:6",
																					"nodeType": "YulFunctionCall",
																					"src": "6092:81:6"
																				},
																				"nativeSrc": "6092:81:6",
																				"nodeType": "YulExpressionStatement",
																				"src": "6092:81:6"
																			}
																		]
																	},
																	"nativeSrc": "5953:230:6",
																	"nodeType": "YulCase",
																	"src": "5953:230:6",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "5306:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "5306:6:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5314:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5314:2:6",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5303:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5303:2:6"
																},
																"nativeSrc": "5303:14:6",
																"nodeType": "YulFunctionCall",
																"src": "5303:14:6"
															},
															"nativeSrc": "5296:887:6",
															"nodeType": "YulSwitch",
															"src": "5296:887:6"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "4794:1395:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "4875:4:6",
														"nodeType": "YulTypedName",
														"src": "4875:4:6",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "4881:3:6",
														"nodeType": "YulTypedName",
														"src": "4881:3:6",
														"type": ""
													}
												],
												"src": "4794:1395:6"
											},
											{
												"body": {
													"nativeSrc": "6240:81:6",
													"nodeType": "YulBlock",
													"src": "6240:81:6",
													"statements": [
														{
															"nativeSrc": "6250:65:6",
															"nodeType": "YulAssignment",
															"src": "6250:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6265:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6265:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6272:42:6",
																		"nodeType": "YulLiteral",
																		"src": "6272:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:6"
																},
																"nativeSrc": "6261:54:6",
																"nodeType": "YulFunctionCall",
																"src": "6261:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6250:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6250:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "6195:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6222:5:6",
														"nodeType": "YulTypedName",
														"src": "6222:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6232:7:6",
														"nodeType": "YulTypedName",
														"src": "6232:7:6",
														"type": ""
													}
												],
												"src": "6195:126:6"
											},
											{
												"body": {
													"nativeSrc": "6372:51:6",
													"nodeType": "YulBlock",
													"src": "6372:51:6",
													"statements": [
														{
															"nativeSrc": "6382:35:6",
															"nodeType": "YulAssignment",
															"src": "6382:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6411:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "6411:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "6393:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6393:17:6"
																},
																"nativeSrc": "6393:24:6",
																"nodeType": "YulFunctionCall",
																"src": "6393:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6382:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "6382:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "6327:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6354:5:6",
														"nodeType": "YulTypedName",
														"src": "6354:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6364:7:6",
														"nodeType": "YulTypedName",
														"src": "6364:7:6",
														"type": ""
													}
												],
												"src": "6327:96:6"
											},
											{
												"body": {
													"nativeSrc": "6494:53:6",
													"nodeType": "YulBlock",
													"src": "6494:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6511:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6511:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6534:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6534:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6516:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "6516:17:6"
																		},
																		"nativeSrc": "6516:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6516:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6504:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6504:6:6"
																},
																"nativeSrc": "6504:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6504:37:6"
															},
															"nativeSrc": "6504:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "6504:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6429:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6482:5:6",
														"nodeType": "YulTypedName",
														"src": "6482:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6489:3:6",
														"nodeType": "YulTypedName",
														"src": "6489:3:6",
														"type": ""
													}
												],
												"src": "6429:118:6"
											},
											{
												"body": {
													"nativeSrc": "6651:124:6",
													"nodeType": "YulBlock",
													"src": "6651:124:6",
													"statements": [
														{
															"nativeSrc": "6661:26:6",
															"nodeType": "YulAssignment",
															"src": "6661:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6673:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6673:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6684:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6684:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6669:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6669:3:6"
																},
																"nativeSrc": "6669:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6669:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6661:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6661:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6741:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6741:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6754:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6754:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6765:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6765:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6750:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6750:3:6"
																		},
																		"nativeSrc": "6750:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6750:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6697:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6697:43:6"
																},
																"nativeSrc": "6697:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6697:71:6"
															},
															"nativeSrc": "6697:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6697:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6553:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6623:9:6",
														"nodeType": "YulTypedName",
														"src": "6623:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6635:6:6",
														"nodeType": "YulTypedName",
														"src": "6635:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6646:4:6",
														"nodeType": "YulTypedName",
														"src": "6646:4:6",
														"type": ""
													}
												],
												"src": "6553:222:6"
											},
											{
												"body": {
													"nativeSrc": "6809:152:6",
													"nodeType": "YulBlock",
													"src": "6809:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6826:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6826:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6829:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6829:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6819:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6819:6:6"
																},
																"nativeSrc": "6819:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6819:88:6"
															},
															"nativeSrc": "6819:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6819:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6923:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6923:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6926:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6926:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6916:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6916:6:6"
																},
																"nativeSrc": "6916:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6916:15:6"
															},
															"nativeSrc": "6916:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6916:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6947:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6947:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6950:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6950:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6940:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6940:6:6"
																},
																"nativeSrc": "6940:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6940:15:6"
															},
															"nativeSrc": "6940:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6940:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6781:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6781:180:6"
											},
											{
												"body": {
													"nativeSrc": "7011:147:6",
													"nodeType": "YulBlock",
													"src": "7011:147:6",
													"statements": [
														{
															"nativeSrc": "7021:25:6",
															"nodeType": "YulAssignment",
															"src": "7021:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7044:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7044:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7026:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7026:17:6"
																},
																"nativeSrc": "7026:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7026:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "7021:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7021:1:6"
																}
															]
														},
														{
															"nativeSrc": "7055:25:6",
															"nodeType": "YulAssignment",
															"src": "7055:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "7078:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7078:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "7060:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "7060:17:6"
																},
																"nativeSrc": "7060:20:6",
																"nodeType": "YulFunctionCall",
																"src": "7060:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "7055:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "7055:1:6"
																}
															]
														},
														{
															"nativeSrc": "7089:16:6",
															"nodeType": "YulAssignment",
															"src": "7089:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7100:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7100:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7103:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7103:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7096:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7096:3:6"
																},
																"nativeSrc": "7096:9:6",
																"nodeType": "YulFunctionCall",
																"src": "7096:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "7089:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7089:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7129:22:6",
																"nodeType": "YulBlock",
																"src": "7129:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7131:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "7131:16:6"
																			},
																			"nativeSrc": "7131:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "7131:18:6"
																		},
																		"nativeSrc": "7131:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "7131:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7121:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "7121:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "7124:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7124:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7118:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "7118:2:6"
																},
																"nativeSrc": "7118:10:6",
																"nodeType": "YulFunctionCall",
																"src": "7118:10:6"
															},
															"nativeSrc": "7115:36:6",
															"nodeType": "YulIf",
															"src": "7115:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6967:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6998:1:6",
														"nodeType": "YulTypedName",
														"src": "6998:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7001:1:6",
														"nodeType": "YulTypedName",
														"src": "7001:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "7007:3:6",
														"nodeType": "YulTypedName",
														"src": "7007:3:6",
														"type": ""
													}
												],
												"src": "6967:191:6"
											},
											{
												"body": {
													"nativeSrc": "7229:53:6",
													"nodeType": "YulBlock",
													"src": "7229:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "7246:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "7246:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7269:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "7269:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "7251:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "7251:17:6"
																		},
																		"nativeSrc": "7251:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7251:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7239:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:6"
																},
																"nativeSrc": "7239:37:6",
																"nodeType": "YulFunctionCall",
																"src": "7239:37:6"
															},
															"nativeSrc": "7239:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "7239:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "7164:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7217:5:6",
														"nodeType": "YulTypedName",
														"src": "7217:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "7224:3:6",
														"nodeType": "YulTypedName",
														"src": "7224:3:6",
														"type": ""
													}
												],
												"src": "7164:118:6"
											},
											{
												"body": {
													"nativeSrc": "7442:288:6",
													"nodeType": "YulBlock",
													"src": "7442:288:6",
													"statements": [
														{
															"nativeSrc": "7452:26:6",
															"nodeType": "YulAssignment",
															"src": "7452:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7464:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7464:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7475:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7460:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:6"
																},
																"nativeSrc": "7460:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7460:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7452:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7532:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7532:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7545:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7556:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7556:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7541:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7541:3:6"
																		},
																		"nativeSrc": "7541:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7541:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7488:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7488:43:6"
																},
																"nativeSrc": "7488:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7488:71:6"
															},
															"nativeSrc": "7488:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7488:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7613:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7613:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7626:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7626:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7637:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7637:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7622:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7622:3:6"
																		},
																		"nativeSrc": "7622:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7622:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7569:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7569:43:6"
																},
																"nativeSrc": "7569:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7569:72:6"
															},
															"nativeSrc": "7569:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7569:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7695:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7695:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7708:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7708:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7719:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7719:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7704:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7704:3:6"
																		},
																		"nativeSrc": "7704:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7704:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7651:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7651:43:6"
																},
																"nativeSrc": "7651:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7651:72:6"
															},
															"nativeSrc": "7651:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7651:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7288:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7398:9:6",
														"nodeType": "YulTypedName",
														"src": "7398:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7410:6:6",
														"nodeType": "YulTypedName",
														"src": "7410:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7418:6:6",
														"nodeType": "YulTypedName",
														"src": "7418:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7426:6:6",
														"nodeType": "YulTypedName",
														"src": "7426:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7437:4:6",
														"nodeType": "YulTypedName",
														"src": "7437:4:6",
														"type": ""
													}
												],
												"src": "7288:442:6"
											},
											{
												"body": {
													"nativeSrc": "7834:124:6",
													"nodeType": "YulBlock",
													"src": "7834:124:6",
													"statements": [
														{
															"nativeSrc": "7844:26:6",
															"nodeType": "YulAssignment",
															"src": "7844:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7856:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7856:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7867:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7867:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7852:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7852:3:6"
																},
																"nativeSrc": "7852:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7852:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7844:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7844:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7924:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7924:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7937:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7937:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7948:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7948:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7933:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7933:3:6"
																		},
																		"nativeSrc": "7933:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7933:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7880:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7880:43:6"
																},
																"nativeSrc": "7880:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7880:71:6"
															},
															"nativeSrc": "7880:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7880:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "7736:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7806:9:6",
														"nodeType": "YulTypedName",
														"src": "7806:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7818:6:6",
														"nodeType": "YulTypedName",
														"src": "7818:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7829:4:6",
														"nodeType": "YulTypedName",
														"src": "7829:4:6",
														"type": ""
													}
												],
												"src": "7736:222:6"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b50604051611bfd380380611bfd833981810160405281019061003191906104e1565b6005805461003e90610539565b80601f016020809104026020016040519081016040528092919081815260200182805461006a90610539565b80156100b55780601f1061008c576101008083540402835291602001916100b5565b820191905f5260205f20905b81548152906001019060200180831161009857829003601f168201915b5050505050600680546100c790610539565b80601f01602080910402602001604051908101604052809291908181526020018280546100f390610539565b801561013e5780601f106101155761010080835404028352916020019161013e565b820191905f5260205f20905b81548152906001019060200180831161012157829003601f168201915b50505050508160039081610152919061073d565b508060049081610162919061073d565b5050506040518060400160405280600b81526020017f54525474686553616c6164000000000000000000000000000000000000000000815250600590816101a9919061073d565b506040518060400160405280600381526020017f5452540000000000000000000000000000000000000000000000000000000000815250600690816101ee919061073d565b5080600781905550610206338261020c60201b60201c565b50610921565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff160361027c575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610273919061084b565b60405180910390fd5b61028d5f838361029160201b60201c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff16036102e1578060025f8282546102d59190610891565b925050819055506103af565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205490508181101561036a578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610361939291906108d3565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036103f6578060025f8282540392505081905550610440565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8360405161049d9190610908565b60405180910390a3505050565b5f80fd5b5f819050919050565b6104c0816104ae565b81146104ca575f80fd5b50565b5f815190506104db816104b7565b92915050565b5f602082840312156104f6576104f56104aa565b5b5f610503848285016104cd565b91505092915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061055057607f821691505b6020821081036105635761056261050c565b5b50919050565b5f81519050919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52604160045260245ffd5b5f819050815f5260205f209050919050565b5f6020601f8301049050919050565b5f82821b905092915050565b5f600883026105fc7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff826105c1565b61060686836105c1565b95508019841693508086168417925050509392505050565b5f819050919050565b5f61064161063c610637846104ae565b61061e565b6104ae565b9050919050565b5f819050919050565b61065a83610627565b61066e61066682610648565b8484546105cd565b825550505050565b5f90565b610682610676565b61068d818484610651565b505050565b5b818110156106b0576106a55f8261067a565b600181019050610693565b5050565b601f8211156106f5576106c6816105a0565b6106cf846105b2565b810160208510156106de578190505b6106f26106ea856105b2565b830182610692565b50505b505050565b5f82821c905092915050565b5f6107155f19846008026106fa565b1980831691505092915050565b5f61072d8383610706565b9150826002028217905092915050565b61074682610569565b67ffffffffffffffff81111561075f5761075e610573565b5b6107698254610539565b6107748282856106b4565b5f60209050601f8311600181146107a5575f8415610793578287015190505b61079d8582610722565b865550610804565b601f1984166107b3866105a0565b5f5b828110156107da578489015182556001820191506020850194506020810190506107b5565b868310156107f757848901516107f3601f891682610706565b8355505b6001600288020188555050505b505050505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6108358261080c565b9050919050565b6108458161082b565b82525050565b5f60208201905061085e5f83018461083c565b92915050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f61089b826104ae565b91506108a6836104ae565b92508282019050808211156108be576108bd610864565b5b92915050565b6108cd816104ae565b82525050565b5f6060820190506108e65f83018661083c565b6108f360208301856108c4565b61090060408301846108c4565b949350505050565b5f60208201905061091b5f8301846108c4565b92915050565b6112cf8061092e5f395ff3fe608060405234801561000f575f80fd5b5060043610610114575f3560e01c806395d89b41116100a0578063a9059cbb1161006f578063a9059cbb146102e2578063c4e41b2214610312578063dd62ed3e14610330578063ecf35cca14610360578063f1850af81461037e57610114565b806395d89b411461025a5780639b96eece146102785780639dc29fac146102a85780639f0c8125146102c457610114565b8063313ce567116100e7578063313ce567146101b45780633eaaf86b146101d257806340c10f19146101f057806370a082311461020c578063862b092b1461023c57610114565b806306fdde0314610118578063095ea7b31461013657806318160ddd1461016657806323b872dd14610184575b5f80fd5b61012061039c565b60405161012d9190610f15565b60405180910390f35b610150600480360381019061014b9190610fc6565b61042c565b60405161015d919061101e565b60405180910390f35b61016e610449565b60405161017b9190611046565b60405180910390f35b61019e6004803603810190610199919061105f565b610452565b6040516101ab919061101e565b60405180910390f35b6101bc610496565b6040516101c991906110ca565b60405180910390f35b6101da61049e565b6040516101e79190611046565b60405180910390f35b61020a60048036038101906102059190610fc6565b6104a4565b005b610226600480360381019061022191906110e3565b6104ca565b6040516102339190611046565b60405180910390f35b61024461050f565b6040516102519190610f15565b60405180910390f35b61026261059f565b60405161026f9190610f15565b60405180910390f35b610292600480360381019061028d91906110e3565b61062f565b60405161029f9190611046565b60405180910390f35b6102c260048036038101906102bd9190610fc6565b610640565b005b6102cc610666565b6040516102d99190610f15565b60405180910390f35b6102fc60048036038101906102f79190610fc6565b6106f2565b604051610309919061101e565b60405180910390f35b61031a61070f565b6040516103279190611046565b60405180910390f35b61034a6004803603810190610345919061110e565b610718565b6040516103579190611046565b60405180910390f35b61036861079a565b6040516103759190610f15565b60405180910390f35b610386610826565b6040516103939190610f15565b60405180910390f35b6060600380546103ab90611179565b80601f01602080910402602001604051908101604052809291908181526020018280546103d790611179565b80156104225780601f106103f957610100808354040283529160200191610422565b820191905f5260205f20905b81548152906001019060200180831161040557829003601f168201915b5050505050905090565b5f61043f6104386108b6565b84846108bd565b6001905092915050565b5f600254905090565b5f61045e8484846108cf565b61048b8461046a6108b6565b8461047c886104776108b6565b610718565b61048691906111d6565b6108bd565b600190509392505050565b5f6012905090565b60075481565b6104ae82826109bf565b8060075f8282546104bf9190611209565b925050819055505050565b5f805f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20549050919050565b60606005805461051e90611179565b80601f016020809104026020016040519081016040528092919081815260200182805461054a90611179565b80156105955780601f1061056c57610100808354040283529160200191610595565b820191905f5260205f20905b81548152906001019060200180831161057857829003601f168201915b5050505050905090565b6060600480546105ae90611179565b80601f01602080910402602001604051908101604052809291908181526020018280546105da90611179565b80156106255780601f106105fc57610100808354040283529160200191610625565b820191905f5260205f20905b81548152906001019060200180831161060857829003601f168201915b5050505050905090565b5f610639826104ca565b9050919050565b61064a8282610a3e565b8060075f82825461065b91906111d6565b925050819055505050565b6005805461067390611179565b80601f016020809104026020016040519081016040528092919081815260200182805461069f90611179565b80156106ea5780601f106106c1576101008083540402835291602001916106ea565b820191905f5260205f20905b8154815290600101906020018083116106cd57829003601f168201915b505050505081565b5f6107056106fe6108b6565b84846108cf565b6001905092915050565b5f600754905090565b5f60015f8473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905092915050565b600680546107a790611179565b80601f01602080910402602001604051908101604052809291908181526020018280546107d390611179565b801561081e5780601f106107f55761010080835404028352916020019161081e565b820191905f5260205f20905b81548152906001019060200180831161080157829003601f168201915b505050505081565b60606006805461083590611179565b80601f016020809104026020016040519081016040528092919081815260200182805461086190611179565b80156108ac5780601f10610883576101008083540402835291602001916108ac565b820191905f5260205f20905b81548152906001019060200180831161088f57829003601f168201915b5050505050905090565b5f33905090565b6108ca8383836001610abd565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff160361093f575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610936919061124b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16036109af575f6040517fec442f050000000000000000000000000000000000000000000000000000000081526004016109a6919061124b565b60405180910390fd5b6109ba838383610c8c565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610a2f575f6040517fec442f05000000000000000000000000000000000000000000000000000000008152600401610a26919061124b565b60405180910390fd5b610a3a5f8383610c8c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610aae575f6040517f96c6fd1e000000000000000000000000000000000000000000000000000000008152600401610aa5919061124b565b60405180910390fd5b610ab9825f83610c8c565b5050565b5f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff1603610b2d575f6040517fe602df05000000000000000000000000000000000000000000000000000000008152600401610b24919061124b565b60405180910390fd5b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610b9d575f6040517f94280d62000000000000000000000000000000000000000000000000000000008152600401610b94919061124b565b60405180910390fd5b8160015f8673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f20819055508015610c86578273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92584604051610c7d9190611046565b60405180910390a35b50505050565b5f73ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1603610cdc578060025f828254610cd09190611209565b92505081905550610daa565b5f805f8573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2054905081811015610d65578381836040517fe450d38c000000000000000000000000000000000000000000000000000000008152600401610d5c93929190611264565b60405180910390fd5b8181035f808673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f2081905550505b5f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1603610df1578060025f8282540392505081905550610e3b565b805f808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020015f205f82825401925050819055505b8173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef83604051610e989190611046565b60405180910390a3505050565b5f81519050919050565b5f82825260208201905092915050565b8281835e5f83830152505050565b5f601f19601f8301169050919050565b5f610ee782610ea5565b610ef18185610eaf565b9350610f01818560208601610ebf565b610f0a81610ecd565b840191505092915050565b5f6020820190508181035f830152610f2d8184610edd565b905092915050565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610f6282610f39565b9050919050565b610f7281610f58565b8114610f7c575f80fd5b50565b5f81359050610f8d81610f69565b92915050565b5f819050919050565b610fa581610f93565b8114610faf575f80fd5b50565b5f81359050610fc081610f9c565b92915050565b5f8060408385031215610fdc57610fdb610f35565b5b5f610fe985828601610f7f565b9250506020610ffa85828601610fb2565b9150509250929050565b5f8115159050919050565b61101881611004565b82525050565b5f6020820190506110315f83018461100f565b92915050565b61104081610f93565b82525050565b5f6020820190506110595f830184611037565b92915050565b5f805f6060848603121561107657611075610f35565b5b5f61108386828701610f7f565b935050602061109486828701610f7f565b92505060406110a586828701610fb2565b9150509250925092565b5f60ff82169050919050565b6110c4816110af565b82525050565b5f6020820190506110dd5f8301846110bb565b92915050565b5f602082840312156110f8576110f7610f35565b5b5f61110584828501610f7f565b91505092915050565b5f806040838503121561112457611123610f35565b5b5f61113185828601610f7f565b925050602061114285828601610f7f565b9150509250929050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602260045260245ffd5b5f600282049050600182168061119057607f821691505b6020821081036111a3576111a261114c565b5b50919050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6111e082610f93565b91506111eb83610f93565b9250828203905081811115611203576112026111a9565b5b92915050565b5f61121382610f93565b915061121e83610f93565b9250828201905080821115611236576112356111a9565b5b92915050565b61124581610f58565b82525050565b5f60208201905061125e5f83018461123c565b92915050565b5f6060820190506112775f83018661123c565b6112846020830185611037565b6112916040830184611037565b94935050505056fea264697066735822122030e459317df432e3f2e43d346e07ab18613c035681f7b27a78b434a96208deb464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x1BFD CODESIZE SUB DUP1 PUSH2 0x1BFD DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x4E1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x3E SWAP1 PUSH2 0x539 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x6A SWAP1 PUSH2 0x539 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xB5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x8C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xB5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x98 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP PUSH1 0x6 DUP1 SLOAD PUSH2 0xC7 SWAP1 PUSH2 0x539 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xF3 SWAP1 PUSH2 0x539 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x13E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x115 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x13E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x121 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 PUSH1 0x3 SWAP1 DUP2 PUSH2 0x152 SWAP2 SWAP1 PUSH2 0x73D JUMP JUMPDEST POP DUP1 PUSH1 0x4 SWAP1 DUP2 PUSH2 0x162 SWAP2 SWAP1 PUSH2 0x73D JUMP JUMPDEST POP POP POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xB DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x54525474686553616C6164000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x5 SWAP1 DUP2 PUSH2 0x1A9 SWAP2 SWAP1 PUSH2 0x73D JUMP JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x5452540000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE POP PUSH1 0x6 SWAP1 DUP2 PUSH2 0x1EE SWAP2 SWAP1 PUSH2 0x73D JUMP JUMPDEST POP DUP1 PUSH1 0x7 DUP2 SWAP1 SSTORE POP PUSH2 0x206 CALLER DUP3 PUSH2 0x20C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH2 0x921 JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x27C JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x273 SWAP2 SWAP1 PUSH2 0x84B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x28D PUSH0 DUP4 DUP4 PUSH2 0x291 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x2E1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x2D5 SWAP2 SWAP1 PUSH2 0x891 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x3AF JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x36A JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x361 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x3F6 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0x440 JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0x49D SWAP2 SWAP1 PUSH2 0x908 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x4C0 DUP2 PUSH2 0x4AE JUMP JUMPDEST DUP2 EQ PUSH2 0x4CA JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x4DB DUP2 PUSH2 0x4B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4F6 JUMPI PUSH2 0x4F5 PUSH2 0x4AA JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x503 DUP5 DUP3 DUP6 ADD PUSH2 0x4CD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x550 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x563 JUMPI PUSH2 0x562 PUSH2 0x50C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP DUP2 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x8 DUP4 MUL PUSH2 0x5FC PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x5C1 JUMP JUMPDEST PUSH2 0x606 DUP7 DUP4 PUSH2 0x5C1 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x641 PUSH2 0x63C PUSH2 0x637 DUP5 PUSH2 0x4AE JUMP JUMPDEST PUSH2 0x61E JUMP JUMPDEST PUSH2 0x4AE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x65A DUP4 PUSH2 0x627 JUMP JUMPDEST PUSH2 0x66E PUSH2 0x666 DUP3 PUSH2 0x648 JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x5CD JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH2 0x682 PUSH2 0x676 JUMP JUMPDEST PUSH2 0x68D DUP2 DUP5 DUP5 PUSH2 0x651 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x6B0 JUMPI PUSH2 0x6A5 PUSH0 DUP3 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x693 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x6F5 JUMPI PUSH2 0x6C6 DUP2 PUSH2 0x5A0 JUMP JUMPDEST PUSH2 0x6CF DUP5 PUSH2 0x5B2 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x6DE JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x6F2 PUSH2 0x6EA DUP6 PUSH2 0x5B2 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x692 JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x715 PUSH0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x6FA JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x72D DUP4 DUP4 PUSH2 0x706 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x746 DUP3 PUSH2 0x569 JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x75F JUMPI PUSH2 0x75E PUSH2 0x573 JUMP JUMPDEST JUMPDEST PUSH2 0x769 DUP3 SLOAD PUSH2 0x539 JUMP JUMPDEST PUSH2 0x774 DUP3 DUP3 DUP6 PUSH2 0x6B4 JUMP JUMPDEST PUSH0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x7A5 JUMPI PUSH0 DUP5 ISZERO PUSH2 0x793 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x79D DUP6 DUP3 PUSH2 0x722 JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x804 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x7B3 DUP7 PUSH2 0x5A0 JUMP JUMPDEST PUSH0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x7DA JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x7B5 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x7F7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x7F3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x706 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x835 DUP3 PUSH2 0x80C JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x845 DUP2 PUSH2 0x82B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x85E PUSH0 DUP4 ADD DUP5 PUSH2 0x83C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x89B DUP3 PUSH2 0x4AE JUMP JUMPDEST SWAP2 POP PUSH2 0x8A6 DUP4 PUSH2 0x4AE JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x8BE JUMPI PUSH2 0x8BD PUSH2 0x864 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x8CD DUP2 PUSH2 0x4AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x8E6 PUSH0 DUP4 ADD DUP7 PUSH2 0x83C JUMP JUMPDEST PUSH2 0x8F3 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x900 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x8C4 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x91B PUSH0 DUP4 ADD DUP5 PUSH2 0x8C4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x12CF DUP1 PUSH2 0x92E PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xECF35CCA EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xF1850AF8 EQ PUSH2 0x37E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x9B96EECE EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x9F0C8125 EQ PUSH2 0x2C4 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x862B092B EQ PUSH2 0x23C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x39C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x105F JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31A PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x368 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x386 PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3AB SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D7 SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x422 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x43F PUSH2 0x438 PUSH2 0x8B6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x45E DUP5 DUP5 DUP5 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x48B DUP5 PUSH2 0x46A PUSH2 0x8B6 JUMP JUMPDEST DUP5 PUSH2 0x47C DUP9 PUSH2 0x477 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4AE DUP3 DUP3 PUSH2 0x9BF JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x51E SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54A SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5AE SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DA SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x625 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x625 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x608 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x639 DUP3 PUSH2 0x4CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x64A DUP3 DUP3 PUSH2 0xA3E JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x673 SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x69F SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x705 PUSH2 0x6FE PUSH2 0x8B6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x7A7 SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7D3 SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x81E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x81E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x801 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x835 SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x861 SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x883 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8CA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xABD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x93F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x936 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BA DUP4 DUP4 DUP4 PUSH2 0xC8C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA26 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA3A PUSH0 DUP4 DUP4 PUSH2 0xC8C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB9 DUP3 PUSH0 DUP4 PUSH2 0xC8C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB2D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB9D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB94 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC86 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC7D SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCD0 SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDAA JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD65 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE3B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE98 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEE7 DUP3 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xEF1 DUP2 DUP6 PUSH2 0xEAF JUMP JUMPDEST SWAP4 POP PUSH2 0xF01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEBF JUMP JUMPDEST PUSH2 0xF0A DUP2 PUSH2 0xECD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF2D DUP2 DUP5 PUSH2 0xEDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF62 DUP3 PUSH2 0xF39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF72 DUP2 PUSH2 0xF58 JUMP JUMPDEST DUP2 EQ PUSH2 0xF7C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF8D DUP2 PUSH2 0xF69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA5 DUP2 PUSH2 0xF93 JUMP JUMPDEST DUP2 EQ PUSH2 0xFAF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFC0 DUP2 PUSH2 0xF9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDC JUMPI PUSH2 0xFDB PUSH2 0xF35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFE9 DUP6 DUP3 DUP7 ADD PUSH2 0xF7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFFA DUP6 DUP3 DUP7 ADD PUSH2 0xFB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1018 DUP2 PUSH2 0x1004 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1031 PUSH0 DUP4 ADD DUP5 PUSH2 0x100F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1040 DUP2 PUSH2 0xF93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1059 PUSH0 DUP4 ADD DUP5 PUSH2 0x1037 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1076 JUMPI PUSH2 0x1075 PUSH2 0xF35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1083 DUP7 DUP3 DUP8 ADD PUSH2 0xF7F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1094 DUP7 DUP3 DUP8 ADD PUSH2 0xF7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10A5 DUP7 DUP3 DUP8 ADD PUSH2 0xFB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C4 DUP2 PUSH2 0x10AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DD PUSH0 DUP4 ADD DUP5 PUSH2 0x10BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F8 JUMPI PUSH2 0x10F7 PUSH2 0xF35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1105 DUP5 DUP3 DUP6 ADD PUSH2 0xF7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1124 JUMPI PUSH2 0x1123 PUSH2 0xF35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1131 DUP6 DUP3 DUP7 ADD PUSH2 0xF7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1142 DUP6 DUP3 DUP7 ADD PUSH2 0xF7F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1190 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11A3 JUMPI PUSH2 0x11A2 PUSH2 0x114C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11E0 DUP3 PUSH2 0xF93 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EB DUP4 PUSH2 0xF93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1203 JUMPI PUSH2 0x1202 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1213 DUP3 PUSH2 0xF93 JUMP JUMPDEST SWAP2 POP PUSH2 0x121E DUP4 PUSH2 0xF93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1236 JUMPI PUSH2 0x1235 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1245 DUP2 PUSH2 0xF58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x125E PUSH0 DUP4 ADD DUP5 PUSH2 0x123C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1277 PUSH0 DUP4 ADD DUP7 PUSH2 0x123C JUMP JUMPDEST PUSH2 0x1284 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x1291 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1037 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xE4 MSIZE BALANCE PUSH30 0xF432E3F2E43D346E07AB18613C035681F7B27A78B434A96208DEB464736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "86:2656:4:-:0;;;371:250;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;412:10;1793:113:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;424:12:4;1793:113:1;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1867:5;1859;:13;;;;;;:::i;:::-;;1892:7;1882;:17;;;;;;:::i;:::-;;1793:113;;449:26:4::1;;;;;;;;;;;;;;;;::::0;:10:::1;:26;;;;;;:::i;:::-;;495:20;;;;;;;;;;;;;;;;::::0;:12:::1;:20;;;;;;:::i;:::-;;552:13;537:12;:28;;;;580:32;586:10;598:13;580:5;;;:32;;:::i;:::-;371:250:::0;86:2656;;7618:208:1;7707:1;7688:21;;:7;:21;;;7684:91;;7761:1;7732:32;;;;;;;;;;;:::i;:::-;;;;;;;;7684:91;7784:35;7800:1;7804:7;7813:5;7784:7;;;:35;;:::i;:::-;7618:208;;:::o;6168:1107::-;6273:1;6257:18;;:4;:18;;;6253:540;;6409:5;6393:12;;:21;;;;;;;:::i;:::-;;;;;;;;6253:540;;;6445:19;6467:9;:15;6477:4;6467:15;;;;;;;;;;;;;;;;6445:37;;6514:5;6500:11;:19;6496:115;;;6571:4;6577:11;6590:5;6546:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6496:115;6763:5;6749:11;:19;6731:9;:15;6741:4;6731:15;;;;;;;;;;;;;;;:37;;;;6431:362;6253:540;6821:1;6807:16;;:2;:16;;;6803:425;;6986:5;6970:12;;:21;;;;;;;;;;;6803:425;;;7198:5;7181:9;:13;7191:2;7181:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6803:425;7258:2;7243:25;;7252:4;7243:25;;;7262:5;7243:25;;;;;;:::i;:::-;;;;;;;;6168:1107;;;:::o;88:117:6:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:180::-;1099:77;1096:1;1089:88;1196:4;1193:1;1186:15;1220:4;1217:1;1210:15;1237:320;1281:6;1318:1;1312:4;1308:12;1298:22;;1365:1;1359:4;1355:12;1386:18;1376:81;;1442:4;1434:6;1430:17;1420:27;;1376:81;1504:2;1496:6;1493:14;1473:18;1470:38;1467:84;;1523:18;;:::i;:::-;1467:84;1288:269;1237:320;;;:::o;1563:99::-;1615:6;1649:5;1643:12;1633:22;;1563:99;;;:::o;1668:180::-;1716:77;1713:1;1706:88;1813:4;1810:1;1803:15;1837:4;1834:1;1827:15;1854:141;1903:4;1926:3;1918:11;;1949:3;1946:1;1939:14;1983:4;1980:1;1970:18;1962:26;;1854:141;;;:::o;2001:93::-;2038:6;2085:2;2080;2073:5;2069:14;2065:23;2055:33;;2001:93;;;:::o;2100:107::-;2144:8;2194:5;2188:4;2184:16;2163:37;;2100:107;;;;:::o;2213:393::-;2282:6;2332:1;2320:10;2316:18;2355:97;2385:66;2374:9;2355:97;:::i;:::-;2473:39;2503:8;2492:9;2473:39;:::i;:::-;2461:51;;2545:4;2541:9;2534:5;2530:21;2521:30;;2594:4;2584:8;2580:19;2573:5;2570:30;2560:40;;2289:317;;2213:393;;;;;:::o;2612:60::-;2640:3;2661:5;2654:12;;2612:60;;;:::o;2678:142::-;2728:9;2761:53;2779:34;2788:24;2806:5;2788:24;:::i;:::-;2779:34;:::i;:::-;2761:53;:::i;:::-;2748:66;;2678:142;;;:::o;2826:75::-;2869:3;2890:5;2883:12;;2826:75;;;:::o;2907:269::-;3017:39;3048:7;3017:39;:::i;:::-;3078:91;3127:41;3151:16;3127:41;:::i;:::-;3119:6;3112:4;3106:11;3078:91;:::i;:::-;3072:4;3065:105;2983:193;2907:269;;;:::o;3182:73::-;3227:3;3182:73;:::o;3261:189::-;3338:32;;:::i;:::-;3379:65;3437:6;3429;3423:4;3379:65;:::i;:::-;3314:136;3261:189;;:::o;3456:186::-;3516:120;3533:3;3526:5;3523:14;3516:120;;;3587:39;3624:1;3617:5;3587:39;:::i;:::-;3560:1;3553:5;3549:13;3540:22;;3516:120;;;3456:186;;:::o;3648:543::-;3749:2;3744:3;3741:11;3738:446;;;3783:38;3815:5;3783:38;:::i;:::-;3867:29;3885:10;3867:29;:::i;:::-;3857:8;3853:44;4050:2;4038:10;4035:18;4032:49;;;4071:8;4056:23;;4032:49;4094:80;4150:22;4168:3;4150:22;:::i;:::-;4140:8;4136:37;4123:11;4094:80;:::i;:::-;3753:431;;3738:446;3648:543;;;:::o;4197:117::-;4251:8;4301:5;4295:4;4291:16;4270:37;;4197:117;;;;:::o;4320:169::-;4364:6;4397:51;4445:1;4441:6;4433:5;4430:1;4426:13;4397:51;:::i;:::-;4393:56;4478:4;4472;4468:15;4458:25;;4371:118;4320:169;;;;:::o;4494:295::-;4570:4;4716:29;4741:3;4735:4;4716:29;:::i;:::-;4708:37;;4778:3;4775:1;4771:11;4765:4;4762:21;4754:29;;4494:295;;;;:::o;4794:1395::-;4911:37;4944:3;4911:37;:::i;:::-;5013:18;5005:6;5002:30;4999:56;;;5035:18;;:::i;:::-;4999:56;5079:38;5111:4;5105:11;5079:38;:::i;:::-;5164:67;5224:6;5216;5210:4;5164:67;:::i;:::-;5258:1;5282:4;5269:17;;5314:2;5306:6;5303:14;5331:1;5326:618;;;;5988:1;6005:6;6002:77;;;6054:9;6049:3;6045:19;6039:26;6030:35;;6002:77;6105:67;6165:6;6158:5;6105:67;:::i;:::-;6099:4;6092:81;5961:222;5296:887;;5326:618;5378:4;5374:9;5366:6;5362:22;5412:37;5444:4;5412:37;:::i;:::-;5471:1;5485:208;5499:7;5496:1;5493:14;5485:208;;;5578:9;5573:3;5569:19;5563:26;5555:6;5548:42;5629:1;5621:6;5617:14;5607:24;;5676:2;5665:9;5661:18;5648:31;;5522:4;5519:1;5515:12;5510:17;;5485:208;;;5721:6;5712:7;5709:19;5706:179;;;5779:9;5774:3;5770:19;5764:26;5822:48;5864:4;5856:6;5852:17;5841:9;5822:48;:::i;:::-;5814:6;5807:64;5729:156;5706:179;5931:1;5927;5919:6;5915:14;5911:22;5905:4;5898:36;5333:611;;;5296:887;;4886:1303;;;4794:1395;;:::o;6195:126::-;6232:7;6272:42;6265:5;6261:54;6250:65;;6195:126;;;:::o;6327:96::-;6364:7;6393:24;6411:5;6393:24;:::i;:::-;6382:35;;6327:96;;;:::o;6429:118::-;6516:24;6534:5;6516:24;:::i;:::-;6511:3;6504:37;6429:118;;:::o;6553:222::-;6646:4;6684:2;6673:9;6669:18;6661:26;;6697:71;6765:1;6754:9;6750:17;6741:6;6697:71;:::i;:::-;6553:222;;;;:::o;6781:180::-;6829:77;6826:1;6819:88;6926:4;6923:1;6916:15;6950:4;6947:1;6940:15;6967:191;7007:3;7026:20;7044:1;7026:20;:::i;:::-;7021:25;;7060:20;7078:1;7060:20;:::i;:::-;7055:25;;7103:1;7100;7096:9;7089:16;;7124:3;7121:1;7118:10;7115:36;;;7131:18;;:::i;:::-;7115:36;6967:191;;;;:::o;7164:118::-;7251:24;7269:5;7251:24;:::i;:::-;7246:3;7239:37;7164:118;;:::o;7288:442::-;7437:4;7475:2;7464:9;7460:18;7452:26;;7488:71;7556:1;7545:9;7541:17;7532:6;7488:71;:::i;:::-;7569:72;7637:2;7626:9;7622:18;7613:6;7569:72;:::i;:::-;7651;7719:2;7708:9;7704:18;7695:6;7651:72;:::i;:::-;7288:442;;;;;;:::o;7736:222::-;7829:4;7867:2;7856:9;7852:18;7844:26;;7880:71;7948:1;7937:9;7933:17;7924:6;7880:71;:::i;:::-;7736:222;;;;:::o;86:2656:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_approve_431": {
									"entryPoint": 2237,
									"id": 431,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_approve_491": {
									"entryPoint": 2749,
									"id": 491,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_burn_413": {
									"entryPoint": 2622,
									"id": 413,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_mint_380": {
									"entryPoint": 2495,
									"id": 380,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_msgSender_11": {
									"entryPoint": 2230,
									"id": 11,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_tokenName_651": {
									"entryPoint": 1638,
									"id": 651,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_tokenSymbol_653": {
									"entryPoint": 1946,
									"id": 653,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_totalSupply_655": {
									"entryPoint": 1182,
									"id": 655,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transfer_270": {
									"entryPoint": 2255,
									"id": 270,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@_update_347": {
									"entryPoint": 3212,
									"id": 347,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@allowance_167": {
									"entryPoint": 1816,
									"id": 167,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@approve_757": {
									"entryPoint": 1068,
									"id": 757,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@balanceOf_126": {
									"entryPoint": 1226,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@burn_717": {
									"entryPoint": 1600,
									"id": 717,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@decimals_104": {
									"entryPoint": 1174,
									"id": 104,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getBalanceOf_803": {
									"entryPoint": 1583,
									"id": 803,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getTokenName_811": {
									"entryPoint": 1295,
									"id": 811,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTokenSymbol_819": {
									"entryPoint": 2086,
									"id": 819,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getTotalSupply_827": {
									"entryPoint": 1807,
									"id": 827,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@mint_700": {
									"entryPoint": 1188,
									"id": 700,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@name_86": {
									"entryPoint": 924,
									"id": 86,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@symbol_95": {
									"entryPoint": 1439,
									"id": 95,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@totalSupply_113": {
									"entryPoint": 1097,
									"id": 113,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@transferFrom_791": {
									"entryPoint": 1106,
									"id": 791,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@transfer_737": {
									"entryPoint": 1778,
									"id": 737,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 3967,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 4018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 4323,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address": {
									"entryPoint": 4366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 4191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 4038,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4668,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 4111,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3805,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 4283,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4683,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 4708,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 4126,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3861,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4166,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 4298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_string_memory_ptr": {
									"entryPoint": 3749,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3759,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4617,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4566,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 3928,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4100,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 3897,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 3987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 4271,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 3775,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 4473,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x22": {
									"entryPoint": 4428,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 3893,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 3789,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 3945,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 3996,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:7453:6",
										"nodeType": "YulBlock",
										"src": "0:7453:6",
										"statements": [
											{
												"body": {
													"nativeSrc": "66:40:6",
													"nodeType": "YulBlock",
													"src": "66:40:6",
													"statements": [
														{
															"nativeSrc": "77:22:6",
															"nodeType": "YulAssignment",
															"src": "77:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "93:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "93:5:6"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "87:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "87:5:6"
																},
																"nativeSrc": "87:12:6",
																"nodeType": "YulFunctionCall",
																"src": "87:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "77:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "77:6:6"
																}
															]
														}
													]
												},
												"name": "array_length_t_string_memory_ptr",
												"nativeSrc": "7:99:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "49:5:6",
														"nodeType": "YulTypedName",
														"src": "49:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "59:6:6",
														"nodeType": "YulTypedName",
														"src": "59:6:6",
														"type": ""
													}
												],
												"src": "7:99:6"
											},
											{
												"body": {
													"nativeSrc": "208:73:6",
													"nodeType": "YulBlock",
													"src": "208:73:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "225:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "225:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "230:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "230:6:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "218:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "218:6:6"
																},
																"nativeSrc": "218:19:6",
																"nodeType": "YulFunctionCall",
																"src": "218:19:6"
															},
															"nativeSrc": "218:19:6",
															"nodeType": "YulExpressionStatement",
															"src": "218:19:6"
														},
														{
															"nativeSrc": "246:29:6",
															"nodeType": "YulAssignment",
															"src": "246:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "265:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "265:3:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "270:4:6",
																		"nodeType": "YulLiteral",
																		"src": "270:4:6",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "261:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "261:3:6"
																},
																"nativeSrc": "261:14:6",
																"nodeType": "YulFunctionCall",
																"src": "261:14:6"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "246:11:6",
																	"nodeType": "YulIdentifier",
																	"src": "246:11:6"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "112:169:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "180:3:6",
														"nodeType": "YulTypedName",
														"src": "180:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "185:6:6",
														"nodeType": "YulTypedName",
														"src": "185:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "196:11:6",
														"nodeType": "YulTypedName",
														"src": "196:11:6",
														"type": ""
													}
												],
												"src": "112:169:6"
											},
											{
												"body": {
													"nativeSrc": "349:77:6",
													"nodeType": "YulBlock",
													"src": "349:77:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "366:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "366:3:6"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "371:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "371:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "376:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "376:6:6"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "360:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "360:5:6"
																},
																"nativeSrc": "360:23:6",
																"nodeType": "YulFunctionCall",
																"src": "360:23:6"
															},
															"nativeSrc": "360:23:6",
															"nodeType": "YulExpressionStatement",
															"src": "360:23:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "403:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "403:3:6"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "408:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "408:6:6"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "399:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "399:3:6"
																		},
																		"nativeSrc": "399:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "399:16:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "417:1:6",
																		"nodeType": "YulLiteral",
																		"src": "417:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "392:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "392:6:6"
																},
																"nativeSrc": "392:27:6",
																"nodeType": "YulFunctionCall",
																"src": "392:27:6"
															},
															"nativeSrc": "392:27:6",
															"nodeType": "YulExpressionStatement",
															"src": "392:27:6"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "331:3:6",
														"nodeType": "YulTypedName",
														"src": "331:3:6",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "336:3:6",
														"nodeType": "YulTypedName",
														"src": "336:3:6",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "341:6:6",
														"nodeType": "YulTypedName",
														"src": "341:6:6",
														"type": ""
													}
												],
												"src": "287:139:6"
											},
											{
												"body": {
													"nativeSrc": "480:54:6",
													"nodeType": "YulBlock",
													"src": "480:54:6",
													"statements": [
														{
															"nativeSrc": "490:38:6",
															"nodeType": "YulAssignment",
															"src": "490:38:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "508:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "508:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "515:2:6",
																				"nodeType": "YulLiteral",
																				"src": "515:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "504:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "504:3:6"
																		},
																		"nativeSrc": "504:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "504:14:6"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "524:2:6",
																				"nodeType": "YulLiteral",
																				"src": "524:2:6",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "520:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "520:3:6"
																		},
																		"nativeSrc": "520:7:6",
																		"nodeType": "YulFunctionCall",
																		"src": "520:7:6"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "500:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "500:3:6"
																},
																"nativeSrc": "500:28:6",
																"nodeType": "YulFunctionCall",
																"src": "500:28:6"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nativeSrc": "490:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "490:6:6"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nativeSrc": "432:102:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "463:5:6",
														"nodeType": "YulTypedName",
														"src": "463:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nativeSrc": "473:6:6",
														"nodeType": "YulTypedName",
														"src": "473:6:6",
														"type": ""
													}
												],
												"src": "432:102:6"
											},
											{
												"body": {
													"nativeSrc": "632:285:6",
													"nodeType": "YulBlock",
													"src": "632:285:6",
													"statements": [
														{
															"nativeSrc": "642:53:6",
															"nodeType": "YulVariableDeclaration",
															"src": "642:53:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "689:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "689:5:6"
																	}
																],
																"functionName": {
																	"name": "array_length_t_string_memory_ptr",
																	"nativeSrc": "656:32:6",
																	"nodeType": "YulIdentifier",
																	"src": "656:32:6"
																},
																"nativeSrc": "656:39:6",
																"nodeType": "YulFunctionCall",
																"src": "656:39:6"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "646:6:6",
																	"nodeType": "YulTypedName",
																	"src": "646:6:6",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "704:78:6",
															"nodeType": "YulAssignment",
															"src": "704:78:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "770:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "770:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "775:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "775:6:6"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "711:58:6",
																	"nodeType": "YulIdentifier",
																	"src": "711:58:6"
																},
																"nativeSrc": "711:71:6",
																"nodeType": "YulFunctionCall",
																"src": "711:71:6"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "704:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "704:3:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "830:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "830:5:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "837:4:6",
																				"nodeType": "YulLiteral",
																				"src": "837:4:6",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "826:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "826:3:6"
																		},
																		"nativeSrc": "826:16:6",
																		"nodeType": "YulFunctionCall",
																		"src": "826:16:6"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "844:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "844:3:6"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "849:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "849:6:6"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "791:34:6",
																	"nodeType": "YulIdentifier",
																	"src": "791:34:6"
																},
																"nativeSrc": "791:65:6",
																"nodeType": "YulFunctionCall",
																"src": "791:65:6"
															},
															"nativeSrc": "791:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "791:65:6"
														},
														{
															"nativeSrc": "865:46:6",
															"nodeType": "YulAssignment",
															"src": "865:46:6",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "876:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "876:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "903:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "903:6:6"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nativeSrc": "881:21:6",
																			"nodeType": "YulIdentifier",
																			"src": "881:21:6"
																		},
																		"nativeSrc": "881:29:6",
																		"nodeType": "YulFunctionCall",
																		"src": "881:29:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "872:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "872:3:6"
																},
																"nativeSrc": "872:39:6",
																"nodeType": "YulFunctionCall",
																"src": "872:39:6"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "865:3:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "540:377:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "613:5:6",
														"nodeType": "YulTypedName",
														"src": "613:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "620:3:6",
														"nodeType": "YulTypedName",
														"src": "620:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "628:3:6",
														"nodeType": "YulTypedName",
														"src": "628:3:6",
														"type": ""
													}
												],
												"src": "540:377:6"
											},
											{
												"body": {
													"nativeSrc": "1041:195:6",
													"nodeType": "YulBlock",
													"src": "1041:195:6",
													"statements": [
														{
															"nativeSrc": "1051:26:6",
															"nodeType": "YulAssignment",
															"src": "1051:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1063:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "1063:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1074:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1074:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1059:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1059:3:6"
																},
																"nativeSrc": "1059:18:6",
																"nodeType": "YulFunctionCall",
																"src": "1059:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1051:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1051:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1098:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1098:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1109:1:6",
																				"nodeType": "YulLiteral",
																				"src": "1109:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1094:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1094:3:6"
																		},
																		"nativeSrc": "1094:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1094:17:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "1117:4:6",
																				"nodeType": "YulIdentifier",
																				"src": "1117:4:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1123:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "1123:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1113:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "1113:3:6"
																		},
																		"nativeSrc": "1113:20:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1113:20:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1087:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1087:6:6"
																},
																"nativeSrc": "1087:47:6",
																"nodeType": "YulFunctionCall",
																"src": "1087:47:6"
															},
															"nativeSrc": "1087:47:6",
															"nodeType": "YulExpressionStatement",
															"src": "1087:47:6"
														},
														{
															"nativeSrc": "1143:86:6",
															"nodeType": "YulAssignment",
															"src": "1143:86:6",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1215:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "1215:6:6"
																	},
																	{
																		"name": "tail",
																		"nativeSrc": "1224:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "1224:4:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1151:63:6",
																	"nodeType": "YulIdentifier",
																	"src": "1151:63:6"
																},
																"nativeSrc": "1151:78:6",
																"nodeType": "YulFunctionCall",
																"src": "1151:78:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1143:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "1143:4:6"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "923:313:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1013:9:6",
														"nodeType": "YulTypedName",
														"src": "1013:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1025:6:6",
														"nodeType": "YulTypedName",
														"src": "1025:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1036:4:6",
														"nodeType": "YulTypedName",
														"src": "1036:4:6",
														"type": ""
													}
												],
												"src": "923:313:6"
											},
											{
												"body": {
													"nativeSrc": "1282:35:6",
													"nodeType": "YulBlock",
													"src": "1282:35:6",
													"statements": [
														{
															"nativeSrc": "1292:19:6",
															"nodeType": "YulAssignment",
															"src": "1292:19:6",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1308:2:6",
																		"nodeType": "YulLiteral",
																		"src": "1308:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1302:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1302:5:6"
																},
																"nativeSrc": "1302:9:6",
																"nodeType": "YulFunctionCall",
																"src": "1302:9:6"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "1292:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1292:6:6"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "1242:75:6",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "1275:6:6",
														"nodeType": "YulTypedName",
														"src": "1275:6:6",
														"type": ""
													}
												],
												"src": "1242:75:6"
											},
											{
												"body": {
													"nativeSrc": "1412:28:6",
													"nodeType": "YulBlock",
													"src": "1412:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1429:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1429:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1432:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1432:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1422:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1422:6:6"
																},
																"nativeSrc": "1422:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1422:12:6"
															},
															"nativeSrc": "1422:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1422:12:6"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "1323:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1323:117:6"
											},
											{
												"body": {
													"nativeSrc": "1535:28:6",
													"nodeType": "YulBlock",
													"src": "1535:28:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1552:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1552:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1555:1:6",
																		"nodeType": "YulLiteral",
																		"src": "1555:1:6",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "1545:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1545:6:6"
																},
																"nativeSrc": "1545:12:6",
																"nodeType": "YulFunctionCall",
																"src": "1545:12:6"
															},
															"nativeSrc": "1545:12:6",
															"nodeType": "YulExpressionStatement",
															"src": "1545:12:6"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "1446:117:6",
												"nodeType": "YulFunctionDefinition",
												"src": "1446:117:6"
											},
											{
												"body": {
													"nativeSrc": "1614:81:6",
													"nodeType": "YulBlock",
													"src": "1614:81:6",
													"statements": [
														{
															"nativeSrc": "1624:65:6",
															"nodeType": "YulAssignment",
															"src": "1624:65:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1639:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1639:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1646:42:6",
																		"nodeType": "YulLiteral",
																		"src": "1646:42:6",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1635:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "1635:3:6"
																},
																"nativeSrc": "1635:54:6",
																"nodeType": "YulFunctionCall",
																"src": "1635:54:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1624:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1624:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1569:126:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1596:5:6",
														"nodeType": "YulTypedName",
														"src": "1596:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1606:7:6",
														"nodeType": "YulTypedName",
														"src": "1606:7:6",
														"type": ""
													}
												],
												"src": "1569:126:6"
											},
											{
												"body": {
													"nativeSrc": "1746:51:6",
													"nodeType": "YulBlock",
													"src": "1746:51:6",
													"statements": [
														{
															"nativeSrc": "1756:35:6",
															"nodeType": "YulAssignment",
															"src": "1756:35:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1785:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "1785:5:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1767:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "1767:17:6"
																},
																"nativeSrc": "1767:24:6",
																"nodeType": "YulFunctionCall",
																"src": "1767:24:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1756:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "1756:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1701:96:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1728:5:6",
														"nodeType": "YulTypedName",
														"src": "1728:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1738:7:6",
														"nodeType": "YulTypedName",
														"src": "1738:7:6",
														"type": ""
													}
												],
												"src": "1701:96:6"
											},
											{
												"body": {
													"nativeSrc": "1846:79:6",
													"nodeType": "YulBlock",
													"src": "1846:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "1903:16:6",
																"nodeType": "YulBlock",
																"src": "1903:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1912:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1912:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1915:1:6",
																					"nodeType": "YulLiteral",
																					"src": "1915:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1905:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "1905:6:6"
																			},
																			"nativeSrc": "1905:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "1905:12:6"
																		},
																		"nativeSrc": "1905:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "1905:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1869:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "1869:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1894:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "1894:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1876:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "1876:17:6"
																				},
																				"nativeSrc": "1876:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "1876:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1866:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "1866:2:6"
																		},
																		"nativeSrc": "1866:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "1866:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1859:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1859:6:6"
																},
																"nativeSrc": "1859:43:6",
																"nodeType": "YulFunctionCall",
																"src": "1859:43:6"
															},
															"nativeSrc": "1856:63:6",
															"nodeType": "YulIf",
															"src": "1856:63:6"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1803:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1839:5:6",
														"nodeType": "YulTypedName",
														"src": "1839:5:6",
														"type": ""
													}
												],
												"src": "1803:122:6"
											},
											{
												"body": {
													"nativeSrc": "1983:87:6",
													"nodeType": "YulBlock",
													"src": "1983:87:6",
													"statements": [
														{
															"nativeSrc": "1993:29:6",
															"nodeType": "YulAssignment",
															"src": "1993:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2015:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2015:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2002:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2002:12:6"
																},
																"nativeSrc": "2002:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2002:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1993:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "1993:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2058:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2058:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "2031:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2031:26:6"
																},
																"nativeSrc": "2031:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2031:33:6"
															},
															"nativeSrc": "2031:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2031:33:6"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1931:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1961:6:6",
														"nodeType": "YulTypedName",
														"src": "1961:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1969:3:6",
														"nodeType": "YulTypedName",
														"src": "1969:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1977:5:6",
														"nodeType": "YulTypedName",
														"src": "1977:5:6",
														"type": ""
													}
												],
												"src": "1931:139:6"
											},
											{
												"body": {
													"nativeSrc": "2121:32:6",
													"nodeType": "YulBlock",
													"src": "2121:32:6",
													"statements": [
														{
															"nativeSrc": "2131:16:6",
															"nodeType": "YulAssignment",
															"src": "2131:16:6",
															"value": {
																"name": "value",
																"nativeSrc": "2142:5:6",
																"nodeType": "YulIdentifier",
																"src": "2142:5:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2131:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2131:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "2076:77:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2103:5:6",
														"nodeType": "YulTypedName",
														"src": "2103:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2113:7:6",
														"nodeType": "YulTypedName",
														"src": "2113:7:6",
														"type": ""
													}
												],
												"src": "2076:77:6"
											},
											{
												"body": {
													"nativeSrc": "2202:79:6",
													"nodeType": "YulBlock",
													"src": "2202:79:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2259:16:6",
																"nodeType": "YulBlock",
																"src": "2259:16:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2268:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2268:1:6",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2271:1:6",
																					"nodeType": "YulLiteral",
																					"src": "2271:1:6",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2261:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "2261:6:6"
																			},
																			"nativeSrc": "2261:12:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2261:12:6"
																		},
																		"nativeSrc": "2261:12:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2261:12:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2225:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2225:5:6"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2250:5:6",
																						"nodeType": "YulIdentifier",
																						"src": "2250:5:6"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "2232:17:6",
																					"nodeType": "YulIdentifier",
																					"src": "2232:17:6"
																				},
																				"nativeSrc": "2232:24:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2232:24:6"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2222:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "2222:2:6"
																		},
																		"nativeSrc": "2222:35:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2222:35:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2215:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2215:6:6"
																},
																"nativeSrc": "2215:43:6",
																"nodeType": "YulFunctionCall",
																"src": "2215:43:6"
															},
															"nativeSrc": "2212:63:6",
															"nodeType": "YulIf",
															"src": "2212:63:6"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "2159:122:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2195:5:6",
														"nodeType": "YulTypedName",
														"src": "2195:5:6",
														"type": ""
													}
												],
												"src": "2159:122:6"
											},
											{
												"body": {
													"nativeSrc": "2339:87:6",
													"nodeType": "YulBlock",
													"src": "2339:87:6",
													"statements": [
														{
															"nativeSrc": "2349:29:6",
															"nodeType": "YulAssignment",
															"src": "2349:29:6",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2371:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "2371:6:6"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2358:12:6",
																	"nodeType": "YulIdentifier",
																	"src": "2358:12:6"
																},
																"nativeSrc": "2358:20:6",
																"nodeType": "YulFunctionCall",
																"src": "2358:20:6"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2349:5:6",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2414:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "2414:5:6"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "2387:26:6",
																	"nodeType": "YulIdentifier",
																	"src": "2387:26:6"
																},
																"nativeSrc": "2387:33:6",
																"nodeType": "YulFunctionCall",
																"src": "2387:33:6"
															},
															"nativeSrc": "2387:33:6",
															"nodeType": "YulExpressionStatement",
															"src": "2387:33:6"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "2287:139:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2317:6:6",
														"nodeType": "YulTypedName",
														"src": "2317:6:6",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2325:3:6",
														"nodeType": "YulTypedName",
														"src": "2325:3:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2333:5:6",
														"nodeType": "YulTypedName",
														"src": "2333:5:6",
														"type": ""
													}
												],
												"src": "2287:139:6"
											},
											{
												"body": {
													"nativeSrc": "2515:391:6",
													"nodeType": "YulBlock",
													"src": "2515:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "2561:83:6",
																"nodeType": "YulBlock",
																"src": "2561:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2563:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "2563:77:6"
																			},
																			"nativeSrc": "2563:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "2563:79:6"
																		},
																		"nativeSrc": "2563:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "2563:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2536:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2536:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2545:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "2545:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2532:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "2532:3:6"
																		},
																		"nativeSrc": "2532:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2532:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2557:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2557:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2528:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "2528:3:6"
																},
																"nativeSrc": "2528:32:6",
																"nodeType": "YulFunctionCall",
																"src": "2528:32:6"
															},
															"nativeSrc": "2525:119:6",
															"nodeType": "YulIf",
															"src": "2525:119:6"
														},
														{
															"nativeSrc": "2654:117:6",
															"nodeType": "YulBlock",
															"src": "2654:117:6",
															"statements": [
																{
																	"nativeSrc": "2669:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2669:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2683:1:6",
																		"nodeType": "YulLiteral",
																		"src": "2683:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2673:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2673:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2698:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2698:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2733:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2733:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2744:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2744:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2729:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2729:3:6"
																				},
																				"nativeSrc": "2729:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2729:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2753:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2753:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2708:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2708:20:6"
																		},
																		"nativeSrc": "2708:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2708:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2698:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2698:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "2781:118:6",
															"nodeType": "YulBlock",
															"src": "2781:118:6",
															"statements": [
																{
																	"nativeSrc": "2796:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2796:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2810:2:6",
																		"nodeType": "YulLiteral",
																		"src": "2810:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2800:6:6",
																			"nodeType": "YulTypedName",
																			"src": "2800:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2826:63:6",
																	"nodeType": "YulAssignment",
																	"src": "2826:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2861:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "2861:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2872:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "2872:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2857:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "2857:3:6"
																				},
																				"nativeSrc": "2857:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "2857:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2881:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "2881:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "2836:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "2836:20:6"
																		},
																		"nativeSrc": "2836:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2836:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "2826:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2826:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "2432:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2477:9:6",
														"nodeType": "YulTypedName",
														"src": "2477:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2488:7:6",
														"nodeType": "YulTypedName",
														"src": "2488:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2500:6:6",
														"nodeType": "YulTypedName",
														"src": "2500:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2508:6:6",
														"nodeType": "YulTypedName",
														"src": "2508:6:6",
														"type": ""
													}
												],
												"src": "2432:474:6"
											},
											{
												"body": {
													"nativeSrc": "2954:48:6",
													"nodeType": "YulBlock",
													"src": "2954:48:6",
													"statements": [
														{
															"nativeSrc": "2964:32:6",
															"nodeType": "YulAssignment",
															"src": "2964:32:6",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2989:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "2989:5:6"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2982:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "2982:6:6"
																		},
																		"nativeSrc": "2982:13:6",
																		"nodeType": "YulFunctionCall",
																		"src": "2982:13:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2975:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "2975:6:6"
																},
																"nativeSrc": "2975:21:6",
																"nodeType": "YulFunctionCall",
																"src": "2975:21:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2964:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "2964:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2912:90:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2936:5:6",
														"nodeType": "YulTypedName",
														"src": "2936:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2946:7:6",
														"nodeType": "YulTypedName",
														"src": "2946:7:6",
														"type": ""
													}
												],
												"src": "2912:90:6"
											},
											{
												"body": {
													"nativeSrc": "3067:50:6",
													"nodeType": "YulBlock",
													"src": "3067:50:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3084:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3084:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3104:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3104:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "3089:14:6",
																			"nodeType": "YulIdentifier",
																			"src": "3089:14:6"
																		},
																		"nativeSrc": "3089:21:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3089:21:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3077:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3077:6:6"
																},
																"nativeSrc": "3077:34:6",
																"nodeType": "YulFunctionCall",
																"src": "3077:34:6"
															},
															"nativeSrc": "3077:34:6",
															"nodeType": "YulExpressionStatement",
															"src": "3077:34:6"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "3008:109:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3055:5:6",
														"nodeType": "YulTypedName",
														"src": "3055:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3062:3:6",
														"nodeType": "YulTypedName",
														"src": "3062:3:6",
														"type": ""
													}
												],
												"src": "3008:109:6"
											},
											{
												"body": {
													"nativeSrc": "3215:118:6",
													"nodeType": "YulBlock",
													"src": "3215:118:6",
													"statements": [
														{
															"nativeSrc": "3225:26:6",
															"nodeType": "YulAssignment",
															"src": "3225:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3237:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3237:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3248:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3248:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3233:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3233:3:6"
																},
																"nativeSrc": "3233:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3233:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3225:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3225:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3299:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3299:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3312:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3312:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3323:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3323:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3308:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3308:3:6"
																		},
																		"nativeSrc": "3308:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3308:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "3261:37:6",
																	"nodeType": "YulIdentifier",
																	"src": "3261:37:6"
																},
																"nativeSrc": "3261:65:6",
																"nodeType": "YulFunctionCall",
																"src": "3261:65:6"
															},
															"nativeSrc": "3261:65:6",
															"nodeType": "YulExpressionStatement",
															"src": "3261:65:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "3123:210:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3187:9:6",
														"nodeType": "YulTypedName",
														"src": "3187:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3199:6:6",
														"nodeType": "YulTypedName",
														"src": "3199:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3210:4:6",
														"nodeType": "YulTypedName",
														"src": "3210:4:6",
														"type": ""
													}
												],
												"src": "3123:210:6"
											},
											{
												"body": {
													"nativeSrc": "3404:53:6",
													"nodeType": "YulBlock",
													"src": "3404:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "3421:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "3421:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "3444:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "3444:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "3426:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "3426:17:6"
																		},
																		"nativeSrc": "3426:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3426:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3414:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "3414:6:6"
																},
																"nativeSrc": "3414:37:6",
																"nodeType": "YulFunctionCall",
																"src": "3414:37:6"
															},
															"nativeSrc": "3414:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "3414:37:6"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "3339:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3392:5:6",
														"nodeType": "YulTypedName",
														"src": "3392:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3399:3:6",
														"nodeType": "YulTypedName",
														"src": "3399:3:6",
														"type": ""
													}
												],
												"src": "3339:118:6"
											},
											{
												"body": {
													"nativeSrc": "3561:124:6",
													"nodeType": "YulBlock",
													"src": "3561:124:6",
													"statements": [
														{
															"nativeSrc": "3571:26:6",
															"nodeType": "YulAssignment",
															"src": "3571:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3583:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "3583:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3594:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3594:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3579:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3579:3:6"
																},
																"nativeSrc": "3579:18:6",
																"nodeType": "YulFunctionCall",
																"src": "3579:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3571:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "3571:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "3651:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "3651:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3664:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3664:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3675:1:6",
																				"nodeType": "YulLiteral",
																				"src": "3675:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3660:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3660:3:6"
																		},
																		"nativeSrc": "3660:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3660:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "3607:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "3607:43:6"
																},
																"nativeSrc": "3607:71:6",
																"nodeType": "YulFunctionCall",
																"src": "3607:71:6"
															},
															"nativeSrc": "3607:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "3607:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3463:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3533:9:6",
														"nodeType": "YulTypedName",
														"src": "3533:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3545:6:6",
														"nodeType": "YulTypedName",
														"src": "3545:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3556:4:6",
														"nodeType": "YulTypedName",
														"src": "3556:4:6",
														"type": ""
													}
												],
												"src": "3463:222:6"
											},
											{
												"body": {
													"nativeSrc": "3791:519:6",
													"nodeType": "YulBlock",
													"src": "3791:519:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "3837:83:6",
																"nodeType": "YulBlock",
																"src": "3837:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "3839:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "3839:77:6"
																			},
																			"nativeSrc": "3839:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "3839:79:6"
																		},
																		"nativeSrc": "3839:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "3839:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3812:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "3812:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3821:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "3821:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3808:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "3808:3:6"
																		},
																		"nativeSrc": "3808:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3808:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3833:2:6",
																		"nodeType": "YulLiteral",
																		"src": "3833:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3804:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "3804:3:6"
																},
																"nativeSrc": "3804:32:6",
																"nodeType": "YulFunctionCall",
																"src": "3804:32:6"
															},
															"nativeSrc": "3801:119:6",
															"nodeType": "YulIf",
															"src": "3801:119:6"
														},
														{
															"nativeSrc": "3930:117:6",
															"nodeType": "YulBlock",
															"src": "3930:117:6",
															"statements": [
																{
																	"nativeSrc": "3945:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3945:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3959:1:6",
																		"nodeType": "YulLiteral",
																		"src": "3959:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "3949:6:6",
																			"nodeType": "YulTypedName",
																			"src": "3949:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3974:63:6",
																	"nodeType": "YulAssignment",
																	"src": "3974:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4009:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4009:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4020:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4020:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4005:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4005:3:6"
																				},
																				"nativeSrc": "4005:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4005:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4029:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4029:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "3984:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "3984:20:6"
																		},
																		"nativeSrc": "3984:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "3984:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3974:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "3974:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4057:118:6",
															"nodeType": "YulBlock",
															"src": "4057:118:6",
															"statements": [
																{
																	"nativeSrc": "4072:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4072:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4086:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4086:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4076:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4076:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4102:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4102:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4137:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4137:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4148:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4148:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4133:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4133:3:6"
																				},
																				"nativeSrc": "4133:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4133:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4157:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4157:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "4112:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4112:20:6"
																		},
																		"nativeSrc": "4112:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4112:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "4102:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4102:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "4185:118:6",
															"nodeType": "YulBlock",
															"src": "4185:118:6",
															"statements": [
																{
																	"nativeSrc": "4200:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4200:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4214:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4214:2:6",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4204:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4204:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4230:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4230:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "4265:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "4265:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "4276:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "4276:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4261:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "4261:3:6"
																				},
																				"nativeSrc": "4261:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "4261:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4285:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4285:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "4240:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "4240:20:6"
																		},
																		"nativeSrc": "4240:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4240:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "4230:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4230:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nativeSrc": "3691:619:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3745:9:6",
														"nodeType": "YulTypedName",
														"src": "3745:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3756:7:6",
														"nodeType": "YulTypedName",
														"src": "3756:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3768:6:6",
														"nodeType": "YulTypedName",
														"src": "3768:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3776:6:6",
														"nodeType": "YulTypedName",
														"src": "3776:6:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3784:6:6",
														"nodeType": "YulTypedName",
														"src": "3784:6:6",
														"type": ""
													}
												],
												"src": "3691:619:6"
											},
											{
												"body": {
													"nativeSrc": "4359:43:6",
													"nodeType": "YulBlock",
													"src": "4359:43:6",
													"statements": [
														{
															"nativeSrc": "4369:27:6",
															"nodeType": "YulAssignment",
															"src": "4369:27:6",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4384:5:6",
																		"nodeType": "YulIdentifier",
																		"src": "4384:5:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4391:4:6",
																		"nodeType": "YulLiteral",
																		"src": "4391:4:6",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4380:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4380:3:6"
																},
																"nativeSrc": "4380:16:6",
																"nodeType": "YulFunctionCall",
																"src": "4380:16:6"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4369:7:6",
																	"nodeType": "YulIdentifier",
																	"src": "4369:7:6"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "4316:86:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4341:5:6",
														"nodeType": "YulTypedName",
														"src": "4341:5:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4351:7:6",
														"nodeType": "YulTypedName",
														"src": "4351:7:6",
														"type": ""
													}
												],
												"src": "4316:86:6"
											},
											{
												"body": {
													"nativeSrc": "4469:51:6",
													"nodeType": "YulBlock",
													"src": "4469:51:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4486:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "4486:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4507:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "4507:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "4491:15:6",
																			"nodeType": "YulIdentifier",
																			"src": "4491:15:6"
																		},
																		"nativeSrc": "4491:22:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4491:22:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4479:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "4479:6:6"
																},
																"nativeSrc": "4479:35:6",
																"nodeType": "YulFunctionCall",
																"src": "4479:35:6"
															},
															"nativeSrc": "4479:35:6",
															"nodeType": "YulExpressionStatement",
															"src": "4479:35:6"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "4408:112:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4457:5:6",
														"nodeType": "YulTypedName",
														"src": "4457:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4464:3:6",
														"nodeType": "YulTypedName",
														"src": "4464:3:6",
														"type": ""
													}
												],
												"src": "4408:112:6"
											},
											{
												"body": {
													"nativeSrc": "4620:120:6",
													"nodeType": "YulBlock",
													"src": "4620:120:6",
													"statements": [
														{
															"nativeSrc": "4630:26:6",
															"nodeType": "YulAssignment",
															"src": "4630:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4642:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "4642:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4653:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4653:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4638:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4638:3:6"
																},
																"nativeSrc": "4638:18:6",
																"nodeType": "YulFunctionCall",
																"src": "4638:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4630:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "4630:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4706:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "4706:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4719:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4719:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4730:1:6",
																				"nodeType": "YulLiteral",
																				"src": "4730:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4715:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4715:3:6"
																		},
																		"nativeSrc": "4715:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4715:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "4666:39:6",
																	"nodeType": "YulIdentifier",
																	"src": "4666:39:6"
																},
																"nativeSrc": "4666:67:6",
																"nodeType": "YulFunctionCall",
																"src": "4666:67:6"
															},
															"nativeSrc": "4666:67:6",
															"nodeType": "YulExpressionStatement",
															"src": "4666:67:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "4526:214:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4592:9:6",
														"nodeType": "YulTypedName",
														"src": "4592:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4604:6:6",
														"nodeType": "YulTypedName",
														"src": "4604:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4615:4:6",
														"nodeType": "YulTypedName",
														"src": "4615:4:6",
														"type": ""
													}
												],
												"src": "4526:214:6"
											},
											{
												"body": {
													"nativeSrc": "4812:263:6",
													"nodeType": "YulBlock",
													"src": "4812:263:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "4858:83:6",
																"nodeType": "YulBlock",
																"src": "4858:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "4860:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "4860:77:6"
																			},
																			"nativeSrc": "4860:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "4860:79:6"
																		},
																		"nativeSrc": "4860:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "4860:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4833:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "4833:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4842:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "4842:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4829:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "4829:3:6"
																		},
																		"nativeSrc": "4829:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "4829:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4854:2:6",
																		"nodeType": "YulLiteral",
																		"src": "4854:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4825:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "4825:3:6"
																},
																"nativeSrc": "4825:32:6",
																"nodeType": "YulFunctionCall",
																"src": "4825:32:6"
															},
															"nativeSrc": "4822:119:6",
															"nodeType": "YulIf",
															"src": "4822:119:6"
														},
														{
															"nativeSrc": "4951:117:6",
															"nodeType": "YulBlock",
															"src": "4951:117:6",
															"statements": [
																{
																	"nativeSrc": "4966:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4966:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "4980:1:6",
																		"nodeType": "YulLiteral",
																		"src": "4980:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "4970:6:6",
																			"nodeType": "YulTypedName",
																			"src": "4970:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4995:63:6",
																	"nodeType": "YulAssignment",
																	"src": "4995:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5030:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5030:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5041:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5041:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5026:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5026:3:6"
																				},
																				"nativeSrc": "5026:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5026:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5050:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5050:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5005:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5005:20:6"
																		},
																		"nativeSrc": "5005:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5005:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "4995:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "4995:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "4746:329:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4782:9:6",
														"nodeType": "YulTypedName",
														"src": "4782:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4793:7:6",
														"nodeType": "YulTypedName",
														"src": "4793:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4805:6:6",
														"nodeType": "YulTypedName",
														"src": "4805:6:6",
														"type": ""
													}
												],
												"src": "4746:329:6"
											},
											{
												"body": {
													"nativeSrc": "5164:391:6",
													"nodeType": "YulBlock",
													"src": "5164:391:6",
													"statements": [
														{
															"body": {
																"nativeSrc": "5210:83:6",
																"nodeType": "YulBlock",
																"src": "5210:83:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "5212:77:6",
																				"nodeType": "YulIdentifier",
																				"src": "5212:77:6"
																			},
																			"nativeSrc": "5212:79:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5212:79:6"
																		},
																		"nativeSrc": "5212:79:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "5212:79:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5185:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5185:7:6"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5194:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "5194:9:6"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5181:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "5181:3:6"
																		},
																		"nativeSrc": "5181:23:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5181:23:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5206:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5206:2:6",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5177:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5177:3:6"
																},
																"nativeSrc": "5177:32:6",
																"nodeType": "YulFunctionCall",
																"src": "5177:32:6"
															},
															"nativeSrc": "5174:119:6",
															"nodeType": "YulIf",
															"src": "5174:119:6"
														},
														{
															"nativeSrc": "5303:117:6",
															"nodeType": "YulBlock",
															"src": "5303:117:6",
															"statements": [
																{
																	"nativeSrc": "5318:15:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5318:15:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5332:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5332:1:6",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5322:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5322:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5347:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5347:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5382:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5382:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5393:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5393:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5378:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5378:3:6"
																				},
																				"nativeSrc": "5378:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5378:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5402:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5402:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5357:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5357:20:6"
																		},
																		"nativeSrc": "5357:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5357:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "5347:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5347:6:6"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "5430:118:6",
															"nodeType": "YulBlock",
															"src": "5430:118:6",
															"statements": [
																{
																	"nativeSrc": "5445:16:6",
																	"nodeType": "YulVariableDeclaration",
																	"src": "5445:16:6",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "5459:2:6",
																		"nodeType": "YulLiteral",
																		"src": "5459:2:6",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "5449:6:6",
																			"nodeType": "YulTypedName",
																			"src": "5449:6:6",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "5475:63:6",
																	"nodeType": "YulAssignment",
																	"src": "5475:63:6",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5510:9:6",
																						"nodeType": "YulIdentifier",
																						"src": "5510:9:6"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "5521:6:6",
																						"nodeType": "YulIdentifier",
																						"src": "5521:6:6"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5506:3:6",
																					"nodeType": "YulIdentifier",
																					"src": "5506:3:6"
																				},
																				"nativeSrc": "5506:22:6",
																				"nodeType": "YulFunctionCall",
																				"src": "5506:22:6"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5530:7:6",
																				"nodeType": "YulIdentifier",
																				"src": "5530:7:6"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "5485:20:6",
																			"nodeType": "YulIdentifier",
																			"src": "5485:20:6"
																		},
																		"nativeSrc": "5485:53:6",
																		"nodeType": "YulFunctionCall",
																		"src": "5485:53:6"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "5475:6:6",
																			"nodeType": "YulIdentifier",
																			"src": "5475:6:6"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address",
												"nativeSrc": "5081:474:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5126:9:6",
														"nodeType": "YulTypedName",
														"src": "5126:9:6",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5137:7:6",
														"nodeType": "YulTypedName",
														"src": "5137:7:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5149:6:6",
														"nodeType": "YulTypedName",
														"src": "5149:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5157:6:6",
														"nodeType": "YulTypedName",
														"src": "5157:6:6",
														"type": ""
													}
												],
												"src": "5081:474:6"
											},
											{
												"body": {
													"nativeSrc": "5589:152:6",
													"nodeType": "YulBlock",
													"src": "5589:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5606:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5606:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5609:77:6",
																		"nodeType": "YulLiteral",
																		"src": "5609:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5599:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5599:6:6"
																},
																"nativeSrc": "5599:88:6",
																"nodeType": "YulFunctionCall",
																"src": "5599:88:6"
															},
															"nativeSrc": "5599:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "5599:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5703:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5703:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5706:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5706:4:6",
																		"type": "",
																		"value": "0x22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5696:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5696:6:6"
																},
																"nativeSrc": "5696:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5696:15:6"
															},
															"nativeSrc": "5696:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5696:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "5727:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5727:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5730:4:6",
																		"nodeType": "YulLiteral",
																		"src": "5730:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "5720:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5720:6:6"
																},
																"nativeSrc": "5720:15:6",
																"nodeType": "YulFunctionCall",
																"src": "5720:15:6"
															},
															"nativeSrc": "5720:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "5720:15:6"
														}
													]
												},
												"name": "panic_error_0x22",
												"nativeSrc": "5561:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "5561:180:6"
											},
											{
												"body": {
													"nativeSrc": "5798:269:6",
													"nodeType": "YulBlock",
													"src": "5798:269:6",
													"statements": [
														{
															"nativeSrc": "5808:22:6",
															"nodeType": "YulAssignment",
															"src": "5808:22:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5822:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5822:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5828:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5828:1:6",
																		"type": "",
																		"value": "2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "5818:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5818:3:6"
																},
																"nativeSrc": "5818:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5818:12:6"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "5808:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5808:6:6"
																}
															]
														},
														{
															"nativeSrc": "5839:38:6",
															"nodeType": "YulVariableDeclaration",
															"src": "5839:38:6",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "5869:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "5869:4:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5875:1:6",
																		"nodeType": "YulLiteral",
																		"src": "5875:1:6",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "5865:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "5865:3:6"
																},
																"nativeSrc": "5865:12:6",
																"nodeType": "YulFunctionCall",
																"src": "5865:12:6"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "5843:18:6",
																	"nodeType": "YulTypedName",
																	"src": "5843:18:6",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5916:51:6",
																"nodeType": "YulBlock",
																"src": "5916:51:6",
																"statements": [
																	{
																		"nativeSrc": "5930:27:6",
																		"nodeType": "YulAssignment",
																		"src": "5930:27:6",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "5944:6:6",
																					"nodeType": "YulIdentifier",
																					"src": "5944:6:6"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5952:4:6",
																					"nodeType": "YulLiteral",
																					"src": "5952:4:6",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "5940:3:6",
																				"nodeType": "YulIdentifier",
																				"src": "5940:3:6"
																			},
																			"nativeSrc": "5940:17:6",
																			"nodeType": "YulFunctionCall",
																			"src": "5940:17:6"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "5930:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "5930:6:6"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5896:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5896:18:6"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "5889:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "5889:6:6"
																},
																"nativeSrc": "5889:26:6",
																"nodeType": "YulFunctionCall",
																"src": "5889:26:6"
															},
															"nativeSrc": "5886:81:6",
															"nodeType": "YulIf",
															"src": "5886:81:6"
														},
														{
															"body": {
																"nativeSrc": "6019:42:6",
																"nodeType": "YulBlock",
																"src": "6019:42:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x22",
																				"nativeSrc": "6033:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6033:16:6"
																			},
																			"nativeSrc": "6033:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6033:18:6"
																		},
																		"nativeSrc": "6033:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6033:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "5983:18:6",
																		"nodeType": "YulIdentifier",
																		"src": "5983:18:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "6006:6:6",
																				"nodeType": "YulIdentifier",
																				"src": "6006:6:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6014:2:6",
																				"nodeType": "YulLiteral",
																				"src": "6014:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "6003:2:6",
																			"nodeType": "YulIdentifier",
																			"src": "6003:2:6"
																		},
																		"nativeSrc": "6003:14:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6003:14:6"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "5980:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "5980:2:6"
																},
																"nativeSrc": "5980:38:6",
																"nodeType": "YulFunctionCall",
																"src": "5980:38:6"
															},
															"nativeSrc": "5977:84:6",
															"nodeType": "YulIf",
															"src": "5977:84:6"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "5747:320:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "5782:4:6",
														"nodeType": "YulTypedName",
														"src": "5782:4:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "5791:6:6",
														"nodeType": "YulTypedName",
														"src": "5791:6:6",
														"type": ""
													}
												],
												"src": "5747:320:6"
											},
											{
												"body": {
													"nativeSrc": "6101:152:6",
													"nodeType": "YulBlock",
													"src": "6101:152:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6118:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6118:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6121:77:6",
																		"nodeType": "YulLiteral",
																		"src": "6121:77:6",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6111:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6111:6:6"
																},
																"nativeSrc": "6111:88:6",
																"nodeType": "YulFunctionCall",
																"src": "6111:88:6"
															},
															"nativeSrc": "6111:88:6",
															"nodeType": "YulExpressionStatement",
															"src": "6111:88:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6215:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6215:1:6",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6218:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6218:4:6",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6208:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6208:6:6"
																},
																"nativeSrc": "6208:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6208:15:6"
															},
															"nativeSrc": "6208:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6208:15:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6239:1:6",
																		"nodeType": "YulLiteral",
																		"src": "6239:1:6",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6242:4:6",
																		"nodeType": "YulLiteral",
																		"src": "6242:4:6",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6232:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6232:6:6"
																},
																"nativeSrc": "6232:15:6",
																"nodeType": "YulFunctionCall",
																"src": "6232:15:6"
															},
															"nativeSrc": "6232:15:6",
															"nodeType": "YulExpressionStatement",
															"src": "6232:15:6"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "6073:180:6",
												"nodeType": "YulFunctionDefinition",
												"src": "6073:180:6"
											},
											{
												"body": {
													"nativeSrc": "6304:149:6",
													"nodeType": "YulBlock",
													"src": "6304:149:6",
													"statements": [
														{
															"nativeSrc": "6314:25:6",
															"nodeType": "YulAssignment",
															"src": "6314:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6337:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6337:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6319:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6319:17:6"
																},
																"nativeSrc": "6319:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6319:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6314:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6314:1:6"
																}
															]
														},
														{
															"nativeSrc": "6348:25:6",
															"nodeType": "YulAssignment",
															"src": "6348:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6371:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6371:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6353:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6353:17:6"
																},
																"nativeSrc": "6353:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6353:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6348:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6348:1:6"
																}
															]
														},
														{
															"nativeSrc": "6382:17:6",
															"nodeType": "YulAssignment",
															"src": "6382:17:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6394:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6394:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6397:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6397:1:6"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "6390:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6390:3:6"
																},
																"nativeSrc": "6390:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6390:9:6"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "6382:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6382:4:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6424:22:6",
																"nodeType": "YulBlock",
																"src": "6424:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6426:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6426:16:6"
																			},
																			"nativeSrc": "6426:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6426:18:6"
																		},
																		"nativeSrc": "6426:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6426:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "6415:4:6",
																		"nodeType": "YulIdentifier",
																		"src": "6415:4:6"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "6421:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6421:1:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6412:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6412:2:6"
																},
																"nativeSrc": "6412:11:6",
																"nodeType": "YulFunctionCall",
																"src": "6412:11:6"
															},
															"nativeSrc": "6409:37:6",
															"nodeType": "YulIf",
															"src": "6409:37:6"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "6259:194:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6290:1:6",
														"nodeType": "YulTypedName",
														"src": "6290:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6293:1:6",
														"nodeType": "YulTypedName",
														"src": "6293:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "6299:4:6",
														"nodeType": "YulTypedName",
														"src": "6299:4:6",
														"type": ""
													}
												],
												"src": "6259:194:6"
											},
											{
												"body": {
													"nativeSrc": "6503:147:6",
													"nodeType": "YulBlock",
													"src": "6503:147:6",
													"statements": [
														{
															"nativeSrc": "6513:25:6",
															"nodeType": "YulAssignment",
															"src": "6513:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6536:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6536:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6518:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6518:17:6"
																},
																"nativeSrc": "6518:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6518:20:6"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "6513:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6513:1:6"
																}
															]
														},
														{
															"nativeSrc": "6547:25:6",
															"nodeType": "YulAssignment",
															"src": "6547:25:6",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "6570:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6570:1:6"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "6552:17:6",
																	"nodeType": "YulIdentifier",
																	"src": "6552:17:6"
																},
																"nativeSrc": "6552:20:6",
																"nodeType": "YulFunctionCall",
																"src": "6552:20:6"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "6547:1:6",
																	"nodeType": "YulIdentifier",
																	"src": "6547:1:6"
																}
															]
														},
														{
															"nativeSrc": "6581:16:6",
															"nodeType": "YulAssignment",
															"src": "6581:16:6",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6592:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6592:1:6"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "6595:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6595:1:6"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6588:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6588:3:6"
																},
																"nativeSrc": "6588:9:6",
																"nodeType": "YulFunctionCall",
																"src": "6588:9:6"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "6581:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6581:3:6"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6621:22:6",
																"nodeType": "YulBlock",
																"src": "6621:22:6",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "6623:16:6",
																				"nodeType": "YulIdentifier",
																				"src": "6623:16:6"
																			},
																			"nativeSrc": "6623:18:6",
																			"nodeType": "YulFunctionCall",
																			"src": "6623:18:6"
																		},
																		"nativeSrc": "6623:18:6",
																		"nodeType": "YulExpressionStatement",
																		"src": "6623:18:6"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "6613:1:6",
																		"nodeType": "YulIdentifier",
																		"src": "6613:1:6"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "6616:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6616:3:6"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6610:2:6",
																	"nodeType": "YulIdentifier",
																	"src": "6610:2:6"
																},
																"nativeSrc": "6610:10:6",
																"nodeType": "YulFunctionCall",
																"src": "6610:10:6"
															},
															"nativeSrc": "6607:36:6",
															"nodeType": "YulIf",
															"src": "6607:36:6"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "6459:191:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "6490:1:6",
														"nodeType": "YulTypedName",
														"src": "6490:1:6",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "6493:1:6",
														"nodeType": "YulTypedName",
														"src": "6493:1:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "6499:3:6",
														"nodeType": "YulTypedName",
														"src": "6499:3:6",
														"type": ""
													}
												],
												"src": "6459:191:6"
											},
											{
												"body": {
													"nativeSrc": "6721:53:6",
													"nodeType": "YulBlock",
													"src": "6721:53:6",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6738:3:6",
																		"nodeType": "YulIdentifier",
																		"src": "6738:3:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6761:5:6",
																				"nodeType": "YulIdentifier",
																				"src": "6761:5:6"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "6743:17:6",
																			"nodeType": "YulIdentifier",
																			"src": "6743:17:6"
																		},
																		"nativeSrc": "6743:24:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6743:24:6"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6731:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "6731:6:6"
																},
																"nativeSrc": "6731:37:6",
																"nodeType": "YulFunctionCall",
																"src": "6731:37:6"
															},
															"nativeSrc": "6731:37:6",
															"nodeType": "YulExpressionStatement",
															"src": "6731:37:6"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "6656:118:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6709:5:6",
														"nodeType": "YulTypedName",
														"src": "6709:5:6",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6716:3:6",
														"nodeType": "YulTypedName",
														"src": "6716:3:6",
														"type": ""
													}
												],
												"src": "6656:118:6"
											},
											{
												"body": {
													"nativeSrc": "6878:124:6",
													"nodeType": "YulBlock",
													"src": "6878:124:6",
													"statements": [
														{
															"nativeSrc": "6888:26:6",
															"nodeType": "YulAssignment",
															"src": "6888:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6900:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "6900:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6911:2:6",
																		"nodeType": "YulLiteral",
																		"src": "6911:2:6",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6896:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "6896:3:6"
																},
																"nativeSrc": "6896:18:6",
																"nodeType": "YulFunctionCall",
																"src": "6896:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6888:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "6888:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6968:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "6968:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6981:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "6981:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6992:1:6",
																				"nodeType": "YulLiteral",
																				"src": "6992:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6977:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "6977:3:6"
																		},
																		"nativeSrc": "6977:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "6977:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6924:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "6924:43:6"
																},
																"nativeSrc": "6924:71:6",
																"nodeType": "YulFunctionCall",
																"src": "6924:71:6"
															},
															"nativeSrc": "6924:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "6924:71:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "6780:222:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6850:9:6",
														"nodeType": "YulTypedName",
														"src": "6850:9:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6862:6:6",
														"nodeType": "YulTypedName",
														"src": "6862:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6873:4:6",
														"nodeType": "YulTypedName",
														"src": "6873:4:6",
														"type": ""
													}
												],
												"src": "6780:222:6"
											},
											{
												"body": {
													"nativeSrc": "7162:288:6",
													"nodeType": "YulBlock",
													"src": "7162:288:6",
													"statements": [
														{
															"nativeSrc": "7172:26:6",
															"nodeType": "YulAssignment",
															"src": "7172:26:6",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7184:9:6",
																		"nodeType": "YulIdentifier",
																		"src": "7184:9:6"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7195:2:6",
																		"nodeType": "YulLiteral",
																		"src": "7195:2:6",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7180:3:6",
																	"nodeType": "YulIdentifier",
																	"src": "7180:3:6"
																},
																"nativeSrc": "7180:18:6",
																"nodeType": "YulFunctionCall",
																"src": "7180:18:6"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7172:4:6",
																	"nodeType": "YulIdentifier",
																	"src": "7172:4:6"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7252:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7252:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7265:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7265:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7276:1:6",
																				"nodeType": "YulLiteral",
																				"src": "7276:1:6",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7261:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7261:3:6"
																		},
																		"nativeSrc": "7261:17:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7261:17:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "7208:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7208:43:6"
																},
																"nativeSrc": "7208:71:6",
																"nodeType": "YulFunctionCall",
																"src": "7208:71:6"
															},
															"nativeSrc": "7208:71:6",
															"nodeType": "YulExpressionStatement",
															"src": "7208:71:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7333:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7333:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7346:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7346:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7357:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7357:2:6",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7342:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7342:3:6"
																		},
																		"nativeSrc": "7342:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7342:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7289:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7289:43:6"
																},
																"nativeSrc": "7289:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7289:72:6"
															},
															"nativeSrc": "7289:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7289:72:6"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "7415:6:6",
																		"nodeType": "YulIdentifier",
																		"src": "7415:6:6"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7428:9:6",
																				"nodeType": "YulIdentifier",
																				"src": "7428:9:6"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7439:2:6",
																				"nodeType": "YulLiteral",
																				"src": "7439:2:6",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7424:3:6",
																			"nodeType": "YulIdentifier",
																			"src": "7424:3:6"
																		},
																		"nativeSrc": "7424:18:6",
																		"nodeType": "YulFunctionCall",
																		"src": "7424:18:6"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "7371:43:6",
																	"nodeType": "YulIdentifier",
																	"src": "7371:43:6"
																},
																"nativeSrc": "7371:72:6",
																"nodeType": "YulFunctionCall",
																"src": "7371:72:6"
															},
															"nativeSrc": "7371:72:6",
															"nodeType": "YulExpressionStatement",
															"src": "7371:72:6"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7008:442:6",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7118:9:6",
														"nodeType": "YulTypedName",
														"src": "7118:9:6",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7130:6:6",
														"nodeType": "YulTypedName",
														"src": "7130:6:6",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7138:6:6",
														"nodeType": "YulTypedName",
														"src": "7138:6:6",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7146:6:6",
														"nodeType": "YulTypedName",
														"src": "7146:6:6",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7157:4:6",
														"nodeType": "YulTypedName",
														"src": "7157:4:6",
														"type": ""
													}
												],
												"src": "7008:442:6"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256_t_uint256__to_t_address_t_uint256_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n}\n",
									"id": 6,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x114 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x95D89B41 GT PUSH2 0xA0 JUMPI DUP1 PUSH4 0xA9059CBB GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x2E2 JUMPI DUP1 PUSH4 0xC4E41B22 EQ PUSH2 0x312 JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0xECF35CCA EQ PUSH2 0x360 JUMPI DUP1 PUSH4 0xF1850AF8 EQ PUSH2 0x37E JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x25A JUMPI DUP1 PUSH4 0x9B96EECE EQ PUSH2 0x278 JUMPI DUP1 PUSH4 0x9DC29FAC EQ PUSH2 0x2A8 JUMPI DUP1 PUSH4 0x9F0C8125 EQ PUSH2 0x2C4 JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x1B4 JUMPI DUP1 PUSH4 0x3EAAF86B EQ PUSH2 0x1D2 JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x1F0 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x20C JUMPI DUP1 PUSH4 0x862B092B EQ PUSH2 0x23C JUMPI PUSH2 0x114 JUMP JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x118 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x184 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x120 PUSH2 0x39C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12D SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x14B SWAP2 SWAP1 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x42C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x449 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x105F JUMP JUMPDEST PUSH2 0x452 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AB SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BC PUSH2 0x496 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1C9 SWAP2 SWAP1 PUSH2 0x10CA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DA PUSH2 0x49E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E7 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x20A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x205 SWAP2 SWAP1 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x4A4 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x226 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x221 SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x4CA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x233 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x244 PUSH2 0x50F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x251 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x262 PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x26F SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x292 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x28D SWAP2 SWAP1 PUSH2 0x10E3 JUMP JUMPDEST PUSH2 0x62F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x29F SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2C2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2BD SWAP2 SWAP1 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x640 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2CC PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2D9 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2FC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2F7 SWAP2 SWAP1 PUSH2 0xFC6 JUMP JUMPDEST PUSH2 0x6F2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x309 SWAP2 SWAP1 PUSH2 0x101E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x31A PUSH2 0x70F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x34A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x345 SWAP2 SWAP1 PUSH2 0x110E JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x357 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x368 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x375 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x386 PUSH2 0x826 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x393 SWAP2 SWAP1 PUSH2 0xF15 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x3AB SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x3D7 SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x422 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x3F9 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x422 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x405 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x43F PUSH2 0x438 PUSH2 0x8B6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x2 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x45E DUP5 DUP5 DUP5 PUSH2 0x8CF JUMP JUMPDEST PUSH2 0x48B DUP5 PUSH2 0x46A PUSH2 0x8B6 JUMP JUMPDEST DUP5 PUSH2 0x47C DUP9 PUSH2 0x477 PUSH2 0x8B6 JUMP JUMPDEST PUSH2 0x718 JUMP JUMPDEST PUSH2 0x486 SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST PUSH2 0x8BD JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x12 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x4AE DUP3 DUP3 PUSH2 0x9BF JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x4BF SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x5 DUP1 SLOAD PUSH2 0x51E SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x54A SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x595 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x56C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x595 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x578 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x5AE SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x5DA SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x625 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x5FC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x625 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x608 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x639 DUP3 PUSH2 0x4CA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x64A DUP3 DUP3 PUSH2 0xA3E JUMP JUMPDEST DUP1 PUSH1 0x7 PUSH0 DUP3 DUP3 SLOAD PUSH2 0x65B SWAP2 SWAP1 PUSH2 0x11D6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH2 0x673 SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x69F SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x6EA JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x6C1 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x6EA JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x6CD JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH0 PUSH2 0x705 PUSH2 0x6FE PUSH2 0x8B6 JUMP JUMPDEST DUP5 DUP5 PUSH2 0x8CF JUMP JUMPDEST PUSH1 0x1 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x7 SLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x6 DUP1 SLOAD PUSH2 0x7A7 SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x7D3 SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x81E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x7F5 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x81E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x801 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x6 DUP1 SLOAD PUSH2 0x835 SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x861 SWAP1 PUSH2 0x1179 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x8AC JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x883 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x8AC JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x88F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x8CA DUP4 DUP4 DUP4 PUSH1 0x1 PUSH2 0xABD JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x93F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x936 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x9AF JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9A6 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x9BA DUP4 DUP4 DUP4 PUSH2 0xC8C JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xA2F JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xEC442F0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA26 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA3A PUSH0 DUP4 DUP4 PUSH2 0xC8C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xAAE JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x96C6FD1E00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAA5 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xAB9 DUP3 PUSH0 DUP4 PUSH2 0xC8C JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB2D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0xE602DF0500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB24 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xB9D JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x94280D6200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB94 SWAP2 SWAP1 PUSH2 0x124B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x1 PUSH0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP DUP1 ISZERO PUSH2 0xC86 JUMPI DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 DUP5 PUSH1 0x40 MLOAD PUSH2 0xC7D SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xCDC JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD PUSH2 0xCD0 SWAP2 SWAP1 PUSH2 0x1209 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xDAA JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SLOAD SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0xD65 JUMPI DUP4 DUP2 DUP4 PUSH1 0x40 MLOAD PUSH32 0xE450D38C00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD5C SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1264 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 DUP2 SUB PUSH0 DUP1 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 DUP2 SWAP1 SSTORE POP POP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xDF1 JUMPI DUP1 PUSH1 0x2 PUSH0 DUP3 DUP3 SLOAD SUB SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xE3B JUMP JUMPDEST DUP1 PUSH0 DUP1 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 DUP3 DUP3 SLOAD ADD SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP4 PUSH1 0x40 MLOAD PUSH2 0xE98 SWAP2 SWAP1 PUSH2 0x1046 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xEE7 DUP3 PUSH2 0xEA5 JUMP JUMPDEST PUSH2 0xEF1 DUP2 DUP6 PUSH2 0xEAF JUMP JUMPDEST SWAP4 POP PUSH2 0xF01 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xEBF JUMP JUMPDEST PUSH2 0xF0A DUP2 PUSH2 0xECD JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0xF2D DUP2 DUP5 PUSH2 0xEDD JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xF62 DUP3 PUSH2 0xF39 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF72 DUP2 PUSH2 0xF58 JUMP JUMPDEST DUP2 EQ PUSH2 0xF7C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF8D DUP2 PUSH2 0xF69 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xFA5 DUP2 PUSH2 0xF93 JUMP JUMPDEST DUP2 EQ PUSH2 0xFAF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xFC0 DUP2 PUSH2 0xF9C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xFDC JUMPI PUSH2 0xFDB PUSH2 0xF35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0xFE9 DUP6 DUP3 DUP7 ADD PUSH2 0xF7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xFFA DUP6 DUP3 DUP7 ADD PUSH2 0xFB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1018 DUP2 PUSH2 0x1004 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1031 PUSH0 DUP4 ADD DUP5 PUSH2 0x100F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1040 DUP2 PUSH2 0xF93 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1059 PUSH0 DUP4 ADD DUP5 PUSH2 0x1037 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1076 JUMPI PUSH2 0x1075 PUSH2 0xF35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1083 DUP7 DUP3 DUP8 ADD PUSH2 0xF7F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x1094 DUP7 DUP3 DUP8 ADD PUSH2 0xF7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x10A5 DUP7 DUP3 DUP8 ADD PUSH2 0xFB2 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x10C4 DUP2 PUSH2 0x10AF JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x10DD PUSH0 DUP4 ADD DUP5 PUSH2 0x10BB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x10F8 JUMPI PUSH2 0x10F7 PUSH2 0xF35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1105 DUP5 DUP3 DUP6 ADD PUSH2 0xF7F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1124 JUMPI PUSH2 0x1123 PUSH2 0xF35 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1131 DUP6 DUP3 DUP7 ADD PUSH2 0xF7F JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x1142 DUP6 DUP3 DUP7 ADD PUSH2 0xF7F JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x1190 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x11A3 JUMPI PUSH2 0x11A2 PUSH2 0x114C JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x11E0 DUP3 PUSH2 0xF93 JUMP JUMPDEST SWAP2 POP PUSH2 0x11EB DUP4 PUSH2 0xF93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x1203 JUMPI PUSH2 0x1202 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1213 DUP3 PUSH2 0xF93 JUMP JUMPDEST SWAP2 POP PUSH2 0x121E DUP4 PUSH2 0xF93 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x1236 JUMPI PUSH2 0x1235 PUSH2 0x11A9 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1245 DUP2 PUSH2 0xF58 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x125E PUSH0 DUP4 ADD DUP5 PUSH2 0x123C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x1277 PUSH0 DUP4 ADD DUP7 PUSH2 0x123C JUMP JUMPDEST PUSH2 0x1284 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1037 JUMP JUMPDEST PUSH2 0x1291 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x1037 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 ADDRESS 0xE4 MSIZE BALANCE PUSH30 0xF432E3F2E43D346E07AB18613C035681F7B27A78B434A96208DEB464736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "86:2656:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:89:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1538:202:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3041:97:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1848:310:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2899:82:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;253:27:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;686:183;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3196:116:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2433:96:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2173:93:1;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2225:150:4;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;934:187;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;189:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1232:195;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2645:94;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3743:140:1;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;220:26:4;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2537:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1971:89:1;2016:13;2048:5;2041:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1971:89;:::o;1538:202:4:-;1613:4;1630:39;1639:12;:10;:12::i;:::-;1653:7;1662:6;1630:8;:39::i;:::-;1728:4;1721:11;;1538:202;;;;:::o;3041:97:1:-;3093:7;3119:12;;3112:19;;3041:97;:::o;1848:310:4:-;1937:4;1954:27;1964:4;1970:2;1974:6;1954:9;:27::i;:::-;2034:68;2043:4;2049:12;:10;:12::i;:::-;2095:6;2063:29;2073:4;2079:12;:10;:12::i;:::-;2063:9;:29::i;:::-;:38;;;;:::i;:::-;2034:8;:68::i;:::-;2146:4;2139:11;;1848:310;;;;;:::o;2899:82:1:-;2948:5;2972:2;2965:9;;2899:82;:::o;253:27:4:-;;;;:::o;686:183::-;746:17;752:2;756:6;746:5;:17::i;:::-;828:6;812:12;;:22;;;;;;;:::i;:::-;;;;;;;;686:183;;:::o;3196:116:1:-;3261:7;3287:9;:18;3297:7;3287:18;;;;;;;;;;;;;;;;3280:25;;3196:116;;;:::o;2433:96:4:-;2478:13;2511:10;2504:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2433:96;:::o;2173:93:1:-;2220:13;2252:7;2245:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2173:93;:::o;2225:150:4:-;2285:7;2312:18;2322:7;2312:9;:18::i;:::-;2305:25;;2225:150;;;:::o;934:187::-;996:19;1002:4;1008:6;996:5;:19::i;:::-;1080:6;1064:12;;:22;;;;;;;:::i;:::-;;;;;;;;934:187;;:::o;189:24::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1232:195::-;1303:4;1320:35;1330:12;:10;:12::i;:::-;1344:2;1348:6;1320:9;:35::i;:::-;1415:4;1408:11;;1232:195;;;;:::o;2645:94::-;2692:7;2719:12;;2712:19;;2645:94;:::o;3743:140:1:-;3823:7;3849:11;:18;3861:5;3849:18;;;;;;;;;;;;;;;:27;3868:7;3849:27;;;;;;;;;;;;;;;;3842:34;;3743:140;;;;:::o;220:26:4:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2537:100::-;2584:13;2617:12;2610:19;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2537:100;:::o;656:96:0:-;709:7;735:10;728:17;;656:96;:::o;8886:128:1:-;8970:37;8979:5;8986:7;8995:5;9002:4;8970:8;:37::i;:::-;8886:128;;;:::o;5553:300::-;5652:1;5636:18;;:4;:18;;;5632:86;;5704:1;5677:30;;;;;;;;;;;:::i;:::-;;;;;;;;5632:86;5745:1;5731:16;;:2;:16;;;5727:86;;5799:1;5770:32;;;;;;;;;;;:::i;:::-;;;;;;;;5727:86;5822:24;5830:4;5836:2;5840:5;5822:7;:24::i;:::-;5553:300;;;:::o;7618:208::-;7707:1;7688:21;;:7;:21;;;7684:91;;7761:1;7732:32;;;;;;;;;;;:::i;:::-;;;;;;;;7684:91;7784:35;7800:1;7804:7;7813:5;7784:7;:35::i;:::-;7618:208;;:::o;8144:206::-;8233:1;8214:21;;:7;:21;;;8210:89;;8285:1;8258:30;;;;;;;;;;;:::i;:::-;;;;;;;;8210:89;8308:35;8316:7;8333:1;8337:5;8308:7;:35::i;:::-;8144:206;;:::o;9846:432::-;9975:1;9958:19;;:5;:19;;;9954:89;;10029:1;10000:32;;;;;;;;;;;:::i;:::-;;;;;;;;9954:89;10075:1;10056:21;;:7;:21;;;10052:90;;10128:1;10100:31;;;;;;;;;;;:::i;:::-;;;;;;;;10052:90;10181:5;10151:11;:18;10163:5;10151:18;;;;;;;;;;;;;;;:27;10170:7;10151:27;;;;;;;;;;;;;;;:35;;;;10200:9;10196:76;;;10246:7;10230:31;;10239:5;10230:31;;;10255:5;10230:31;;;;;;:::i;:::-;;;;;;;;10196:76;9846:432;;;;:::o;6168:1107::-;6273:1;6257:18;;:4;:18;;;6253:540;;6409:5;6393:12;;:21;;;;;;;:::i;:::-;;;;;;;;6253:540;;;6445:19;6467:9;:15;6477:4;6467:15;;;;;;;;;;;;;;;;6445:37;;6514:5;6500:11;:19;6496:115;;;6571:4;6577:11;6590:5;6546:50;;;;;;;;;;;;;:::i;:::-;;;;;;;;6496:115;6763:5;6749:11;:19;6731:9;:15;6741:4;6731:15;;;;;;;;;;;;;;;:37;;;;6431:362;6253:540;6821:1;6807:16;;:2;:16;;;6803:425;;6986:5;6970:12;;:21;;;;;;;;;;;6803:425;;;7198:5;7181:9;:13;7191:2;7181:13;;;;;;;;;;;;;;;;:22;;;;;;;;;;;6803:425;7258:2;7243:25;;7252:4;7243:25;;;7262:5;7243:25;;;;;;:::i;:::-;;;;;;;;6168:1107;;;:::o;7:99:6:-;59:6;93:5;87:12;77:22;;7:99;;;:::o;112:169::-;196:11;230:6;225:3;218:19;270:4;265:3;261:14;246:29;;112:169;;;;:::o;287:139::-;376:6;371:3;366;360:23;417:1;408:6;403:3;399:16;392:27;287:139;;;:::o;432:102::-;473:6;524:2;520:7;515:2;508:5;504:14;500:28;490:38;;432:102;;;:::o;540:377::-;628:3;656:39;689:5;656:39;:::i;:::-;711:71;775:6;770:3;711:71;:::i;:::-;704:78;;791:65;849:6;844:3;837:4;830:5;826:16;791:65;:::i;:::-;881:29;903:6;881:29;:::i;:::-;876:3;872:39;865:46;;632:285;540:377;;;;:::o;923:313::-;1036:4;1074:2;1063:9;1059:18;1051:26;;1123:9;1117:4;1113:20;1109:1;1098:9;1094:17;1087:47;1151:78;1224:4;1215:6;1151:78;:::i;:::-;1143:86;;923:313;;;;:::o;1323:117::-;1432:1;1429;1422:12;1569:126;1606:7;1646:42;1639:5;1635:54;1624:65;;1569:126;;;:::o;1701:96::-;1738:7;1767:24;1785:5;1767:24;:::i;:::-;1756:35;;1701:96;;;:::o;1803:122::-;1876:24;1894:5;1876:24;:::i;:::-;1869:5;1866:35;1856:63;;1915:1;1912;1905:12;1856:63;1803:122;:::o;1931:139::-;1977:5;2015:6;2002:20;1993:29;;2031:33;2058:5;2031:33;:::i;:::-;1931:139;;;;:::o;2076:77::-;2113:7;2142:5;2131:16;;2076:77;;;:::o;2159:122::-;2232:24;2250:5;2232:24;:::i;:::-;2225:5;2222:35;2212:63;;2271:1;2268;2261:12;2212:63;2159:122;:::o;2287:139::-;2333:5;2371:6;2358:20;2349:29;;2387:33;2414:5;2387:33;:::i;:::-;2287:139;;;;:::o;2432:474::-;2500:6;2508;2557:2;2545:9;2536:7;2532:23;2528:32;2525:119;;;2563:79;;:::i;:::-;2525:119;2683:1;2708:53;2753:7;2744:6;2733:9;2729:22;2708:53;:::i;:::-;2698:63;;2654:117;2810:2;2836:53;2881:7;2872:6;2861:9;2857:22;2836:53;:::i;:::-;2826:63;;2781:118;2432:474;;;;;:::o;2912:90::-;2946:7;2989:5;2982:13;2975:21;2964:32;;2912:90;;;:::o;3008:109::-;3089:21;3104:5;3089:21;:::i;:::-;3084:3;3077:34;3008:109;;:::o;3123:210::-;3210:4;3248:2;3237:9;3233:18;3225:26;;3261:65;3323:1;3312:9;3308:17;3299:6;3261:65;:::i;:::-;3123:210;;;;:::o;3339:118::-;3426:24;3444:5;3426:24;:::i;:::-;3421:3;3414:37;3339:118;;:::o;3463:222::-;3556:4;3594:2;3583:9;3579:18;3571:26;;3607:71;3675:1;3664:9;3660:17;3651:6;3607:71;:::i;:::-;3463:222;;;;:::o;3691:619::-;3768:6;3776;3784;3833:2;3821:9;3812:7;3808:23;3804:32;3801:119;;;3839:79;;:::i;:::-;3801:119;3959:1;3984:53;4029:7;4020:6;4009:9;4005:22;3984:53;:::i;:::-;3974:63;;3930:117;4086:2;4112:53;4157:7;4148:6;4137:9;4133:22;4112:53;:::i;:::-;4102:63;;4057:118;4214:2;4240:53;4285:7;4276:6;4265:9;4261:22;4240:53;:::i;:::-;4230:63;;4185:118;3691:619;;;;;:::o;4316:86::-;4351:7;4391:4;4384:5;4380:16;4369:27;;4316:86;;;:::o;4408:112::-;4491:22;4507:5;4491:22;:::i;:::-;4486:3;4479:35;4408:112;;:::o;4526:214::-;4615:4;4653:2;4642:9;4638:18;4630:26;;4666:67;4730:1;4719:9;4715:17;4706:6;4666:67;:::i;:::-;4526:214;;;;:::o;4746:329::-;4805:6;4854:2;4842:9;4833:7;4829:23;4825:32;4822:119;;;4860:79;;:::i;:::-;4822:119;4980:1;5005:53;5050:7;5041:6;5030:9;5026:22;5005:53;:::i;:::-;4995:63;;4951:117;4746:329;;;;:::o;5081:474::-;5149:6;5157;5206:2;5194:9;5185:7;5181:23;5177:32;5174:119;;;5212:79;;:::i;:::-;5174:119;5332:1;5357:53;5402:7;5393:6;5382:9;5378:22;5357:53;:::i;:::-;5347:63;;5303:117;5459:2;5485:53;5530:7;5521:6;5510:9;5506:22;5485:53;:::i;:::-;5475:63;;5430:118;5081:474;;;;;:::o;5561:180::-;5609:77;5606:1;5599:88;5706:4;5703:1;5696:15;5730:4;5727:1;5720:15;5747:320;5791:6;5828:1;5822:4;5818:12;5808:22;;5875:1;5869:4;5865:12;5896:18;5886:81;;5952:4;5944:6;5940:17;5930:27;;5886:81;6014:2;6006:6;6003:14;5983:18;5980:38;5977:84;;6033:18;;:::i;:::-;5977:84;5798:269;5747:320;;;:::o;6073:180::-;6121:77;6118:1;6111:88;6218:4;6215:1;6208:15;6242:4;6239:1;6232:15;6259:194;6299:4;6319:20;6337:1;6319:20;:::i;:::-;6314:25;;6353:20;6371:1;6353:20;:::i;:::-;6348:25;;6397:1;6394;6390:9;6382:17;;6421:1;6415:4;6412:11;6409:37;;;6426:18;;:::i;:::-;6409:37;6259:194;;;;:::o;6459:191::-;6499:3;6518:20;6536:1;6518:20;:::i;:::-;6513:25;;6552:20;6570:1;6552:20;:::i;:::-;6547:25;;6595:1;6592;6588:9;6581:16;;6616:3;6613:1;6610:10;6607:36;;;6623:18;;:::i;:::-;6607:36;6459:191;;;;:::o;6656:118::-;6743:24;6761:5;6743:24;:::i;:::-;6738:3;6731:37;6656:118;;:::o;6780:222::-;6873:4;6911:2;6900:9;6896:18;6888:26;;6924:71;6992:1;6981:9;6977:17;6968:6;6924:71;:::i;:::-;6780:222;;;;:::o;7008:442::-;7157:4;7195:2;7184:9;7180:18;7172:26;;7208:71;7276:1;7265:9;7261:17;7252:6;7208:71;:::i;:::-;7289:72;7357:2;7346:9;7342:18;7333:6;7289:72;:::i;:::-;7371;7439:2;7428:9;7424:18;7415:6;7371:72;:::i;:::-;7008:442;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "963000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"_tokenName()": "infinite",
								"_tokenSymbol()": "infinite",
								"_totalSupply()": "2470",
								"allowance(address,address)": "infinite",
								"approve(address,uint256)": "infinite",
								"balanceOf(address)": "2918",
								"burn(address,uint256)": "infinite",
								"decimals()": "361",
								"getBalanceOf(address)": "2916",
								"getTokenName()": "infinite",
								"getTokenSymbol()": "infinite",
								"getTotalSupply()": "2476",
								"mint(address,uint256)": "infinite",
								"name()": "infinite",
								"symbol()": "infinite",
								"totalSupply()": "2500",
								"transfer(address,uint256)": "infinite",
								"transferFrom(address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 86,
									"end": 2742,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 621,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 371,
									"end": 621,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 371,
									"end": 621,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 621,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 371,
									"end": 621,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 371,
									"end": 621,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 371,
									"end": 621,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 371,
									"end": 621,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 412,
									"end": 422,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1793,
									"end": 1906,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1793,
									"end": 1906,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "tag",
									"source": 1,
									"value": "7"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "tag",
									"source": 1,
									"value": "9"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "tag",
									"source": 1,
									"value": "8"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 424,
									"end": 436,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1793,
									"end": 1906,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 1793,
									"end": 1906,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "tag",
									"source": 1,
									"value": "12"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "tag",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "tag",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "GT",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "15"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "PUSH",
									"source": 1,
									"value": "1F"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "tag",
									"source": 1,
									"value": "13"
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1867,
									"end": 1872,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1859,
									"end": 1864,
									"name": "PUSH",
									"source": 1,
									"value": "3"
								},
								{
									"begin": 1859,
									"end": 1872,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1859,
									"end": 1872,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1859,
									"end": 1872,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1859,
									"end": 1872,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1859,
									"end": 1872,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1859,
									"end": 1872,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1859,
									"end": 1872,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1859,
									"end": 1872,
									"name": "tag",
									"source": 1,
									"value": "18"
								},
								{
									"begin": 1859,
									"end": 1872,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1859,
									"end": 1872,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1892,
									"end": 1899,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1889,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 1882,
									"end": 1899,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1899,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1882,
									"end": 1899,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1899,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1899,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "19"
								},
								{
									"begin": 1882,
									"end": 1899,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1899,
									"name": "tag",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 1882,
									"end": 1899,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 1882,
									"end": 1899,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 1793,
									"end": 1906,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "54525474686553616C6164000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 449,
									"end": 459,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 449,
									"end": 475,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "22"
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 449,
									"end": 475,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "5452540000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 495,
									"end": 507,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "6"
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "19"
								},
								{
									"begin": 495,
									"end": 515,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "23"
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 495,
									"end": 515,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 552,
									"end": 565,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 537,
									"end": 549,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "7"
								},
								{
									"begin": 537,
									"end": 565,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 537,
									"end": 565,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 537,
									"end": 565,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 537,
									"end": 565,
									"modifierDepth": 1,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 580,
									"end": 612,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 586,
									"end": 596,
									"modifierDepth": 1,
									"name": "CALLER",
									"source": 4
								},
								{
									"begin": 598,
									"end": 611,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 580,
									"end": 585,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "25"
								},
								{
									"begin": 580,
									"end": 585,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 580,
									"end": 585,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 4
								},
								{
									"begin": 580,
									"end": 612,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 4,
									"value": "20"
								},
								{
									"begin": 580,
									"end": 612,
									"modifierDepth": 1,
									"name": "SHR",
									"source": 4
								},
								{
									"begin": 580,
									"end": 612,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 580,
									"end": 612,
									"modifierDepth": 1,
									"name": "tag",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 580,
									"end": 612,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 371,
									"end": 621,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7618,
									"end": 7826,
									"name": "tag",
									"source": 1,
									"value": "25"
								},
								{
									"begin": 7618,
									"end": 7826,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7707,
									"end": 7708,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7688,
									"end": 7709,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7688,
									"end": 7709,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7688,
									"end": 7695,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7688,
									"end": 7709,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7688,
									"end": 7709,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7688,
									"end": 7709,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7684,
									"end": 7775,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7684,
									"end": 7775,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7761,
									"end": 7762,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "PUSH",
									"source": 1,
									"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "30"
								},
								{
									"begin": 7732,
									"end": 7764,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "tag",
									"source": 1,
									"value": "29"
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7732,
									"end": 7764,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7684,
									"end": 7775,
									"name": "tag",
									"source": 1,
									"value": "28"
								},
								{
									"begin": 7684,
									"end": 7775,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7784,
									"end": 7819,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 7800,
									"end": 7801,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7804,
									"end": 7811,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7813,
									"end": 7818,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7784,
									"end": 7791,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 7784,
									"end": 7791,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7784,
									"end": 7791,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 7784,
									"end": 7819,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7784,
									"end": 7819,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 7784,
									"end": 7819,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7784,
									"end": 7819,
									"name": "tag",
									"source": 1,
									"value": "31"
								},
								{
									"begin": 7784,
									"end": 7819,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7618,
									"end": 7826,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7618,
									"end": 7826,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7618,
									"end": 7826,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6168,
									"end": 7275,
									"name": "tag",
									"source": 1,
									"value": "32"
								},
								{
									"begin": 6168,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6273,
									"end": 6274,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6257,
									"end": 6275,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6257,
									"end": 6275,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6257,
									"end": 6261,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6257,
									"end": 6275,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6257,
									"end": 6275,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6257,
									"end": 6275,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6793,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6253,
									"end": 6793,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6409,
									"end": 6414,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6405,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6393,
									"end": 6405,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "36"
								},
								{
									"begin": 6393,
									"end": 6414,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "tag",
									"source": 1,
									"value": "35"
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6393,
									"end": 6414,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6793,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6253,
									"end": 6793,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6793,
									"name": "tag",
									"source": 1,
									"value": "34"
								},
								{
									"begin": 6253,
									"end": 6793,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6445,
									"end": 6464,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6467,
									"end": 6476,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6477,
									"end": 6481,
									"name": "DUP6",
									"source": 1
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6467,
									"end": 6482,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6445,
									"end": 6482,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6445,
									"end": 6482,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6514,
									"end": 6519,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6500,
									"end": 6511,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6500,
									"end": 6519,
									"name": "LT",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6611,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6611,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6496,
									"end": 6611,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6571,
									"end": 6575,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6577,
									"end": 6588,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6590,
									"end": 6595,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "PUSH",
									"source": 1,
									"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "SWAP4",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6546,
									"end": 6596,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "tag",
									"source": 1,
									"value": "39"
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6546,
									"end": 6596,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 6496,
									"end": 6611,
									"name": "tag",
									"source": 1,
									"value": "38"
								},
								{
									"begin": 6496,
									"end": 6611,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6763,
									"end": 6768,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6749,
									"end": 6760,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6749,
									"end": 6768,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6740,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6741,
									"end": 6745,
									"name": "DUP7",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6731,
									"end": 6746,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6768,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6768,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6768,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6731,
									"end": 6768,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6431,
									"end": 6793,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6253,
									"end": 6793,
									"name": "tag",
									"source": 1,
									"value": "37"
								},
								{
									"begin": 6253,
									"end": 6793,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 6821,
									"end": 6822,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6807,
									"end": 6823,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6807,
									"end": 6823,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6807,
									"end": 6809,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6807,
									"end": 6823,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6807,
									"end": 6823,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 6807,
									"end": 6823,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6803,
									"end": 7228,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6803,
									"end": 7228,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 6986,
									"end": 6991,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6982,
									"name": "PUSH",
									"source": 1,
									"value": "2"
								},
								{
									"begin": 6970,
									"end": 6982,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 6970,
									"end": 6991,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6991,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6991,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6991,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6991,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6991,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6991,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6991,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6991,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6991,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 6970,
									"end": 6991,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6803,
									"end": 7228,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 6803,
									"end": 7228,
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 6803,
									"end": 7228,
									"name": "tag",
									"source": 1,
									"value": "41"
								},
								{
									"begin": 6803,
									"end": 7228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7198,
									"end": 7203,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7190,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7191,
									"end": 7193,
									"name": "DUP5",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7194,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 7181,
									"end": 7203,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7203,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7203,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7203,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7203,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7203,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7203,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7203,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7203,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7203,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 7181,
									"end": 7203,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6803,
									"end": 7228,
									"name": "tag",
									"source": 1,
									"value": "42"
								},
								{
									"begin": 6803,
									"end": 7228,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7258,
									"end": 7260,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7252,
									"end": 7256,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "PUSH",
									"source": 1,
									"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
								},
								{
									"begin": 7262,
									"end": 7267,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "44"
								},
								{
									"begin": 7243,
									"end": 7268,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "tag",
									"source": 1,
									"value": "43"
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7243,
									"end": 7268,
									"name": "LOG3",
									"source": 1
								},
								{
									"begin": 6168,
									"end": 7275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6168,
									"end": 7275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6168,
									"end": 7275,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 6168,
									"end": 7275,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "tag",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 334,
									"end": 411,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 400,
									"end": 405,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 389,
									"end": 405,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 334,
									"end": 411,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "tag",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 417,
									"end": 539,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 508,
									"end": 513,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 490,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 490,
									"end": 514,
									"name": "tag",
									"source": 6,
									"value": "80"
								},
								{
									"begin": 490,
									"end": 514,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 483,
									"end": 488,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 480,
									"end": 515,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 529,
									"end": 530,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 527,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 519,
									"end": 531,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 470,
									"end": 533,
									"name": "tag",
									"source": 6,
									"value": "81"
								},
								{
									"begin": 470,
									"end": 533,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 417,
									"end": 539,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "tag",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 545,
									"end": 688,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 602,
									"end": 607,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 633,
									"end": 639,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 627,
									"end": 640,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 618,
									"end": 640,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 676,
									"end": 681,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "49"
								},
								{
									"begin": 649,
									"end": 682,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 649,
									"end": 682,
									"name": "tag",
									"source": 6,
									"value": "83"
								},
								{
									"begin": 649,
									"end": 682,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 545,
									"end": 688,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "tag",
									"source": 6,
									"value": "3"
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 764,
									"end": 770,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 813,
									"end": 815,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 801,
									"end": 810,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 792,
									"end": 799,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 788,
									"end": 811,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 784,
									"end": 816,
									"name": "SLT",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "46"
								},
								{
									"begin": 819,
									"end": 898,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 819,
									"end": 898,
									"name": "tag",
									"source": 6,
									"value": "86"
								},
								{
									"begin": 819,
									"end": 898,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 781,
									"end": 900,
									"name": "tag",
									"source": 6,
									"value": "85"
								},
								{
									"begin": 781,
									"end": 900,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 939,
									"end": 940,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 1020,
									"end": 1027,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 1011,
									"end": 1017,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1000,
									"end": 1009,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 996,
									"end": 1018,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "50"
								},
								{
									"begin": 964,
									"end": 1028,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "tag",
									"source": 6,
									"value": "87"
								},
								{
									"begin": 964,
									"end": 1028,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 954,
									"end": 1028,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 910,
									"end": 1038,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 694,
									"end": 1045,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1051,
									"end": 1231,
									"name": "tag",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1051,
									"end": 1231,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1099,
									"end": 1176,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1096,
									"end": 1097,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1089,
									"end": 1177,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1196,
									"end": 1200,
									"name": "PUSH",
									"source": 6,
									"value": "22"
								},
								{
									"begin": 1193,
									"end": 1194,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1186,
									"end": 1201,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1220,
									"end": 1224,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1217,
									"end": 1218,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1210,
									"end": 1225,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1237,
									"end": 1557,
									"name": "tag",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 1237,
									"end": 1557,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1281,
									"end": 1287,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1318,
									"end": 1319,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 1312,
									"end": 1316,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1308,
									"end": 1320,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 1298,
									"end": 1320,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1298,
									"end": 1320,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1365,
									"end": 1366,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 1359,
									"end": 1363,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1355,
									"end": 1367,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1386,
									"end": 1404,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 1376,
									"end": 1457,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 1376,
									"end": 1457,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1442,
									"end": 1446,
									"name": "PUSH",
									"source": 6,
									"value": "7F"
								},
								{
									"begin": 1434,
									"end": 1440,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1430,
									"end": 1447,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 1420,
									"end": 1447,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1420,
									"end": 1447,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1376,
									"end": 1457,
									"name": "tag",
									"source": 6,
									"value": "90"
								},
								{
									"begin": 1376,
									"end": 1457,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1504,
									"end": 1506,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1496,
									"end": 1502,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 1493,
									"end": 1507,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 1473,
									"end": 1491,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1470,
									"end": 1508,
									"name": "SUB",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1551,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1467,
									"end": 1551,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 1523,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 1523,
									"end": 1541,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "51"
								},
								{
									"begin": 1523,
									"end": 1541,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1523,
									"end": 1541,
									"name": "tag",
									"source": 6,
									"value": "92"
								},
								{
									"begin": 1523,
									"end": 1541,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1467,
									"end": 1551,
									"name": "tag",
									"source": 6,
									"value": "91"
								},
								{
									"begin": 1467,
									"end": 1551,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1288,
									"end": 1557,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1237,
									"end": 1557,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1237,
									"end": 1557,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1237,
									"end": 1557,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1237,
									"end": 1557,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1563,
									"end": 1662,
									"name": "tag",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 1563,
									"end": 1662,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1615,
									"end": 1621,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1649,
									"end": 1654,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1643,
									"end": 1655,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 1633,
									"end": 1655,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1633,
									"end": 1655,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1563,
									"end": 1662,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1563,
									"end": 1662,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1563,
									"end": 1662,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1563,
									"end": 1662,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 1668,
									"end": 1848,
									"name": "tag",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 1668,
									"end": 1848,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1716,
									"end": 1793,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1706,
									"end": 1794,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1813,
									"end": 1817,
									"name": "PUSH",
									"source": 6,
									"value": "41"
								},
								{
									"begin": 1810,
									"end": 1811,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 1803,
									"end": 1818,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1837,
									"end": 1841,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 1834,
									"end": 1835,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1827,
									"end": 1842,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "tag",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 1903,
									"end": 1907,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1926,
									"end": 1929,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1918,
									"end": 1929,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1949,
									"end": 1952,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 1946,
									"end": 1947,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1939,
									"end": 1953,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 1983,
									"end": 1987,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 1980,
									"end": 1981,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 1970,
									"end": 1988,
									"name": "KECCAK256",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1962,
									"end": 1988,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 1854,
									"end": 1995,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "tag",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2038,
									"end": 2044,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2085,
									"end": 2087,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 2080,
									"end": 2082,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 2073,
									"end": 2078,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2069,
									"end": 2083,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 2065,
									"end": 2088,
									"name": "DIV",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2055,
									"end": 2088,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2001,
									"end": 2094,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "tag",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2144,
									"end": 2152,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2194,
									"end": 2199,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2188,
									"end": 2192,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2184,
									"end": 2200,
									"name": "SHL",
									"source": 6
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2163,
									"end": 2200,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2100,
									"end": 2207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "tag",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2282,
									"end": 2288,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2332,
									"end": 2333,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 2320,
									"end": 2330,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2316,
									"end": 2334,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 2385,
									"end": 2451,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2374,
									"end": 2383,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2355,
									"end": 2452,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "tag",
									"source": 6,
									"value": "99"
								},
								{
									"begin": 2355,
									"end": 2452,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2503,
									"end": 2511,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2492,
									"end": 2501,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "56"
								},
								{
									"begin": 2473,
									"end": 2512,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "tag",
									"source": 6,
									"value": "100"
								},
								{
									"begin": 2473,
									"end": 2512,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "SWAP6",
									"source": 6
								},
								{
									"begin": 2461,
									"end": 2512,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2545,
									"end": 2549,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2541,
									"end": 2550,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 2534,
									"end": 2539,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2530,
									"end": 2551,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2521,
									"end": 2551,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2594,
									"end": 2598,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 2584,
									"end": 2592,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 2580,
									"end": 2599,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 2573,
									"end": 2578,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2570,
									"end": 2600,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2560,
									"end": 2600,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2289,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2213,
									"end": 2606,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "tag",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2640,
									"end": 2643,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2661,
									"end": 2666,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2654,
									"end": 2666,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2612,
									"end": 2672,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "tag",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2728,
									"end": 2737,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2806,
									"end": 2811,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2788,
									"end": 2812,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "tag",
									"source": 6,
									"value": "105"
								},
								{
									"begin": 2788,
									"end": 2812,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "58"
								},
								{
									"begin": 2779,
									"end": 2813,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "tag",
									"source": 6,
									"value": "104"
								},
								{
									"begin": 2779,
									"end": 2813,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 2761,
									"end": 2814,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "tag",
									"source": 6,
									"value": "103"
								},
								{
									"begin": 2761,
									"end": 2814,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2748,
									"end": 2814,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2678,
									"end": 2820,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "tag",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 2869,
									"end": 2872,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 2890,
									"end": 2895,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2883,
									"end": 2895,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2826,
									"end": 2901,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "tag",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 3048,
									"end": 3055,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "59"
								},
								{
									"begin": 3017,
									"end": 3056,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "tag",
									"source": 6,
									"value": "108"
								},
								{
									"begin": 3017,
									"end": 3056,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 3151,
									"end": 3167,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 3127,
									"end": 3168,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "tag",
									"source": 6,
									"value": "110"
								},
								{
									"begin": 3127,
									"end": 3168,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3119,
									"end": 3125,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3112,
									"end": 3116,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3106,
									"end": 3117,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "57"
								},
								{
									"begin": 3078,
									"end": 3169,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "tag",
									"source": 6,
									"value": "109"
								},
								{
									"begin": 3078,
									"end": 3169,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3072,
									"end": 3076,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3065,
									"end": 3170,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 2983,
									"end": 3176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 2907,
									"end": 3176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "tag",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3227,
									"end": 3230,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3182,
									"end": 3255,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3182,
									"end": 3255,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "tag",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "62"
								},
								{
									"begin": 3338,
									"end": 3370,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "tag",
									"source": 6,
									"value": "113"
								},
								{
									"begin": 3338,
									"end": 3370,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3437,
									"end": 3443,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3429,
									"end": 3435,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3423,
									"end": 3427,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "61"
								},
								{
									"begin": 3379,
									"end": 3444,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "tag",
									"source": 6,
									"value": "114"
								},
								{
									"begin": 3379,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3314,
									"end": 3450,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3450,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3261,
									"end": 3450,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "tag",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3533,
									"end": 3536,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3526,
									"end": 3531,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3523,
									"end": 3537,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3624,
									"end": 3625,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 3617,
									"end": 3622,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "63"
								},
								{
									"begin": 3587,
									"end": 3626,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "tag",
									"source": 6,
									"value": "119"
								},
								{
									"begin": 3587,
									"end": 3626,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3560,
									"end": 3561,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 3553,
									"end": 3558,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3549,
									"end": 3562,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 3540,
									"end": 3562,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "116"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "tag",
									"source": 6,
									"value": "118"
								},
								{
									"begin": 3516,
									"end": 3636,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3642,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3456,
									"end": 3642,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "tag",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3749,
									"end": 3751,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 3744,
									"end": 3747,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 3741,
									"end": 3752,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 3815,
									"end": 3820,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 3783,
									"end": 3821,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "tag",
									"source": 6,
									"value": "122"
								},
								{
									"begin": 3783,
									"end": 3821,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 3885,
									"end": 3895,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 3867,
									"end": 3896,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "tag",
									"source": 6,
									"value": "123"
								},
								{
									"begin": 3867,
									"end": 3896,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3857,
									"end": 3865,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 3853,
									"end": 3897,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4050,
									"end": 4052,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 4038,
									"end": 4048,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4035,
									"end": 4053,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 4071,
									"end": 4079,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4056,
									"end": 4079,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "tag",
									"source": 6,
									"value": "124"
								},
								{
									"begin": 4032,
									"end": 4081,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 4168,
									"end": 4171,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "55"
								},
								{
									"begin": 4150,
									"end": 4172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "tag",
									"source": 6,
									"value": "126"
								},
								{
									"begin": 4150,
									"end": 4172,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4140,
									"end": 4148,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4136,
									"end": 4173,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 4123,
									"end": 4134,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "64"
								},
								{
									"begin": 4094,
									"end": 4174,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "tag",
									"source": 6,
									"value": "125"
								},
								{
									"begin": 4094,
									"end": 4174,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3753,
									"end": 4184,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "tag",
									"source": 6,
									"value": "121"
								},
								{
									"begin": 3738,
									"end": 4184,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 3648,
									"end": 4191,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "tag",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4251,
									"end": 4259,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4301,
									"end": 4306,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4295,
									"end": 4299,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4291,
									"end": 4307,
									"name": "SHR",
									"source": 6
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4270,
									"end": 4307,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4197,
									"end": 4314,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "tag",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4364,
									"end": 4370,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 4445,
									"end": 4446,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4441,
									"end": 4447,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4433,
									"end": 4438,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 4430,
									"end": 4431,
									"name": "PUSH",
									"source": 6,
									"value": "8"
								},
								{
									"begin": 4426,
									"end": 4439,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "66"
								},
								{
									"begin": 4397,
									"end": 4448,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "tag",
									"source": 6,
									"value": "129"
								},
								{
									"begin": 4397,
									"end": 4448,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4393,
									"end": 4449,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 4478,
									"end": 4482,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 4472,
									"end": 4476,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4468,
									"end": 4483,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4458,
									"end": 4483,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4371,
									"end": 4489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4320,
									"end": 4489,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "tag",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4570,
									"end": 4574,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 4741,
									"end": 4744,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4735,
									"end": 4739,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 4716,
									"end": 4745,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "tag",
									"source": 6,
									"value": "131"
								},
								{
									"begin": 4716,
									"end": 4745,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4708,
									"end": 4745,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4778,
									"end": 4781,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4775,
									"end": 4776,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 4771,
									"end": 4782,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 4765,
									"end": 4769,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4762,
									"end": 4783,
									"name": "OR",
									"source": 6
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 4754,
									"end": 4783,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4494,
									"end": 4789,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "tag",
									"source": 6,
									"value": "19"
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 4944,
									"end": 4947,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "52"
								},
								{
									"begin": 4911,
									"end": 4948,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "tag",
									"source": 6,
									"value": "133"
								},
								{
									"begin": 4911,
									"end": 4948,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5013,
									"end": 5031,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFF"
								},
								{
									"begin": 5005,
									"end": 5011,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5002,
									"end": 5032,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "53"
								},
								{
									"begin": 5035,
									"end": 5053,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "tag",
									"source": 6,
									"value": "135"
								},
								{
									"begin": 5035,
									"end": 5053,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "tag",
									"source": 6,
									"value": "134"
								},
								{
									"begin": 4999,
									"end": 5055,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5111,
									"end": 5115,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5105,
									"end": 5116,
									"name": "SLOAD",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "6"
								},
								{
									"begin": 5079,
									"end": 5117,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "tag",
									"source": 6,
									"value": "136"
								},
								{
									"begin": 5079,
									"end": 5117,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5224,
									"end": 5230,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5216,
									"end": 5222,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5210,
									"end": 5214,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "65"
								},
								{
									"begin": 5164,
									"end": 5231,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "tag",
									"source": 6,
									"value": "137"
								},
								{
									"begin": 5164,
									"end": 5231,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5258,
									"end": 5259,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5282,
									"end": 5286,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5269,
									"end": 5286,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5314,
									"end": 5316,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5306,
									"end": 5312,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5303,
									"end": 5317,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 5331,
									"end": 5332,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "EQ",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5988,
									"end": 5989,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6005,
									"end": 6011,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 6054,
									"end": 6063,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6049,
									"end": 6052,
									"name": "DUP8",
									"source": 6
								},
								{
									"begin": 6045,
									"end": 6064,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6039,
									"end": 6065,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6030,
									"end": 6065,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "tag",
									"source": 6,
									"value": "140"
								},
								{
									"begin": 6002,
									"end": 6079,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 6165,
									"end": 6171,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 6158,
									"end": 6163,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "68"
								},
								{
									"begin": 6105,
									"end": 6172,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "tag",
									"source": 6,
									"value": "141"
								},
								{
									"begin": 6105,
									"end": 6172,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6099,
									"end": 6103,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 6092,
									"end": 6173,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5961,
									"end": 6183,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "tag",
									"source": 6,
									"value": "139"
								},
								{
									"begin": 5326,
									"end": 5944,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5378,
									"end": 5382,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5374,
									"end": 5383,
									"name": "NOT",
									"source": 6
								},
								{
									"begin": 5366,
									"end": 5372,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5362,
									"end": 5384,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 5444,
									"end": 5448,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "54"
								},
								{
									"begin": 5412,
									"end": 5449,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "tag",
									"source": 6,
									"value": "142"
								},
								{
									"begin": 5412,
									"end": 5449,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5471,
									"end": 5472,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5499,
									"end": 5506,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5496,
									"end": 5497,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5493,
									"end": 5507,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5578,
									"end": 5587,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5573,
									"end": 5576,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5569,
									"end": 5588,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5563,
									"end": 5589,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5555,
									"end": 5561,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5548,
									"end": 5590,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5629,
									"end": 5630,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5621,
									"end": 5627,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5617,
									"end": 5631,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 5607,
									"end": 5631,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5676,
									"end": 5678,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5665,
									"end": 5674,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 5661,
									"end": 5679,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 5648,
									"end": 5679,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5522,
									"end": 5526,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 5519,
									"end": 5520,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 5515,
									"end": 5527,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 5510,
									"end": 5527,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "143"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "tag",
									"source": 6,
									"value": "145"
								},
								{
									"begin": 5485,
									"end": 5693,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5721,
									"end": 5727,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 5712,
									"end": 5719,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5709,
									"end": 5728,
									"name": "LT",
									"source": 6
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 5779,
									"end": 5788,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 5774,
									"end": 5777,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5770,
									"end": 5789,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5764,
									"end": 5790,
									"name": "MLOAD",
									"source": 6
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 5864,
									"end": 5868,
									"name": "PUSH",
									"source": 6,
									"value": "1F"
								},
								{
									"begin": 5856,
									"end": 5862,
									"name": "DUP10",
									"source": 6
								},
								{
									"begin": 5852,
									"end": 5869,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 5841,
									"end": 5850,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "67"
								},
								{
									"begin": 5822,
									"end": 5870,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "tag",
									"source": 6,
									"value": "147"
								},
								{
									"begin": 5822,
									"end": 5870,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5814,
									"end": 5820,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 5807,
									"end": 5871,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5729,
									"end": 5885,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "tag",
									"source": 6,
									"value": "146"
								},
								{
									"begin": 5706,
									"end": 5885,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5931,
									"end": 5932,
									"name": "PUSH",
									"source": 6,
									"value": "1"
								},
								{
									"begin": 5927,
									"end": 5928,
									"name": "PUSH",
									"source": 6,
									"value": "2"
								},
								{
									"begin": 5919,
									"end": 5925,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5915,
									"end": 5929,
									"name": "MUL",
									"source": 6
								},
								{
									"begin": 5911,
									"end": 5933,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 5905,
									"end": 5909,
									"name": "DUP9",
									"source": 6
								},
								{
									"begin": 5898,
									"end": 5934,
									"name": "SSTORE",
									"source": 6
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5333,
									"end": 5944,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "tag",
									"source": 6,
									"value": "138"
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 5296,
									"end": 6183,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4886,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 6189,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 4794,
									"end": 6189,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "tag",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6232,
									"end": 6239,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6272,
									"end": 6314,
									"name": "PUSH",
									"source": 6,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 6265,
									"end": 6270,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6261,
									"end": 6315,
									"name": "AND",
									"source": 6
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6250,
									"end": 6315,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6195,
									"end": 6321,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6195,
									"end": 6321,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "tag",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6364,
									"end": 6371,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6411,
									"end": 6416,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "69"
								},
								{
									"begin": 6393,
									"end": 6417,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "tag",
									"source": 6,
									"value": "150"
								},
								{
									"begin": 6393,
									"end": 6417,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6382,
									"end": 6417,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6327,
									"end": 6423,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6327,
									"end": 6423,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "tag",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6534,
									"end": 6539,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "70"
								},
								{
									"begin": 6516,
									"end": 6540,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "tag",
									"source": 6,
									"value": "152"
								},
								{
									"begin": 6516,
									"end": 6540,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6511,
									"end": 6514,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6504,
									"end": 6541,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6429,
									"end": 6547,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6429,
									"end": 6547,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "tag",
									"source": 6,
									"value": "30"
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6646,
									"end": 6650,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6684,
									"end": 6686,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 6673,
									"end": 6682,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 6669,
									"end": 6687,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 6661,
									"end": 6687,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6765,
									"end": 6766,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6754,
									"end": 6763,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 6750,
									"end": 6767,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 6741,
									"end": 6747,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 6697,
									"end": 6768,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "tag",
									"source": 6,
									"value": "154"
								},
								{
									"begin": 6697,
									"end": 6768,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6553,
									"end": 6775,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6553,
									"end": 6775,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "tag",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 6781,
									"end": 6961,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6829,
									"end": 6906,
									"name": "PUSH",
									"source": 6,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 6826,
									"end": 6827,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6819,
									"end": 6907,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6926,
									"end": 6930,
									"name": "PUSH",
									"source": 6,
									"value": "11"
								},
								{
									"begin": 6923,
									"end": 6924,
									"name": "PUSH",
									"source": 6,
									"value": "4"
								},
								{
									"begin": 6916,
									"end": 6931,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 6950,
									"end": 6954,
									"name": "PUSH",
									"source": 6,
									"value": "24"
								},
								{
									"begin": 6947,
									"end": 6948,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 6940,
									"end": 6955,
									"name": "REVERT",
									"source": 6
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "tag",
									"source": 6,
									"value": "36"
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7007,
									"end": 7010,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7044,
									"end": 7045,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 7026,
									"end": 7046,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "tag",
									"source": 6,
									"value": "157"
								},
								{
									"begin": 7026,
									"end": 7046,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7021,
									"end": 7046,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7078,
									"end": 7079,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 7060,
									"end": 7080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "tag",
									"source": 6,
									"value": "158"
								},
								{
									"begin": 7060,
									"end": 7080,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7055,
									"end": 7080,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7103,
									"end": 7104,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7100,
									"end": 7101,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7096,
									"end": 7105,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7089,
									"end": 7105,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7124,
									"end": 7127,
									"name": "DUP1",
									"source": 6
								},
								{
									"begin": 7121,
									"end": 7122,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7118,
									"end": 7128,
									"name": "GT",
									"source": 6
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "ISZERO",
									"source": 6
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPI",
									"source": 6
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "72"
								},
								{
									"begin": 7131,
									"end": 7149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "tag",
									"source": 6,
									"value": "160"
								},
								{
									"begin": 7131,
									"end": 7149,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "tag",
									"source": 6,
									"value": "159"
								},
								{
									"begin": 7115,
									"end": 7151,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6967,
									"end": 7158,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 6967,
									"end": 7158,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "tag",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7269,
									"end": 7274,
									"name": "DUP2",
									"source": 6
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "48"
								},
								{
									"begin": 7251,
									"end": 7275,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "tag",
									"source": 6,
									"value": "162"
								},
								{
									"begin": 7251,
									"end": 7275,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7246,
									"end": 7249,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7239,
									"end": 7276,
									"name": "MSTORE",
									"source": 6
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7164,
									"end": 7282,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7164,
									"end": 7282,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "tag",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7437,
									"end": 7441,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7475,
									"end": 7477,
									"name": "PUSH",
									"source": 6,
									"value": "60"
								},
								{
									"begin": 7464,
									"end": 7473,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7460,
									"end": 7478,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7452,
									"end": 7478,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7556,
									"end": 7557,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7545,
									"end": 7554,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7541,
									"end": 7558,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7532,
									"end": 7538,
									"name": "DUP7",
									"source": 6
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "71"
								},
								{
									"begin": 7488,
									"end": 7559,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "tag",
									"source": 6,
									"value": "164"
								},
								{
									"begin": 7488,
									"end": 7559,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7637,
									"end": 7639,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7626,
									"end": 7635,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7622,
									"end": 7640,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7613,
									"end": 7619,
									"name": "DUP6",
									"source": 6
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 7569,
									"end": 7641,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "tag",
									"source": 6,
									"value": "165"
								},
								{
									"begin": 7569,
									"end": 7641,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7719,
									"end": 7721,
									"name": "PUSH",
									"source": 6,
									"value": "40"
								},
								{
									"begin": 7708,
									"end": 7717,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7704,
									"end": 7722,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7695,
									"end": 7701,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 7651,
									"end": 7723,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "tag",
									"source": 6,
									"value": "166"
								},
								{
									"begin": 7651,
									"end": 7723,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP5",
									"source": 6
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "SWAP4",
									"source": 6
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7288,
									"end": 7730,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7288,
									"end": 7730,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "tag",
									"source": 6,
									"value": "44"
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7829,
									"end": 7833,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7867,
									"end": 7869,
									"name": "PUSH",
									"source": 6,
									"value": "20"
								},
								{
									"begin": 7856,
									"end": 7865,
									"name": "DUP3",
									"source": 6
								},
								{
									"begin": 7852,
									"end": 7870,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "SWAP1",
									"source": 6
								},
								{
									"begin": 7844,
									"end": 7870,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 7948,
									"end": 7949,
									"name": "PUSH",
									"source": 6,
									"value": "0"
								},
								{
									"begin": 7937,
									"end": 7946,
									"name": "DUP4",
									"source": 6
								},
								{
									"begin": 7933,
									"end": 7950,
									"name": "ADD",
									"source": 6
								},
								{
									"begin": 7924,
									"end": 7930,
									"name": "DUP5",
									"source": 6
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "PUSH [tag]",
									"source": 6,
									"value": "73"
								},
								{
									"begin": 7880,
									"end": 7951,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "tag",
									"source": 6,
									"value": "168"
								},
								{
									"begin": 7880,
									"end": 7951,
									"name": "JUMPDEST",
									"source": 6
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP3",
									"source": 6
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "SWAP2",
									"source": 6
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7736,
									"end": 7958,
									"name": "POP",
									"source": 6
								},
								{
									"begin": 7736,
									"end": 7958,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 6
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "tag",
									"source": 4,
									"value": "26"
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 86,
									"end": 2742,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122030e459317df432e3f2e43d346e07ab18613c035681f7b27a78b434a96208deb464736f6c634300081a0033",
									".code": [
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "C4E41B22"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "DD62ED3E"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "ECF35CCA"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "F1850AF8"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "95D89B41"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "9B96EECE"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "9DC29FAC"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "9F0C8125"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "313CE567"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "3EAAF86B"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "40C10F19"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "70A08231"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "862B092B"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "6FDDE03"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "18160DDD"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 86,
											"end": 2742,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1971,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1971,
											"end": 2060,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1538,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1538,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1538,
											"end": 1740,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3041,
											"end": 3138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3041,
											"end": 3138,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "tag",
											"source": 1,
											"value": "36"
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 2158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1848,
											"end": 2158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1848,
											"end": 2158,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "tag",
											"source": 1,
											"value": "7"
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2899,
											"end": 2981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 2899,
											"end": 2981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 253,
											"end": 280,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 253,
											"end": 280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 253,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 253,
											"end": 280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "tag",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 253,
											"end": 280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 253,
											"end": 280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 253,
											"end": 280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 253,
											"end": 280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 253,
											"end": 280,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 686,
											"end": 869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 686,
											"end": 869,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 686,
											"end": 869,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 686,
											"end": 869,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 686,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 686,
											"end": 869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 686,
											"end": 869,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 686,
											"end": 869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "55"
										},
										{
											"begin": 3196,
											"end": 3312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "tag",
											"source": 1,
											"value": "54"
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3196,
											"end": 3312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3196,
											"end": 3312,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2433,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2433,
											"end": 2529,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2173,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2173,
											"end": 2266,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2225,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2225,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2225,
											"end": 2375,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 934,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "tag",
											"source": 4,
											"value": "69"
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 934,
											"end": 1121,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 189,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 189,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1232,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1232,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1232,
											"end": 1427,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2645,
											"end": 2739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 2645,
											"end": 2739,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "83"
										},
										{
											"begin": 3743,
											"end": 3883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "tag",
											"source": 1,
											"value": "82"
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3743,
											"end": 3883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "tag",
											"source": 1,
											"value": "81"
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 3743,
											"end": 3883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "tag",
											"source": 1,
											"value": "85"
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 220,
											"end": 246,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 220,
											"end": 246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 220,
											"end": 246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "tag",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2537,
											"end": 2637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2537,
											"end": 2637,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2016,
											"end": 2029,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2048,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2041,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "tag",
											"source": 1,
											"value": "93"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2041,
											"end": 2053,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "tag",
											"source": 1,
											"value": "95"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "tag",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "98"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "tag",
											"source": 1,
											"value": "96"
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2041,
											"end": 2053,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1971,
											"end": 2060,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1613,
											"end": 1617,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1630,
											"end": 1669,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1639,
											"end": 1651,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1639,
											"end": 1649,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1639,
											"end": 1651,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1639,
											"end": 1651,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 1639,
											"end": 1651,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1662,
											"end": 1668,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1638,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1630,
											"end": 1669,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1630,
											"end": 1669,
											"name": "tag",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1630,
											"end": 1669,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1728,
											"end": 1732,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1721,
											"end": 1732,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1721,
											"end": 1732,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1538,
											"end": 1740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3093,
											"end": 3100,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3119,
											"end": 3131,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 3119,
											"end": 3131,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3112,
											"end": 3131,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3041,
											"end": 3138,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1941,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1954,
											"end": 1981,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1964,
											"end": 1968,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1970,
											"end": 1972,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1980,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1954,
											"end": 1981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1954,
											"end": 1981,
											"name": "tag",
											"source": 4,
											"value": "106"
										},
										{
											"begin": 1954,
											"end": 1981,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2043,
											"end": 2047,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2049,
											"end": 2059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2049,
											"end": 2061,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2049,
											"end": 2061,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2095,
											"end": 2101,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2092,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2073,
											"end": 2077,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 2079,
											"end": 2091,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2079,
											"end": 2089,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 2079,
											"end": 2091,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2079,
											"end": 2091,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 2079,
											"end": 2091,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2072,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 2063,
											"end": 2092,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2092,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2063,
											"end": 2092,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2063,
											"end": 2101,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2101,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2101,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2063,
											"end": 2101,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2063,
											"end": 2101,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2063,
											"end": 2101,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2042,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 2034,
											"end": 2102,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2102,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 2034,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2146,
											"end": 2150,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2139,
											"end": 2150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1848,
											"end": 2158,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2948,
											"end": 2953,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2972,
											"end": 2974,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 2965,
											"end": 2974,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2965,
											"end": 2974,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2899,
											"end": 2981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 253,
											"end": 280,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 253,
											"end": 280,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 253,
											"end": 280,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 253,
											"end": 280,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 686,
											"end": 869,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 746,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 752,
											"end": 754,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 756,
											"end": 762,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 746,
											"end": 751,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 746,
											"end": 763,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 746,
											"end": 763,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 746,
											"end": 763,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 828,
											"end": 834,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 812,
											"end": 824,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 812,
											"end": 824,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 812,
											"end": 834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 812,
											"end": 834,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 812,
											"end": 834,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 812,
											"end": 834,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 812,
											"end": 834,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 686,
											"end": 869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3261,
											"end": 3268,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3296,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3297,
											"end": 3304,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3287,
											"end": 3305,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3305,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3280,
											"end": 3305,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3196,
											"end": 3312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2478,
											"end": 2491,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2511,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2504,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2504,
											"end": 2521,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2521,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2433,
											"end": 2529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "tag",
											"source": 1,
											"value": "62"
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2233,
											"name": "PUSH",
											"source": 1,
											"value": "60"
										},
										{
											"begin": 2252,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2245,
											"end": 2259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "tag",
											"source": 1,
											"value": "128"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "94"
										},
										{
											"begin": 2245,
											"end": 2259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "tag",
											"source": 1,
											"value": "129"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "MUL",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "tag",
											"source": 1,
											"value": "131"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "tag",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "132"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "PUSH",
											"source": 1,
											"value": "1F"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "tag",
											"source": 1,
											"value": "130"
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2245,
											"end": 2259,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 2173,
											"end": 2266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "tag",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2285,
											"end": 2292,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2322,
											"end": 2329,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2312,
											"end": 2321,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2312,
											"end": 2330,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 2312,
											"end": 2330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2305,
											"end": 2330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2305,
											"end": 2330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2225,
											"end": 2375,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1015,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1002,
											"end": 1006,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1008,
											"end": 1014,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1001,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 996,
											"end": 1015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 996,
											"end": 1015,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 996,
											"end": 1015,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1080,
											"end": 1086,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1064,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 1064,
											"end": 1086,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1064,
											"end": 1086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 934,
											"end": 1121,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 189,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 189,
											"end": 213,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 189,
											"end": 213,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 189,
											"end": 213,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1307,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1320,
											"end": 1355,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1330,
											"end": 1342,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1330,
											"end": 1340,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1330,
											"end": 1342,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1342,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1330,
											"end": 1342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1344,
											"end": 1346,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1320,
											"end": 1355,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1320,
											"end": 1355,
											"name": "tag",
											"source": 4,
											"value": "145"
										},
										{
											"begin": 1320,
											"end": 1355,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1415,
											"end": 1419,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1408,
											"end": 1419,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1408,
											"end": 1419,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1232,
											"end": 1427,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "tag",
											"source": 4,
											"value": "79"
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2699,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2719,
											"end": 2731,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 2719,
											"end": 2731,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2712,
											"end": 2731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2645,
											"end": 2739,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "tag",
											"source": 1,
											"value": "84"
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 3823,
											"end": 3830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3860,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3861,
											"end": 3866,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3867,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3868,
											"end": 3875,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 3849,
											"end": 3876,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3876,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 3842,
											"end": 3876,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 3743,
											"end": 3883,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 220,
											"end": 246,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 220,
											"end": 246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 220,
											"end": 246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "tag",
											"source": 4,
											"value": "151"
										},
										{
											"begin": 220,
											"end": 246,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 220,
											"end": 246,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2584,
											"end": 2597,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2617,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2610,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 2610,
											"end": 2629,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2610,
											"end": 2629,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2537,
											"end": 2637,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8886,
											"end": 9014,
											"name": "tag",
											"source": 1,
											"value": "103"
										},
										{
											"begin": 8886,
											"end": 9014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 9007,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 8979,
											"end": 8984,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8986,
											"end": 8993,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8995,
											"end": 9000,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 9002,
											"end": 9006,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 8970,
											"end": 8978,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 8970,
											"end": 9007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8970,
											"end": 9007,
											"name": "tag",
											"source": 1,
											"value": "162"
										},
										{
											"begin": 8970,
											"end": 9007,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8886,
											"end": 9014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8886,
											"end": 9014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8886,
											"end": 9014,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8886,
											"end": 9014,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5853,
											"name": "tag",
											"source": 1,
											"value": "107"
										},
										{
											"begin": 5553,
											"end": 5853,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5652,
											"end": 5653,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5640,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5636,
											"end": 5654,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5632,
											"end": 5718,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5704,
											"end": 5705,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5677,
											"end": 5707,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "tag",
											"source": 1,
											"value": "166"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5677,
											"end": 5707,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5632,
											"end": 5718,
											"name": "tag",
											"source": 1,
											"value": "165"
										},
										{
											"begin": 5632,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5745,
											"end": 5746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5731,
											"end": 5747,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5731,
											"end": 5747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5731,
											"end": 5733,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 5731,
											"end": 5747,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5731,
											"end": 5747,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5731,
											"end": 5747,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5813,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5727,
											"end": 5813,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5799,
											"end": 5800,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 5770,
											"end": 5802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "tag",
											"source": 1,
											"value": "169"
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5770,
											"end": 5802,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 5727,
											"end": 5813,
											"name": "tag",
											"source": 1,
											"value": "168"
										},
										{
											"begin": 5727,
											"end": 5813,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 5846,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5830,
											"end": 5834,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5836,
											"end": 5838,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5840,
											"end": 5845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 5829,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 5822,
											"end": 5846,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 5822,
											"end": 5846,
											"name": "tag",
											"source": 1,
											"value": "170"
										},
										{
											"begin": 5822,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5853,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 5553,
											"end": 5853,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7826,
											"name": "tag",
											"source": 1,
											"value": "117"
										},
										{
											"begin": 7618,
											"end": 7826,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7707,
											"end": 7708,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7688,
											"end": 7709,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7688,
											"end": 7709,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7695,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7709,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7688,
											"end": 7709,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7688,
											"end": 7709,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7775,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7684,
											"end": 7775,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7761,
											"end": 7762,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "PUSH",
											"source": 1,
											"value": "EC442F0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 7732,
											"end": 7764,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "tag",
											"source": 1,
											"value": "174"
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7732,
											"end": 7764,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 7684,
											"end": 7775,
											"name": "tag",
											"source": 1,
											"value": "173"
										},
										{
											"begin": 7684,
											"end": 7775,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7784,
											"end": 7819,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7800,
											"end": 7801,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7804,
											"end": 7811,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7813,
											"end": 7818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7784,
											"end": 7791,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 7784,
											"end": 7819,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7784,
											"end": 7819,
											"name": "tag",
											"source": 1,
											"value": "175"
										},
										{
											"begin": 7784,
											"end": 7819,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7826,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7618,
											"end": 7826,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8350,
											"name": "tag",
											"source": 1,
											"value": "137"
										},
										{
											"begin": 8144,
											"end": 8350,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8233,
											"end": 8234,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8214,
											"end": 8235,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8214,
											"end": 8235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8221,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8235,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8214,
											"end": 8235,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 8214,
											"end": 8235,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8299,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8210,
											"end": 8299,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 8285,
											"end": 8286,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "PUSH",
											"source": 1,
											"value": "96C6FD1E00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 8258,
											"end": 8288,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "tag",
											"source": 1,
											"value": "178"
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8258,
											"end": 8288,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 8210,
											"end": 8299,
											"name": "tag",
											"source": 1,
											"value": "177"
										},
										{
											"begin": 8210,
											"end": 8299,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8308,
											"end": 8343,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 8316,
											"end": 8323,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 8333,
											"end": 8334,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 8337,
											"end": 8342,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 8308,
											"end": 8315,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 8308,
											"end": 8343,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 8308,
											"end": 8343,
											"name": "tag",
											"source": 1,
											"value": "179"
										},
										{
											"begin": 8308,
											"end": 8343,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8350,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 8144,
											"end": 8350,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 10278,
											"name": "tag",
											"source": 1,
											"value": "163"
										},
										{
											"begin": 9846,
											"end": 10278,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9975,
											"end": 9976,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 9958,
											"end": 9977,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9958,
											"end": 9977,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9963,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9977,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9958,
											"end": 9977,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 9958,
											"end": 9977,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 9954,
											"end": 10043,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9954,
											"end": 10043,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10029,
											"end": 10030,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "PUSH",
											"source": 1,
											"value": "E602DF0500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10000,
											"end": 10032,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "tag",
											"source": 1,
											"value": "182"
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10000,
											"end": 10032,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 9954,
											"end": 10043,
											"name": "tag",
											"source": 1,
											"value": "181"
										},
										{
											"begin": 9954,
											"end": 10043,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10075,
											"end": 10076,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10063,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10056,
											"end": 10077,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10142,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10052,
											"end": 10142,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10128,
											"end": 10129,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "PUSH",
											"source": 1,
											"value": "94280D6200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "167"
										},
										{
											"begin": 10100,
											"end": 10131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "tag",
											"source": 1,
											"value": "184"
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10100,
											"end": 10131,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 10052,
											"end": 10142,
											"name": "tag",
											"source": 1,
											"value": "183"
										},
										{
											"begin": 10052,
											"end": 10142,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10181,
											"end": 10186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10162,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10163,
											"end": 10168,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10151,
											"end": 10169,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10170,
											"end": 10177,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 10151,
											"end": 10178,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10186,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10186,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10186,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 10151,
											"end": 10186,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 10200,
											"end": 10209,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10196,
											"end": 10272,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 10196,
											"end": 10272,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10196,
											"end": 10272,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 10246,
											"end": 10253,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10239,
											"end": 10244,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "PUSH",
											"source": 1,
											"value": "8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925"
										},
										{
											"begin": 10255,
											"end": 10260,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 10230,
											"end": 10261,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "tag",
											"source": 1,
											"value": "186"
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 10230,
											"end": 10261,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 10196,
											"end": 10272,
											"name": "tag",
											"source": 1,
											"value": "185"
										},
										{
											"begin": 10196,
											"end": 10272,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 10278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 10278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 10278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 10278,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 9846,
											"end": 10278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6168,
											"end": 7275,
											"name": "tag",
											"source": 1,
											"value": "171"
										},
										{
											"begin": 6168,
											"end": 7275,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6273,
											"end": 6274,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6257,
											"end": 6275,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6257,
											"end": 6275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6257,
											"end": 6261,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6257,
											"end": 6275,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6257,
											"end": 6275,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6257,
											"end": 6275,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6253,
											"end": 6793,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6409,
											"end": 6414,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6405,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6393,
											"end": 6405,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "119"
										},
										{
											"begin": 6393,
											"end": 6414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "tag",
											"source": 1,
											"value": "189"
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6393,
											"end": 6414,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6793,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6253,
											"end": 6793,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6793,
											"name": "tag",
											"source": 1,
											"value": "188"
										},
										{
											"begin": 6253,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6464,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6476,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6477,
											"end": 6481,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6467,
											"end": 6482,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6482,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6445,
											"end": 6482,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6514,
											"end": 6519,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6500,
											"end": 6511,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6500,
											"end": 6519,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6611,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6611,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6496,
											"end": 6611,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6571,
											"end": 6575,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6577,
											"end": 6588,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6590,
											"end": 6595,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "PUSH",
											"source": 1,
											"value": "E450D38C00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "193"
										},
										{
											"begin": 6546,
											"end": 6596,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "tag",
											"source": 1,
											"value": "192"
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6546,
											"end": 6596,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 6496,
											"end": 6611,
											"name": "tag",
											"source": 1,
											"value": "191"
										},
										{
											"begin": 6496,
											"end": 6611,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6763,
											"end": 6768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6760,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6749,
											"end": 6768,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6740,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6741,
											"end": 6745,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6731,
											"end": 6746,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6768,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6768,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6768,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6731,
											"end": 6768,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6431,
											"end": 6793,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6253,
											"end": 6793,
											"name": "tag",
											"source": 1,
											"value": "190"
										},
										{
											"begin": 6253,
											"end": 6793,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 6821,
											"end": 6822,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6807,
											"end": 6823,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6807,
											"end": 6823,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6809,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6823,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6807,
											"end": 6823,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 6807,
											"end": 6823,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6803,
											"end": 7228,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 6986,
											"end": 6991,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 6970,
											"end": 6982,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 6970,
											"end": 6991,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 7228,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 6803,
											"end": 7228,
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 7228,
											"name": "tag",
											"source": 1,
											"value": "194"
										},
										{
											"begin": 6803,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7198,
											"end": 7203,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7190,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7193,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "KECCAK256",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7194,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 7181,
											"end": 7203,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6803,
											"end": 7228,
											"name": "tag",
											"source": 1,
											"value": "195"
										},
										{
											"begin": 6803,
											"end": 7228,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7258,
											"end": 7260,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7252,
											"end": 7256,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "PUSH",
											"source": 1,
											"value": "DDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF"
										},
										{
											"begin": 7262,
											"end": 7267,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 7243,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "tag",
											"source": 1,
											"value": "196"
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7243,
											"end": 7268,
											"name": "LOG3",
											"source": 1
										},
										{
											"begin": 6168,
											"end": 7275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6168,
											"end": 7275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6168,
											"end": 7275,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 6168,
											"end": 7275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 106,
											"name": "tag",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 7,
											"end": 106,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 59,
											"end": 65,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 93,
											"end": 98,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 87,
											"end": 99,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 77,
											"end": 99,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7,
											"end": 106,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "tag",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 112,
											"end": 281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 196,
											"end": 207,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 230,
											"end": 236,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 225,
											"end": 228,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 218,
											"end": 237,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 270,
											"end": 274,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 265,
											"end": 268,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 261,
											"end": 275,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 246,
											"end": 275,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 112,
											"end": 281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "tag",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 287,
											"end": 426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 376,
											"end": 382,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 371,
											"end": 374,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 366,
											"end": 369,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 360,
											"end": 383,
											"name": "MCOPY",
											"source": 6
										},
										{
											"begin": 417,
											"end": 418,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 408,
											"end": 414,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 403,
											"end": 406,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 399,
											"end": 415,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 392,
											"end": 419,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 287,
											"end": 426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "tag",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 432,
											"end": 534,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 473,
											"end": 479,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 524,
											"end": 526,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 520,
											"end": 527,
											"name": "NOT",
											"source": 6
										},
										{
											"begin": 515,
											"end": 517,
											"name": "PUSH",
											"source": 6,
											"value": "1F"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 504,
											"end": 518,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 500,
											"end": 528,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 490,
											"end": 528,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 432,
											"end": 534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "tag",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 540,
											"end": 917,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 628,
											"end": 631,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 689,
											"end": 694,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "197"
										},
										{
											"begin": 656,
											"end": 695,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 695,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 656,
											"end": 695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 775,
											"end": 781,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 770,
											"end": 773,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "198"
										},
										{
											"begin": 711,
											"end": 782,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 711,
											"end": 782,
											"name": "tag",
											"source": 6,
											"value": "227"
										},
										{
											"begin": 711,
											"end": 782,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 704,
											"end": 782,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 849,
											"end": 855,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 844,
											"end": 847,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 837,
											"end": 841,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 830,
											"end": 835,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 826,
											"end": 842,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "199"
										},
										{
											"begin": 791,
											"end": 856,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 791,
											"end": 856,
											"name": "tag",
											"source": 6,
											"value": "228"
										},
										{
											"begin": 791,
											"end": 856,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 903,
											"end": 909,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "200"
										},
										{
											"begin": 881,
											"end": 910,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 881,
											"end": 910,
											"name": "tag",
											"source": 6,
											"value": "229"
										},
										{
											"begin": 881,
											"end": 910,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 876,
											"end": 879,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 872,
											"end": 911,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 865,
											"end": 911,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 632,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 540,
											"end": 917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "tag",
											"source": 6,
											"value": "27"
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1036,
											"end": 1040,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1074,
											"end": 1076,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 1063,
											"end": 1072,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1059,
											"end": 1077,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1051,
											"end": 1077,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1123,
											"end": 1132,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1117,
											"end": 1121,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1113,
											"end": 1133,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 1109,
											"end": 1110,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1098,
											"end": 1107,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 1094,
											"end": 1111,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 1087,
											"end": 1134,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1224,
											"end": 1228,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1215,
											"end": 1221,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "201"
										},
										{
											"begin": 1151,
											"end": 1229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "tag",
											"source": 6,
											"value": "231"
										},
										{
											"begin": 1151,
											"end": 1229,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1143,
											"end": 1229,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 923,
											"end": 1236,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "tag",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 1323,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1422,
											"end": 1434,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "tag",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1606,
											"end": 1613,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1646,
											"end": 1688,
											"name": "PUSH",
											"source": 6,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1639,
											"end": 1644,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1635,
											"end": 1689,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1624,
											"end": 1689,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1569,
											"end": 1695,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "tag",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1738,
											"end": 1745,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1785,
											"end": 1790,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "205"
										},
										{
											"begin": 1767,
											"end": 1791,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "tag",
											"source": 6,
											"value": "237"
										},
										{
											"begin": 1767,
											"end": 1791,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1756,
											"end": 1791,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1701,
											"end": 1797,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "tag",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1894,
											"end": 1899,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 1876,
											"end": 1900,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "tag",
											"source": 6,
											"value": "239"
										},
										{
											"begin": 1876,
											"end": 1900,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1869,
											"end": 1874,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 1866,
											"end": 1901,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 1915,
											"end": 1916,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 1912,
											"end": 1913,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 1905,
											"end": 1917,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "tag",
											"source": 6,
											"value": "240"
										},
										{
											"begin": 1856,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1803,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "tag",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1977,
											"end": 1982,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2015,
											"end": 2021,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2002,
											"end": 2022,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 1993,
											"end": 2022,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2058,
											"end": 2063,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "207"
										},
										{
											"begin": 2031,
											"end": 2064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "tag",
											"source": 6,
											"value": "242"
										},
										{
											"begin": 2031,
											"end": 2064,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 1931,
											"end": 2070,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "tag",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2113,
											"end": 2120,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2131,
											"end": 2147,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2076,
											"end": 2153,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "tag",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2250,
											"end": 2255,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 2232,
											"end": 2256,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "tag",
											"source": 6,
											"value": "245"
										},
										{
											"begin": 2232,
											"end": 2256,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2225,
											"end": 2230,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2222,
											"end": 2257,
											"name": "EQ",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2271,
											"end": 2272,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2268,
											"end": 2269,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2261,
											"end": 2273,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "tag",
											"source": 6,
											"value": "246"
										},
										{
											"begin": 2212,
											"end": 2275,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2159,
											"end": 2281,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "tag",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2333,
											"end": 2338,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2371,
											"end": 2377,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2358,
											"end": 2378,
											"name": "CALLDATALOAD",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2349,
											"end": 2378,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2414,
											"end": 2419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "210"
										},
										{
											"begin": 2387,
											"end": 2420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "tag",
											"source": 6,
											"value": "248"
										},
										{
											"begin": 2387,
											"end": 2420,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2287,
											"end": 2426,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "tag",
											"source": 6,
											"value": "30"
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2500,
											"end": 2506,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2514,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2557,
											"end": 2559,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 2545,
											"end": 2554,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 2536,
											"end": 2543,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2532,
											"end": 2555,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 2528,
											"end": 2560,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 2563,
											"end": 2642,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 2563,
											"end": 2642,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "tag",
											"source": 6,
											"value": "250"
										},
										{
											"begin": 2525,
											"end": 2644,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2683,
											"end": 2684,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2753,
											"end": 2760,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2744,
											"end": 2750,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2733,
											"end": 2742,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2729,
											"end": 2751,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 2708,
											"end": 2761,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "tag",
											"source": 6,
											"value": "252"
										},
										{
											"begin": 2708,
											"end": 2761,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2698,
											"end": 2761,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2654,
											"end": 2771,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2810,
											"end": 2812,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2881,
											"end": 2888,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 2872,
											"end": 2878,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 2861,
											"end": 2870,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 2857,
											"end": 2879,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 2836,
											"end": 2889,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "tag",
											"source": 6,
											"value": "253"
										},
										{
											"begin": 2836,
											"end": 2889,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2826,
											"end": 2889,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2781,
											"end": 2899,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2432,
											"end": 2906,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "tag",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2946,
											"end": 2953,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2989,
											"end": 2994,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 2982,
											"end": 2995,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2975,
											"end": 2996,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2964,
											"end": 2996,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 2912,
											"end": 3002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "tag",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3104,
											"end": 3109,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "212"
										},
										{
											"begin": 3089,
											"end": 3110,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "tag",
											"source": 6,
											"value": "256"
										},
										{
											"begin": 3089,
											"end": 3110,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3084,
											"end": 3087,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3077,
											"end": 3111,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3008,
											"end": 3117,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "tag",
											"source": 6,
											"value": "33"
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3210,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3248,
											"end": 3250,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3237,
											"end": 3246,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3233,
											"end": 3251,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3225,
											"end": 3251,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3323,
											"end": 3324,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3312,
											"end": 3321,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3308,
											"end": 3325,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3299,
											"end": 3305,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "213"
										},
										{
											"begin": 3261,
											"end": 3326,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "tag",
											"source": 6,
											"value": "258"
										},
										{
											"begin": 3261,
											"end": 3326,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3123,
											"end": 3333,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "tag",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3444,
											"end": 3449,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 3426,
											"end": 3450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "tag",
											"source": 6,
											"value": "260"
										},
										{
											"begin": 3426,
											"end": 3450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3421,
											"end": 3424,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3414,
											"end": 3451,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3339,
											"end": 3457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "tag",
											"source": 6,
											"value": "37"
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3556,
											"end": 3560,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3594,
											"end": 3596,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 3583,
											"end": 3592,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 3579,
											"end": 3597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3571,
											"end": 3597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3675,
											"end": 3676,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3664,
											"end": 3673,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 3660,
											"end": 3677,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3651,
											"end": 3657,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 3607,
											"end": 3678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 3607,
											"end": 3678,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3463,
											"end": 3685,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "tag",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3768,
											"end": 3774,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3776,
											"end": 3782,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3833,
											"end": 3835,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 3821,
											"end": 3830,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 3812,
											"end": 3819,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 3808,
											"end": 3831,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3804,
											"end": 3836,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 3839,
											"end": 3918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "tag",
											"source": 6,
											"value": "265"
										},
										{
											"begin": 3839,
											"end": 3918,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "tag",
											"source": 6,
											"value": "264"
										},
										{
											"begin": 3801,
											"end": 3920,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3959,
											"end": 3960,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 4029,
											"end": 4036,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4020,
											"end": 4026,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4009,
											"end": 4018,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4005,
											"end": 4027,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 3984,
											"end": 4037,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "tag",
											"source": 6,
											"value": "266"
										},
										{
											"begin": 3984,
											"end": 4037,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 3974,
											"end": 4037,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3930,
											"end": 4047,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4086,
											"end": 4088,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4148,
											"end": 4154,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4137,
											"end": 4146,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4133,
											"end": 4155,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 4112,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "tag",
											"source": 6,
											"value": "267"
										},
										{
											"begin": 4112,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4102,
											"end": 4165,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4057,
											"end": 4175,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4214,
											"end": 4216,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4285,
											"end": 4292,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 4276,
											"end": 4282,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4265,
											"end": 4274,
											"name": "DUP8",
											"source": 6
										},
										{
											"begin": 4261,
											"end": 4283,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "211"
										},
										{
											"begin": 4240,
											"end": 4293,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "tag",
											"source": 6,
											"value": "268"
										},
										{
											"begin": 4240,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4230,
											"end": 4293,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4185,
											"end": 4303,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 3691,
											"end": 4310,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "tag",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4351,
											"end": 4358,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4391,
											"end": 4395,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 4384,
											"end": 4389,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4380,
											"end": 4396,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4369,
											"end": 4396,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4316,
											"end": 4402,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "tag",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 4507,
											"end": 4512,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "215"
										},
										{
											"begin": 4491,
											"end": 4513,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "tag",
											"source": 6,
											"value": "271"
										},
										{
											"begin": 4491,
											"end": 4513,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4486,
											"end": 4489,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4479,
											"end": 4514,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4408,
											"end": 4520,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "tag",
											"source": 6,
											"value": "46"
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4615,
											"end": 4619,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4653,
											"end": 4655,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4642,
											"end": 4651,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4638,
											"end": 4656,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 4630,
											"end": 4656,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 4730,
											"end": 4731,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4719,
											"end": 4728,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 4715,
											"end": 4732,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 4706,
											"end": 4712,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "216"
										},
										{
											"begin": 4666,
											"end": 4733,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "tag",
											"source": 6,
											"value": "273"
										},
										{
											"begin": 4666,
											"end": 4733,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4526,
											"end": 4740,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "tag",
											"source": 6,
											"value": "55"
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4805,
											"end": 4811,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 4854,
											"end": 4856,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 4842,
											"end": 4851,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 4833,
											"end": 4840,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 4829,
											"end": 4852,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 4825,
											"end": 4857,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 4860,
											"end": 4939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "tag",
											"source": 6,
											"value": "276"
										},
										{
											"begin": 4860,
											"end": 4939,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "tag",
											"source": 6,
											"value": "275"
										},
										{
											"begin": 4822,
											"end": 4941,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4980,
											"end": 4981,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5050,
											"end": 5057,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 5041,
											"end": 5047,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5030,
											"end": 5039,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5026,
											"end": 5048,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5005,
											"end": 5058,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "tag",
											"source": 6,
											"value": "277"
										},
										{
											"begin": 5005,
											"end": 5058,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4995,
											"end": 5058,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4951,
											"end": 5068,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 4746,
											"end": 5075,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "tag",
											"source": 6,
											"value": "83"
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5149,
											"end": 5155,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5206,
											"end": 5208,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 5194,
											"end": 5203,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 5185,
											"end": 5192,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5181,
											"end": 5204,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5177,
											"end": 5209,
											"name": "SLT",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "203"
										},
										{
											"begin": 5212,
											"end": 5291,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "tag",
											"source": 6,
											"value": "280"
										},
										{
											"begin": 5212,
											"end": 5291,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "tag",
											"source": 6,
											"value": "279"
										},
										{
											"begin": 5174,
											"end": 5293,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5332,
											"end": 5333,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 5402,
											"end": 5409,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5393,
											"end": 5399,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5382,
											"end": 5391,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5378,
											"end": 5400,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5357,
											"end": 5410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "tag",
											"source": 6,
											"value": "281"
										},
										{
											"begin": 5357,
											"end": 5410,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5347,
											"end": 5410,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5303,
											"end": 5420,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5459,
											"end": 5461,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5530,
											"end": 5537,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 5521,
											"end": 5527,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5510,
											"end": 5519,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 5506,
											"end": 5528,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "208"
										},
										{
											"begin": 5485,
											"end": 5538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "tag",
											"source": 6,
											"value": "282"
										},
										{
											"begin": 5485,
											"end": 5538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5475,
											"end": 5538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5430,
											"end": 5548,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5081,
											"end": 5555,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "tag",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 5561,
											"end": 5741,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5609,
											"end": 5686,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5606,
											"end": 5607,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5599,
											"end": 5687,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5706,
											"end": 5710,
											"name": "PUSH",
											"source": 6,
											"value": "22"
										},
										{
											"begin": 5703,
											"end": 5704,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 5696,
											"end": 5711,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 5730,
											"end": 5734,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 5727,
											"end": 5728,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5720,
											"end": 5735,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "tag",
											"source": 6,
											"value": "94"
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5791,
											"end": 5797,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5829,
											"name": "PUSH",
											"source": 6,
											"value": "2"
										},
										{
											"begin": 5822,
											"end": 5826,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5818,
											"end": 5830,
											"name": "DIV",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5808,
											"end": 5830,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5875,
											"end": 5876,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 5869,
											"end": 5873,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5865,
											"end": 5877,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5896,
											"end": 5914,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 5952,
											"end": 5956,
											"name": "PUSH",
											"source": 6,
											"value": "7F"
										},
										{
											"begin": 5944,
											"end": 5950,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 5940,
											"end": 5957,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5930,
											"end": 5957,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "tag",
											"source": 6,
											"value": "285"
										},
										{
											"begin": 5886,
											"end": 5967,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6014,
											"end": 6016,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6012,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6003,
											"end": 6017,
											"name": "LT",
											"source": 6
										},
										{
											"begin": 5983,
											"end": 6001,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 5980,
											"end": 6018,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "217"
										},
										{
											"begin": 6033,
											"end": 6051,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "tag",
											"source": 6,
											"value": "287"
										},
										{
											"begin": 6033,
											"end": 6051,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 5977,
											"end": 6061,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5798,
											"end": 6067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 5747,
											"end": 6067,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6073,
											"end": 6253,
											"name": "tag",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6073,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6121,
											"end": 6198,
											"name": "PUSH",
											"source": 6,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6118,
											"end": 6119,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6111,
											"end": 6199,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6218,
											"end": 6222,
											"name": "PUSH",
											"source": 6,
											"value": "11"
										},
										{
											"begin": 6215,
											"end": 6216,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 6208,
											"end": 6223,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6242,
											"end": 6246,
											"name": "PUSH",
											"source": 6,
											"value": "24"
										},
										{
											"begin": 6239,
											"end": 6240,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6232,
											"end": 6247,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6453,
											"name": "tag",
											"source": 6,
											"value": "113"
										},
										{
											"begin": 6259,
											"end": 6453,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6299,
											"end": 6303,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6319,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6319,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6319,
											"end": 6339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6319,
											"end": 6339,
											"name": "tag",
											"source": 6,
											"value": "290"
										},
										{
											"begin": 6319,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6314,
											"end": 6339,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6314,
											"end": 6339,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6371,
											"end": 6372,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6373,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6353,
											"end": 6373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6353,
											"end": 6373,
											"name": "tag",
											"source": 6,
											"value": "291"
										},
										{
											"begin": 6353,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6373,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6348,
											"end": 6373,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6397,
											"end": 6398,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6394,
											"end": 6395,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6390,
											"end": 6399,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6399,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6382,
											"end": 6399,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6421,
											"end": 6422,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6415,
											"end": 6419,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6412,
											"end": 6423,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6446,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6446,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 6409,
											"end": 6446,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6426,
											"end": 6444,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "tag",
											"source": 6,
											"value": "293"
										},
										{
											"begin": 6426,
											"end": 6444,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6409,
											"end": 6446,
											"name": "tag",
											"source": 6,
											"value": "292"
										},
										{
											"begin": 6409,
											"end": 6446,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6453,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6453,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6453,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6259,
											"end": 6453,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6650,
											"name": "tag",
											"source": 6,
											"value": "119"
										},
										{
											"begin": 6459,
											"end": 6650,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6499,
											"end": 6502,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6518,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 6536,
											"end": 6537,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6538,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6518,
											"end": 6538,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6518,
											"end": 6538,
											"name": "tag",
											"source": 6,
											"value": "295"
										},
										{
											"begin": 6518,
											"end": 6538,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6513,
											"end": 6538,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6513,
											"end": 6538,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 6570,
											"end": 6571,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6572,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "209"
										},
										{
											"begin": 6552,
											"end": 6572,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6552,
											"end": 6572,
											"name": "tag",
											"source": 6,
											"value": "296"
										},
										{
											"begin": 6552,
											"end": 6572,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6572,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6547,
											"end": 6572,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6595,
											"end": 6596,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6592,
											"end": 6593,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6588,
											"end": 6597,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6597,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6581,
											"end": 6597,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6616,
											"end": 6619,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 6613,
											"end": 6614,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6610,
											"end": 6620,
											"name": "GT",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6643,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6643,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6607,
											"end": 6643,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "218"
										},
										{
											"begin": 6623,
											"end": 6641,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "tag",
											"source": 6,
											"value": "298"
										},
										{
											"begin": 6623,
											"end": 6641,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6607,
											"end": 6643,
											"name": "tag",
											"source": 6,
											"value": "297"
										},
										{
											"begin": 6607,
											"end": 6643,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6650,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6650,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6650,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6459,
											"end": 6650,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6774,
											"name": "tag",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6656,
											"end": 6774,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6743,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 6761,
											"end": 6766,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 6743,
											"end": 6767,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "206"
										},
										{
											"begin": 6743,
											"end": 6767,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6743,
											"end": 6767,
											"name": "tag",
											"source": 6,
											"value": "300"
										},
										{
											"begin": 6743,
											"end": 6767,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6738,
											"end": 6741,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6731,
											"end": 6768,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6774,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6656,
											"end": 6774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7002,
											"name": "tag",
											"source": 6,
											"value": "167"
										},
										{
											"begin": 6780,
											"end": 7002,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6873,
											"end": 6877,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6911,
											"end": 6913,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 6900,
											"end": 6909,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 6896,
											"end": 6914,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 6888,
											"end": 6914,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 6992,
											"end": 6993,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 6990,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 6977,
											"end": 6994,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 6968,
											"end": 6974,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6995,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 6924,
											"end": 6995,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 6924,
											"end": 6995,
											"name": "tag",
											"source": 6,
											"value": "302"
										},
										{
											"begin": 6924,
											"end": 6995,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7002,
											"name": "SWAP3",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7002,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7002,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 6780,
											"end": 7002,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7008,
											"end": 7450,
											"name": "tag",
											"source": 6,
											"value": "193"
										},
										{
											"begin": 7008,
											"end": 7450,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7157,
											"end": 7161,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7195,
											"end": 7197,
											"name": "PUSH",
											"source": 6,
											"value": "60"
										},
										{
											"begin": 7184,
											"end": 7193,
											"name": "DUP3",
											"source": 6
										},
										{
											"begin": 7180,
											"end": 7198,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7172,
											"end": 7198,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 7172,
											"end": 7198,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 7276,
											"end": 7277,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 7265,
											"end": 7274,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7261,
											"end": 7278,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7252,
											"end": 7258,
											"name": "DUP7",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "219"
										},
										{
											"begin": 7208,
											"end": 7279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "tag",
											"source": 6,
											"value": "304"
										},
										{
											"begin": 7208,
											"end": 7279,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 7357,
											"end": 7359,
											"name": "PUSH",
											"source": 6,
											"value": "20"
										},
										{
											"begin": 7346,
											"end": 7355,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7342,
											"end": 7360,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7333,
											"end": 7339,
											"name": "DUP6",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7361,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 7289,
											"end": 7361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7289,
											"end": 7361,
											"name": "tag",
											"source": 6,
											"value": "305"
										},
										{
											"begin": 7289,
											"end": 7361,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 7439,
											"end": 7441,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 7428,
											"end": 7437,
											"name": "DUP4",
											"source": 6
										},
										{
											"begin": 7424,
											"end": 7442,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 7415,
											"end": 7421,
											"name": "DUP5",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7443,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "214"
										},
										{
											"begin": 7371,
											"end": 7443,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7371,
											"end": 7443,
											"name": "tag",
											"source": 6,
											"value": "306"
										},
										{
											"begin": 7371,
											"end": 7443,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7008,
											"end": 7450,
											"name": "SWAP5",
											"source": 6
										},
										{
											"begin": 7008,
											"end": 7450,
											"name": "SWAP4",
											"source": 6
										},
										{
											"begin": 7008,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7008,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7008,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7008,
											"end": 7450,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 7008,
											"end": 7450,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										}
									]
								}
							},
							"sourceList": [
								"Context.sol",
								"ERC20.sol",
								"IERC20.sol",
								"IERC20Metadata.sol",
								"TRTtheSalad.sol",
								"draft-IERC6093.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"_tokenName()": "9f0c8125",
							"_tokenSymbol()": "ecf35cca",
							"_totalSupply()": "3eaaf86b",
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"burn(address,uint256)": "9dc29fac",
							"decimals()": "313ce567",
							"getBalanceOf(address)": "9b96eece",
							"getTokenName()": "862b092b",
							"getTokenSymbol()": "f1850af8",
							"getTotalSupply()": "c4e41b22",
							"mint(address,uint256)": "40c10f19",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_tokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_tokenSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"getBalanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenName\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTokenSymbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the default value returned by this function, unless it's overridden. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"TRTtheSalad.sol\":\"TRTtheSalad\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"ERC20.sol\":{\"keccak256\":\"0x21252862dd51c6d4910692dbd0ef512c6ee51f9bf5b5bea50c3d4c3e27b61407\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://421978e5236a5afd6cf06e767e8f7c5896eac304af0d7f75d216a5719f566768\",\"dweb:/ipfs/QmQaZoXhKSZspKBNuZsPFdn9uZUcuRqzqSESQngTfnoneP\"]},\"IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"TRTtheSalad.sol\":{\"keccak256\":\"0x6ac0c91819919af6256843f2b790f183f44f8608210d728d386b88fc5bce27b8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://84060dd8dd8f0123b8d50504ea186c55a33197ef4c9b0743ce0cf78fbae3efbd\",\"dweb:/ipfs/QmUUPDL58iemdGvJtkPySkyqo4os6KKxWVq5GdS4p2oHMq\"]},\"draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 48,
								"contract": "TRTtheSalad.sol:TRTtheSalad",
								"label": "_balances",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_address,t_uint256)"
							},
							{
								"astId": 54,
								"contract": "TRTtheSalad.sol:TRTtheSalad",
								"label": "_allowances",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
							},
							{
								"astId": 56,
								"contract": "TRTtheSalad.sol:TRTtheSalad",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "2",
								"type": "t_uint256"
							},
							{
								"astId": 58,
								"contract": "TRTtheSalad.sol:TRTtheSalad",
								"label": "_name",
								"offset": 0,
								"slot": "3",
								"type": "t_string_storage"
							},
							{
								"astId": 60,
								"contract": "TRTtheSalad.sol:TRTtheSalad",
								"label": "_symbol",
								"offset": 0,
								"slot": "4",
								"type": "t_string_storage"
							},
							{
								"astId": 651,
								"contract": "TRTtheSalad.sol:TRTtheSalad",
								"label": "_tokenName",
								"offset": 0,
								"slot": "5",
								"type": "t_string_storage"
							},
							{
								"astId": 653,
								"contract": "TRTtheSalad.sol:TRTtheSalad",
								"label": "_tokenSymbol",
								"offset": 0,
								"slot": "6",
								"type": "t_string_storage"
							},
							{
								"astId": 655,
								"contract": "TRTtheSalad.sol:TRTtheSalad",
								"label": "_totalSupply",
								"offset": 0,
								"slot": "7",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_mapping(t_address,t_uint256))": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => mapping(address => uint256))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_uint256)"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"draft-IERC6093.sol": {
				"IERC1155Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC1155InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "idsLength",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "valuesLength",
									"type": "uint256"
								}
							],
							"name": "ERC1155InvalidArrayLength",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC1155InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC1155MissingApprovalForAll",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.",
						"errors": {
							"ERC1155InsufficientBalance(address,uint256,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC1155InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC1155InvalidArrayLength(uint256,uint256)": [
								{
									"details": "Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.",
									"params": {
										"idsLength": "Length of the array of token identifiers",
										"valuesLength": "Length of the array of token amounts"
									}
								}
							],
							"ERC1155InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC1155InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC1155InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC1155MissingApprovalForAll(address,address)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"owner": "Address of the current owner of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC1155InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"idsLength\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"valuesLength\",\"type\":\"uint256\"}],\"name\":\"ERC1155InvalidArrayLength\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC1155InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC1155MissingApprovalForAll\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC1155 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens.\",\"errors\":{\"ERC1155InsufficientBalance(address,uint256,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC1155InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC1155InvalidArrayLength(uint256,uint256)\":[{\"details\":\"Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation. Used in batch transfers.\",\"params\":{\"idsLength\":\"Length of the array of token identifiers\",\"valuesLength\":\"Length of the array of token amounts\"}}],\"ERC1155InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC1155InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC1155InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC1155MissingApprovalForAll(address,address)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"owner\":\"Address of the current owner of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"draft-IERC6093.sol\":\"IERC1155Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC20Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "allowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "ERC20InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC20InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "ERC20InvalidSpender",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.",
						"errors": {
							"ERC20InsufficientAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failure with the `spender`’s `allowance`. Used in transfers.",
									"params": {
										"allowance": "Amount of tokens a `spender` is allowed to operate with.",
										"needed": "Minimum amount required to perform a transfer.",
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC20InsufficientBalance(address,uint256,uint256)": [
								{
									"details": "Indicates an error related to the current `balance` of a `sender`. Used in transfers.",
									"params": {
										"balance": "Current balance for the interacting account.",
										"needed": "Minimum amount required to perform a transfer.",
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC20InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC20InvalidSpender(address)": [
								{
									"details": "Indicates a failure with the `spender` to be approved. Used in approvals.",
									"params": {
										"spender": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"allowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"ERC20InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC20InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"ERC20InvalidSpender\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC20 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens.\",\"errors\":{\"ERC20InsufficientAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failure with the `spender`\\u2019s `allowance`. Used in transfers.\",\"params\":{\"allowance\":\"Amount of tokens a `spender` is allowed to operate with.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC20InsufficientBalance(address,uint256,uint256)\":[{\"details\":\"Indicates an error related to the current `balance` of a `sender`. Used in transfers.\",\"params\":{\"balance\":\"Current balance for the interacting account.\",\"needed\":\"Minimum amount required to perform a transfer.\",\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC20InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC20InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC20InvalidSpender(address)\":[{\"details\":\"Indicates a failure with the `spender` to be approved. Used in approvals.\",\"params\":{\"spender\":\"Address that may be allowed to operate on tokens without being their owner.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"draft-IERC6093.sol\":\"IERC20Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"IERC721Errors": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721IncorrectOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721InsufficientApproval",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "approver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidApprover",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOperator",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "ERC721InvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "receiver",
									"type": "address"
								}
							],
							"name": "ERC721InvalidReceiver",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "ERC721InvalidSender",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ERC721NonexistentToken",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.",
						"errors": {
							"ERC721IncorrectOwner(address,uint256,address)": [
								{
									"details": "Indicates an error related to the ownership over a particular token. Used in transfers.",
									"params": {
										"owner": "Address of the current owner of a token.",
										"sender": "Address whose tokens are being transferred.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InsufficientApproval(address,uint256)": [
								{
									"details": "Indicates a failure with the `operator`’s approval. Used in transfers.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner.",
										"tokenId": "Identifier number of a token."
									}
								}
							],
							"ERC721InvalidApprover(address)": [
								{
									"details": "Indicates a failure with the `approver` of a token to be approved. Used in approvals.",
									"params": {
										"approver": "Address initiating an approval operation."
									}
								}
							],
							"ERC721InvalidOperator(address)": [
								{
									"details": "Indicates a failure with the `operator` to be approved. Used in approvals.",
									"params": {
										"operator": "Address that may be allowed to operate on tokens without being their owner."
									}
								}
							],
							"ERC721InvalidOwner(address)": [
								{
									"details": "Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.",
									"params": {
										"owner": "Address of the current owner of a token."
									}
								}
							],
							"ERC721InvalidReceiver(address)": [
								{
									"details": "Indicates a failure with the token `receiver`. Used in transfers.",
									"params": {
										"receiver": "Address to which tokens are being transferred."
									}
								}
							],
							"ERC721InvalidSender(address)": [
								{
									"details": "Indicates a failure with the token `sender`. Used in transfers.",
									"params": {
										"sender": "Address whose tokens are being transferred."
									}
								}
							],
							"ERC721NonexistentToken(uint256)": [
								{
									"details": "Indicates a `tokenId` whose `owner` is the zero address.",
									"params": {
										"tokenId": "Identifier number of a token."
									}
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721IncorrectOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721InsufficientApproval\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidApprover\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOperator\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"ERC721InvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"}],\"name\":\"ERC721InvalidReceiver\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"ERC721InvalidSender\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ERC721NonexistentToken\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard ERC721 Errors Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens.\",\"errors\":{\"ERC721IncorrectOwner(address,uint256,address)\":[{\"details\":\"Indicates an error related to the ownership over a particular token. Used in transfers.\",\"params\":{\"owner\":\"Address of the current owner of a token.\",\"sender\":\"Address whose tokens are being transferred.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InsufficientApproval(address,uint256)\":[{\"details\":\"Indicates a failure with the `operator`\\u2019s approval. Used in transfers.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\",\"tokenId\":\"Identifier number of a token.\"}}],\"ERC721InvalidApprover(address)\":[{\"details\":\"Indicates a failure with the `approver` of a token to be approved. Used in approvals.\",\"params\":{\"approver\":\"Address initiating an approval operation.\"}}],\"ERC721InvalidOperator(address)\":[{\"details\":\"Indicates a failure with the `operator` to be approved. Used in approvals.\",\"params\":{\"operator\":\"Address that may be allowed to operate on tokens without being their owner.\"}}],\"ERC721InvalidOwner(address)\":[{\"details\":\"Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20. Used in balance queries.\",\"params\":{\"owner\":\"Address of the current owner of a token.\"}}],\"ERC721InvalidReceiver(address)\":[{\"details\":\"Indicates a failure with the token `receiver`. Used in transfers.\",\"params\":{\"receiver\":\"Address to which tokens are being transferred.\"}}],\"ERC721InvalidSender(address)\":[{\"details\":\"Indicates a failure with the token `sender`. Used in transfers.\",\"params\":{\"sender\":\"Address whose tokens are being transferred.\"}}],\"ERC721NonexistentToken(uint256)\":[{\"details\":\"Indicates a `tokenId` whose `owner` is the zero address.\",\"params\":{\"tokenId\":\"Identifier number of a token.\"}}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"draft-IERC6093.sol\":\"IERC721Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"Context.sol": {
				"ast": {
					"absolutePath": "Context.sol",
					"exportedSymbols": {
						"Context": [
							29
						]
					},
					"id": 30,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:0",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 29,
							"linearizedBaseContracts": [
								29
							],
							"name": "Context",
							"nameLocation": "642:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 10,
										"nodeType": "Block",
										"src": "718:34:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 7,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 8,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:0",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 6,
												"id": 9,
												"nodeType": "Return",
												"src": "728:17:0"
											}
										]
									},
									"id": 11,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:0"
									},
									"returnParameters": {
										"id": 6,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 11,
												"src": "709:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:0"
									},
									"scope": 29,
									"src": "656:96:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "825:32:0",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 16,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:0",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 15,
												"id": 18,
												"nodeType": "Return",
												"src": "835:15:0"
											}
										]
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:0"
									},
									"returnParameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "809:14:0",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 13,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:0"
									},
									"scope": 29,
									"src": "758:99:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 27,
										"nodeType": "Block",
										"src": "935:25:0",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 24,
												"id": 26,
												"nodeType": "Return",
												"src": "945:8:0"
											}
										]
									},
									"id": 28,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 21,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:0"
									},
									"returnParameters": {
										"id": 24,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 28,
												"src": "926:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:0"
									},
									"scope": 29,
									"src": "863:97:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 30,
							"src": "624:338:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:0"
				},
				"id": 0
			},
			"ERC20.sol": {
				"ast": {
					"absolutePath": "ERC20.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"ERC20": [
							540
						],
						"IERC1155Errors": [
							965
						],
						"IERC20": [
							618
						],
						"IERC20Errors": [
							870
						],
						"IERC20Metadata": [
							644
						],
						"IERC721Errors": [
							918
						]
					},
					"id": 541,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 31,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "105:24:1"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "./IERC20.sol",
							"id": 32,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 541,
							"sourceUnit": 619,
							"src": "131:23:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "IERC20Metadata.sol",
							"file": "./IERC20Metadata.sol",
							"id": 33,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 541,
							"sourceUnit": 645,
							"src": "155:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "Context.sol",
							"file": "./Context.sol",
							"id": 34,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 541,
							"sourceUnit": 30,
							"src": "187:24:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "draft-IERC6093.sol",
							"file": "./draft-IERC6093.sol",
							"id": 35,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 541,
							"sourceUnit": 966,
							"src": "212:31:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 37,
										"name": "Context",
										"nameLocations": [
											"1325:7:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 29,
										"src": "1325:7:1"
									},
									"id": 38,
									"nodeType": "InheritanceSpecifier",
									"src": "1325:7:1"
								},
								{
									"baseName": {
										"id": 39,
										"name": "IERC20",
										"nameLocations": [
											"1334:6:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 618,
										"src": "1334:6:1"
									},
									"id": 40,
									"nodeType": "InheritanceSpecifier",
									"src": "1334:6:1"
								},
								{
									"baseName": {
										"id": 41,
										"name": "IERC20Metadata",
										"nameLocations": [
											"1342:14:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 644,
										"src": "1342:14:1"
									},
									"id": 42,
									"nodeType": "InheritanceSpecifier",
									"src": "1342:14:1"
								},
								{
									"baseName": {
										"id": 43,
										"name": "IERC20Errors",
										"nameLocations": [
											"1358:12:1"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 870,
										"src": "1358:12:1"
									},
									"id": 44,
									"nodeType": "InheritanceSpecifier",
									"src": "1358:12:1"
								}
							],
							"canonicalName": "ERC20",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 36,
								"nodeType": "StructuredDocumentation",
								"src": "245:1052:1",
								"text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n TIP: For a detailed writeup see our guide\n https://forum.openzeppelin.com/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n The default value of {decimals} is 18. To change this, you should override\n this function so it returns a different value.\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification."
							},
							"fullyImplemented": true,
							"id": 540,
							"linearizedBaseContracts": [
								540,
								870,
								644,
								618,
								29
							],
							"name": "ERC20",
							"nameLocation": "1316:5:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 48,
									"mutability": "mutable",
									"name": "_balances",
									"nameLocation": "1421:9:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "1377:53:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 47,
										"keyName": "account",
										"keyNameLocation": "1393:7:1",
										"keyType": {
											"id": 45,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1385:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1377:35:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 46,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1404:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 54,
									"mutability": "mutable",
									"name": "_allowances",
									"nameLocation": "1509:11:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "1437:83:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
										"typeString": "mapping(address => mapping(address => uint256))"
									},
									"typeName": {
										"id": 53,
										"keyName": "account",
										"keyNameLocation": "1453:7:1",
										"keyType": {
											"id": 49,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1445:7:1",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1437:63:1",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
											"typeString": "mapping(address => mapping(address => uint256))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 52,
											"keyName": "spender",
											"keyNameLocation": "1480:7:1",
											"keyType": {
												"id": 50,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1472:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1464:35:1",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 51,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1491:7:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 56,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "1543:12:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "1527:28:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 55,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1527:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 58,
									"mutability": "mutable",
									"name": "_name",
									"nameLocation": "1577:5:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "1562:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 57,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1562:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 60,
									"mutability": "mutable",
									"name": "_symbol",
									"nameLocation": "1603:7:1",
									"nodeType": "VariableDeclaration",
									"scope": 540,
									"src": "1588:22:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 59,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1588:6:1",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 76,
										"nodeType": "Block",
										"src": "1849:57:1",
										"statements": [
											{
												"expression": {
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 68,
														"name": "_name",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 58,
														"src": "1859:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 69,
														"name": "name_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "1867:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1859:13:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 71,
												"nodeType": "ExpressionStatement",
												"src": "1859:13:1"
											},
											{
												"expression": {
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 72,
														"name": "_symbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 60,
														"src": "1882:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 73,
														"name": "symbol_",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 65,
														"src": "1892:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"src": "1882:17:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 75,
												"nodeType": "ExpressionStatement",
												"src": "1882:17:1"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1617:171:1",
										"text": " @dev Sets the values for {name} and {symbol}.\n All two of these values are immutable: they can only be set once during\n construction."
									},
									"id": 77,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "name_",
												"nameLocation": "1819:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1805:19:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 62,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1805:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "symbol_",
												"nameLocation": "1840:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 77,
												"src": "1826:21:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 64,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1826:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1804:44:1"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1849:0:1"
									},
									"scope": 540,
									"src": "1793:113:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										631
									],
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "2031:29:1",
										"statements": [
											{
												"expression": {
													"id": 83,
													"name": "_name",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 58,
													"src": "2048:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 82,
												"id": 84,
												"nodeType": "Return",
												"src": "2041:12:1"
											}
										]
									},
									"documentation": {
										"id": 78,
										"nodeType": "StructuredDocumentation",
										"src": "1912:54:1",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "1980:4:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 79,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1984:2:1"
									},
									"returnParameters": {
										"id": 82,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 81,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "2016:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 80,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2016:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2015:15:1"
									},
									"scope": 540,
									"src": "1971:89:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										637
									],
									"body": {
										"id": 94,
										"nodeType": "Block",
										"src": "2235:31:1",
										"statements": [
											{
												"expression": {
													"id": 92,
													"name": "_symbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 60,
													"src": "2252:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 91,
												"id": 93,
												"nodeType": "Return",
												"src": "2245:14:1"
											}
										]
									},
									"documentation": {
										"id": 87,
										"nodeType": "StructuredDocumentation",
										"src": "2066:102:1",
										"text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
									},
									"functionSelector": "95d89b41",
									"id": 95,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "2182:6:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 88,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2188:2:1"
									},
									"returnParameters": {
										"id": 91,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 90,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 95,
												"src": "2220:13:1",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 89,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2220:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2219:15:1"
									},
									"scope": 540,
									"src": "2173:93:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										643
									],
									"body": {
										"id": 103,
										"nodeType": "Block",
										"src": "2955:26:1",
										"statements": [
											{
												"expression": {
													"hexValue": "3138",
													"id": 101,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2972:2:1",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_18_by_1",
														"typeString": "int_const 18"
													},
													"value": "18"
												},
												"functionReturnParameters": 100,
												"id": 102,
												"nodeType": "Return",
												"src": "2965:9:1"
											}
										]
									},
									"documentation": {
										"id": 96,
										"nodeType": "StructuredDocumentation",
										"src": "2272:622:1",
										"text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the default value returned by this function, unless\n it's overridden.\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
									},
									"functionSelector": "313ce567",
									"id": 104,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "2908:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2916:2:1"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2948:5:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 98,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "2948:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2947:7:1"
									},
									"scope": 540,
									"src": "2899:82:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										567
									],
									"body": {
										"id": 112,
										"nodeType": "Block",
										"src": "3102:36:1",
										"statements": [
											{
												"expression": {
													"id": 110,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 56,
													"src": "3119:12:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 109,
												"id": 111,
												"nodeType": "Return",
												"src": "3112:19:1"
											}
										]
									},
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2987:49:1",
										"text": " @dev See {IERC20-totalSupply}."
									},
									"functionSelector": "18160ddd",
									"id": 113,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "3050:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3061:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 113,
												"src": "3093:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3092:9:1"
									},
									"scope": 540,
									"src": "3041:97:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										575
									],
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "3270:42:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 121,
														"name": "_balances",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 48,
														"src": "3287:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 123,
													"indexExpression": {
														"id": 122,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "3297:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3287:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 120,
												"id": 124,
												"nodeType": "Return",
												"src": "3280:25:1"
											}
										]
									},
									"documentation": {
										"id": 114,
										"nodeType": "StructuredDocumentation",
										"src": "3144:47:1",
										"text": " @dev See {IERC20-balanceOf}."
									},
									"functionSelector": "70a08231",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "3205:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 116,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3223:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3215:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3215:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3214:17:1"
									},
									"returnParameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "3261:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 118,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3261:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3260:9:1"
									},
									"scope": 540,
									"src": "3196:116:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										585
									],
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "3582:103:1",
										"statements": [
											{
												"assignments": [
													137
												],
												"declarations": [
													{
														"constant": false,
														"id": 137,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "3600:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 149,
														"src": "3592:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 136,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "3592:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 140,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 138,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "3608:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3608:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3592:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 142,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "3640:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 143,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3647:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 144,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 131,
															"src": "3651:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 141,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "3630:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3630:27:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 146,
												"nodeType": "ExpressionStatement",
												"src": "3630:27:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 147,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3674:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 135,
												"id": 148,
												"nodeType": "Return",
												"src": "3667:11:1"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "3318:184:1",
										"text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `value`."
									},
									"functionSelector": "a9059cbb",
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "3516:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3533:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3525:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3525:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3545:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3537:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 130,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3537:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3524:27:1"
									},
									"returnParameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "3576:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 133,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3576:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3575:6:1"
									},
									"scope": 540,
									"src": "3507:178:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										595
									],
									"body": {
										"id": 166,
										"nodeType": "Block",
										"src": "3832:51:1",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"baseExpression": {
															"id": 160,
															"name": "_allowances",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 54,
															"src": "3849:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																"typeString": "mapping(address => mapping(address => uint256))"
															}
														},
														"id": 162,
														"indexExpression": {
															"id": 161,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "3861:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "3849:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
															"typeString": "mapping(address => uint256)"
														}
													},
													"id": 164,
													"indexExpression": {
														"id": 163,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 155,
														"src": "3868:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3849:27:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 159,
												"id": 165,
												"nodeType": "Return",
												"src": "3842:34:1"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "3691:47:1",
										"text": " @dev See {IERC20-allowance}."
									},
									"functionSelector": "dd62ed3e",
									"id": 167,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "3752:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 156,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3770:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3762:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3762:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3785:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3777:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3777:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:32:1"
									},
									"returnParameters": {
										"id": 159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 158,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 167,
												"src": "3823:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3823:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3822:9:1"
									},
									"scope": 540,
									"src": "3743:140:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										605
									],
									"body": {
										"id": 190,
										"nodeType": "Block",
										"src": "4269:107:1",
										"statements": [
											{
												"assignments": [
													178
												],
												"declarations": [
													{
														"constant": false,
														"id": 178,
														"mutability": "mutable",
														"name": "owner",
														"nameLocation": "4287:5:1",
														"nodeType": "VariableDeclaration",
														"scope": 190,
														"src": "4279:13:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 177,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4279:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 181,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 179,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "4295:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4295:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:28:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 183,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 178,
															"src": "4326:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 184,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 170,
															"src": "4333:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 185,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 172,
															"src": "4342:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 182,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															431,
															491
														],
														"referencedDeclaration": 431,
														"src": "4317:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4317:31:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 187,
												"nodeType": "ExpressionStatement",
												"src": "4317:31:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "4365:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 176,
												"id": 189,
												"nodeType": "Return",
												"src": "4358:11:1"
											}
										]
									},
									"documentation": {
										"id": 168,
										"nodeType": "StructuredDocumentation",
										"src": "3889:296:1",
										"text": " @dev See {IERC20-approve}.\n NOTE: If `value` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
									},
									"functionSelector": "095ea7b3",
									"id": 191,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4199:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 170,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "4215:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4207:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4207:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4232:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4224:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4224:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4206:32:1"
									},
									"returnParameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 191,
												"src": "4263:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 174,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4263:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4262:6:1"
									},
									"scope": 540,
									"src": "4190:186:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										617
									],
									"body": {
										"id": 222,
										"nodeType": "Block",
										"src": "5029:151:1",
										"statements": [
											{
												"assignments": [
													204
												],
												"declarations": [
													{
														"constant": false,
														"id": 204,
														"mutability": "mutable",
														"name": "spender",
														"nameLocation": "5047:7:1",
														"nodeType": "VariableDeclaration",
														"scope": 222,
														"src": "5039:15:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 203,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5039:7:1",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 207,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 205,
														"name": "_msgSender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "5057:10:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
															"typeString": "function () view returns (address)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5057:12:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5039:30:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 209,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5095:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 210,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 204,
															"src": "5101:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 211,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5110:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 208,
														"name": "_spendAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 539,
														"src": "5079:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5079:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 213,
												"nodeType": "ExpressionStatement",
												"src": "5079:37:1"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 215,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 194,
															"src": "5136:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 216,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 196,
															"src": "5142:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 217,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 198,
															"src": "5146:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 214,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "5126:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 218,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5126:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 219,
												"nodeType": "ExpressionStatement",
												"src": "5126:26:1"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "5169:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 202,
												"id": 221,
												"nodeType": "Return",
												"src": "5162:11:1"
											}
										]
									},
									"documentation": {
										"id": 192,
										"nodeType": "StructuredDocumentation",
										"src": "4382:549:1",
										"text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `value`.\n - the caller must have allowance for ``from``'s tokens of at least\n `value`."
									},
									"functionSelector": "23b872dd",
									"id": 223,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "4945:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 199,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 194,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "4966:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "4958:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4958:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 196,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4980:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "4972:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4972:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 198,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4992:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "4984:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 197,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4984:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4957:41:1"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 223,
												"src": "5023:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 200,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5023:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5022:6:1"
									},
									"scope": 540,
									"src": "4936:244:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 269,
										"nodeType": "Block",
										"src": "5622:231:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 233,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 226,
														"src": "5636:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 236,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5652:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 235,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5644:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 234,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5644:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 237,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5644:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5636:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 247,
												"nodeType": "IfStatement",
												"src": "5632:86:1",
												"trueBody": {
													"id": 246,
													"nodeType": "Block",
													"src": "5656:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 242,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5704:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 241,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5696:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 240,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5696:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 243,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5696:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 239,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "5677:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 244,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5677:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 245,
															"nodeType": "RevertStatement",
															"src": "5670:37:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 248,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 228,
														"src": "5731:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 251,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5745:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5737:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 249,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5737:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5737:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5731:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 262,
												"nodeType": "IfStatement",
												"src": "5727:86:1",
												"trueBody": {
													"id": 261,
													"nodeType": "Block",
													"src": "5749:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 257,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "5799:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 256,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "5791:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 255,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "5791:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 258,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5791:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 254,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "5770:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 259,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5770:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 260,
															"nodeType": "RevertStatement",
															"src": "5763:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 264,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 226,
															"src": "5830:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 265,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 228,
															"src": "5836:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 266,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "5840:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 263,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "5822:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5822:24:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 268,
												"nodeType": "ExpressionStatement",
												"src": "5822:24:1"
											}
										]
									},
									"documentation": {
										"id": 224,
										"nodeType": "StructuredDocumentation",
										"src": "5186:362:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transfer",
									"nameLocation": "5562:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 226,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "5580:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5572:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 225,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 228,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "5594:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5586:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 227,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5586:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5606:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 270,
												"src": "5598:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 229,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5598:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5571:41:1"
									},
									"returnParameters": {
										"id": 232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5622:0:1"
									},
									"scope": 540,
									"src": "5553:300:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 346,
										"nodeType": "Block",
										"src": "6243:1032:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 285,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 280,
														"name": "from",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "6257:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 283,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6273:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 282,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6265:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 281,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6265:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 284,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6265:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6257:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 317,
													"nodeType": "Block",
													"src": "6431:362:1",
													"statements": [
														{
															"assignments": [
																292
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 292,
																	"mutability": "mutable",
																	"name": "fromBalance",
																	"nameLocation": "6453:11:1",
																	"nodeType": "VariableDeclaration",
																	"scope": 317,
																	"src": "6445:19:1",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 291,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "6445:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 296,
															"initialValue": {
																"baseExpression": {
																	"id": 293,
																	"name": "_balances",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 48,
																	"src": "6467:9:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 295,
																"indexExpression": {
																	"id": 294,
																	"name": "from",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 273,
																	"src": "6477:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6467:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "6445:37:1"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 297,
																	"name": "fromBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 292,
																	"src": "6500:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 298,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "6514:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6500:19:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 307,
															"nodeType": "IfStatement",
															"src": "6496:115:1",
															"trueBody": {
																"id": 306,
																"nodeType": "Block",
																"src": "6521:90:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 301,
																					"name": "from",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 273,
																					"src": "6571:4:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 302,
																					"name": "fromBalance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 292,
																					"src": "6577:11:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 303,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 277,
																					"src": "6590:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 300,
																				"name": "ERC20InsufficientBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 840,
																				"src": "6546:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 304,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "6546:50:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 305,
																		"nodeType": "RevertStatement",
																		"src": "6539:57:1"
																	}
																]
															}
														},
														{
															"id": 316,
															"nodeType": "UncheckedBlock",
															"src": "6624:159:1",
															"statements": [
																{
																	"expression": {
																		"id": 314,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 308,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 48,
																				"src": "6731:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 310,
																			"indexExpression": {
																				"id": 309,
																				"name": "from",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 273,
																				"src": "6741:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "6731:15:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 313,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 311,
																				"name": "fromBalance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 292,
																				"src": "6749:11:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"id": 312,
																				"name": "value",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 277,
																				"src": "6763:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6749:19:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6731:37:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 315,
																	"nodeType": "ExpressionStatement",
																	"src": "6731:37:1"
																}
															]
														}
													]
												},
												"id": 318,
												"nodeType": "IfStatement",
												"src": "6253:540:1",
												"trueBody": {
													"id": 290,
													"nodeType": "Block",
													"src": "6277:148:1",
													"statements": [
														{
															"expression": {
																"id": 288,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 286,
																	"name": "_totalSupply",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 56,
																	"src": "6393:12:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 287,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 277,
																	"src": "6409:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6393:21:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 289,
															"nodeType": "ExpressionStatement",
															"src": "6393:21:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 319,
														"name": "to",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 275,
														"src": "6807:2:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 322,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6821:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 321,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "6813:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 320,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "6813:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6813:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6807:16:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 338,
													"nodeType": "Block",
													"src": "7022:206:1",
													"statements": [
														{
															"id": 337,
															"nodeType": "UncheckedBlock",
															"src": "7036:182:1",
															"statements": [
																{
																	"expression": {
																		"id": 335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"baseExpression": {
																				"id": 331,
																				"name": "_balances",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 48,
																				"src": "7181:9:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																					"typeString": "mapping(address => uint256)"
																				}
																			},
																			"id": 333,
																			"indexExpression": {
																				"id": 332,
																				"name": "to",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 275,
																				"src": "7191:2:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": true,
																			"nodeType": "IndexAccess",
																			"src": "7181:13:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"id": 334,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 277,
																			"src": "7198:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "7181:22:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 336,
																	"nodeType": "ExpressionStatement",
																	"src": "7181:22:1"
																}
															]
														}
													]
												},
												"id": 339,
												"nodeType": "IfStatement",
												"src": "6803:425:1",
												"trueBody": {
													"id": 330,
													"nodeType": "Block",
													"src": "6825:191:1",
													"statements": [
														{
															"id": 329,
															"nodeType": "UncheckedBlock",
															"src": "6839:167:1",
															"statements": [
																{
																	"expression": {
																		"id": 327,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 325,
																			"name": "_totalSupply",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 56,
																			"src": "6970:12:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "-=",
																		"rightHandSide": {
																			"id": 326,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 277,
																			"src": "6986:5:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6970:21:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 328,
																	"nodeType": "ExpressionStatement",
																	"src": "6970:21:1"
																}
															]
														}
													]
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 341,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 273,
															"src": "7252:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 342,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 275,
															"src": "7258:2:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 343,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 277,
															"src": "7262:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 340,
														"name": "Transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 552,
														"src": "7243:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7243:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 345,
												"nodeType": "EmitStatement",
												"src": "7238:30:1"
											}
										]
									},
									"documentation": {
										"id": 271,
										"nodeType": "StructuredDocumentation",
										"src": "5859:304:1",
										"text": " @dev Transfers a `value` amount of tokens from `from` to `to`, or alternatively mints (or burns) if `from`\n (or `to`) is the zero address. All customizations to transfers, mints, and burns should be done by overriding\n this function.\n Emits a {Transfer} event."
									},
									"id": 347,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_update",
									"nameLocation": "6177:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "6193:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "6185:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6185:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "6207:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "6199:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6199:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6219:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 347,
												"src": "6211:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6211:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6184:41:1"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6243:0:1"
									},
									"scope": 540,
									"src": "6168:1107:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 379,
										"nodeType": "Block",
										"src": "7674:152:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 360,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 355,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 350,
														"src": "7688:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 358,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7707:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 357,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "7699:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 356,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "7699:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 359,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7699:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "7688:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 369,
												"nodeType": "IfStatement",
												"src": "7684:91:1",
												"trueBody": {
													"id": 368,
													"nodeType": "Block",
													"src": "7711:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 364,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "7761:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 363,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "7753:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 362,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "7753:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 365,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7753:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 361,
																	"name": "ERC20InvalidReceiver",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 850,
																	"src": "7732:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 366,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7732:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 367,
															"nodeType": "RevertStatement",
															"src": "7725:39:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 373,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7800:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 372,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7792:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 371,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7792:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 374,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7792:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 375,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 350,
															"src": "7804:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 376,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 352,
															"src": "7813:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 370,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "7784:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7784:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 378,
												"nodeType": "ExpressionStatement",
												"src": "7784:35:1"
											}
										]
									},
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "7281:332:1",
										"text": " @dev Creates a `value` amount of tokens and assigns them to `account`, by transferring it from address(0).\n Relies on the `_update` mechanism\n Emits a {Transfer} event with `from` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead."
									},
									"id": 380,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_mint",
									"nameLocation": "7627:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 353,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7641:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "7633:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7633:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 352,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7658:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 380,
												"src": "7650:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 351,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7650:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7632:32:1"
									},
									"returnParameters": {
										"id": 354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7674:0:1"
									},
									"scope": 540,
									"src": "7618:208:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 412,
										"nodeType": "Block",
										"src": "8200:150:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 388,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 383,
														"src": "8214:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 391,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8233:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 390,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "8225:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 389,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "8225:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8225:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8214:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 402,
												"nodeType": "IfStatement",
												"src": "8210:89:1",
												"trueBody": {
													"id": 401,
													"nodeType": "Block",
													"src": "8237:62:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 397,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "8285:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 396,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "8277:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 395,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "8277:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 398,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8277:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 394,
																	"name": "ERC20InvalidSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 845,
																	"src": "8258:18:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 399,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8258:30:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 400,
															"nodeType": "RevertStatement",
															"src": "8251:37:1"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 404,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 383,
															"src": "8316:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8333:1:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 406,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8325:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 405,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8325:7:1",
																	"typeDescriptions": {}
																}
															},
															"id": 408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8325:10:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 409,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 385,
															"src": "8337:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 403,
														"name": "_update",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 347,
														"src": "8308:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8308:35:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 411,
												"nodeType": "ExpressionStatement",
												"src": "8308:35:1"
											}
										]
									},
									"documentation": {
										"id": 381,
										"nodeType": "StructuredDocumentation",
										"src": "7832:307:1",
										"text": " @dev Destroys a `value` amount of tokens from `account`, lowering the total supply.\n Relies on the `_update` mechanism.\n Emits a {Transfer} event with `to` set to the zero address.\n NOTE: This function is not virtual, {_update} should be overridden instead"
									},
									"id": 413,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_burn",
									"nameLocation": "8153:5:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 383,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "8167:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "8159:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8159:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8184:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 413,
												"src": "8176:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 384,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8176:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8158:32:1"
									},
									"returnParameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8200:0:1"
									},
									"scope": 540,
									"src": "8144:206:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 430,
										"nodeType": "Block",
										"src": "8960:54:1",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 424,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "8979:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 425,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 418,
															"src": "8986:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 426,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 420,
															"src": "8995:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "74727565",
															"id": 427,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "bool",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "9002:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"value": "true"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 423,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															431,
															491
														],
														"referencedDeclaration": 491,
														"src": "8970:8:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
															"typeString": "function (address,address,uint256,bool)"
														}
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8970:37:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 429,
												"nodeType": "ExpressionStatement",
												"src": "8970:37:1"
											}
										]
									},
									"documentation": {
										"id": 414,
										"nodeType": "StructuredDocumentation",
										"src": "8356:525:1",
										"text": " @dev Sets `value` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address.\n Overrides to this logic should be done to the variant with an additional `bool emitEvent` argument."
									},
									"id": 431,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "8895:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 416,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "8912:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "8904:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 415,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8904:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 418,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "8927:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "8919:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 417,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8919:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 420,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8944:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 431,
												"src": "8936:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8936:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8903:47:1"
									},
									"returnParameters": {
										"id": 422,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8960:0:1"
									},
									"scope": 540,
									"src": "8886:128:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 490,
										"nodeType": "Block",
										"src": "9944:334:1",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 443,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 434,
														"src": "9958:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 446,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "9975:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 445,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "9967:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 444,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "9967:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "9967:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "9958:19:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 457,
												"nodeType": "IfStatement",
												"src": "9954:89:1",
												"trueBody": {
													"id": 456,
													"nodeType": "Block",
													"src": "9979:64:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 452,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10029:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 451,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10021:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 450,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10021:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10021:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 449,
																	"name": "ERC20InvalidApprover",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 864,
																	"src": "10000:20:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 454,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10000:32:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 455,
															"nodeType": "RevertStatement",
															"src": "9993:39:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 463,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 458,
														"name": "spender",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 436,
														"src": "10056:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10075:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 460,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10067:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 459,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10067:7:1",
																"typeDescriptions": {}
															}
														},
														"id": 462,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10067:10:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10056:21:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 472,
												"nodeType": "IfStatement",
												"src": "10052:90:1",
												"trueBody": {
													"id": 471,
													"nodeType": "Block",
													"src": "10079:63:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 467,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "10128:1:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 466,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "10120:7:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 465,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "10120:7:1",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 468,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10120:10:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 464,
																	"name": "ERC20InvalidSpender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 869,
																	"src": "10100:19:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 469,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10100:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 470,
															"nodeType": "RevertStatement",
															"src": "10093:38:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 473,
																"name": "_allowances",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 54,
																"src": "10151:11:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
																	"typeString": "mapping(address => mapping(address => uint256))"
																}
															},
															"id": 476,
															"indexExpression": {
																"id": 474,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 434,
																"src": "10163:5:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "10151:18:1",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 477,
														"indexExpression": {
															"id": 475,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 436,
															"src": "10170:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "10151:27:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 478,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 438,
														"src": "10181:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10151:35:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 480,
												"nodeType": "ExpressionStatement",
												"src": "10151:35:1"
											},
											{
												"condition": {
													"id": 481,
													"name": "emitEvent",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 440,
													"src": "10200:9:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 489,
												"nodeType": "IfStatement",
												"src": "10196:76:1",
												"trueBody": {
													"id": 488,
													"nodeType": "Block",
													"src": "10211:61:1",
													"statements": [
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 483,
																		"name": "owner",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 434,
																		"src": "10239:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 484,
																		"name": "spender",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 436,
																		"src": "10246:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 485,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 438,
																		"src": "10255:5:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 482,
																	"name": "Approval",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 561,
																	"src": "10230:8:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
																		"typeString": "function (address,address,uint256)"
																	}
																},
																"id": 486,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10230:31:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 487,
															"nodeType": "EmitStatement",
															"src": "10225:36:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 432,
										"nodeType": "StructuredDocumentation",
										"src": "9020:821:1",
										"text": " @dev Variant of {_approve} with an optional flag to enable or disable the {Approval} event.\n By default (when calling {_approve}) the flag is set to true. On the other hand, approval changes made by\n `_spendAllowance` during the `transferFrom` operation set the flag to false. This saves gas by not emitting any\n `Approval` event during `transferFrom` operations.\n Anyone who wishes to continue emitting `Approval` events on the`transferFrom` operation can force the flag to\n true using the following override:\n ```\n function _approve(address owner, address spender, uint256 value, bool) internal virtual override {\n     super._approve(owner, spender, value, true);\n }\n ```\n Requirements are the same as {_approve}."
									},
									"id": 491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_approve",
									"nameLocation": "9855:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "9872:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "9864:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 433,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9864:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 436,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "9887:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "9879:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 435,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9879:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9904:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "9896:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9896:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "emitEvent",
												"nameLocation": "9916:9:1",
												"nodeType": "VariableDeclaration",
												"scope": 491,
												"src": "9911:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 439,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "9911:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9863:63:1"
									},
									"returnParameters": {
										"id": 442,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9944:0:1"
									},
									"scope": 540,
									"src": "9846:432:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 538,
										"nodeType": "Block",
										"src": "10649:388:1",
										"statements": [
											{
												"assignments": [
													502
												],
												"declarations": [
													{
														"constant": false,
														"id": 502,
														"mutability": "mutable",
														"name": "currentAllowance",
														"nameLocation": "10667:16:1",
														"nodeType": "VariableDeclaration",
														"scope": 538,
														"src": "10659:24:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 501,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10659:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 507,
												"initialValue": {
													"arguments": [
														{
															"id": 504,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 494,
															"src": "10696:5:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 505,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 496,
															"src": "10703:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 503,
														"name": "allowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 167,
														"src": "10686:9:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view returns (uint256)"
														}
													},
													"id": 506,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10686:25:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10659:52:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 508,
														"name": "currentAllowance",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 502,
														"src": "10725:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 511,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10750:7:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	},
																	"typeName": {
																		"id": 510,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "10750:7:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint256_$",
																		"typeString": "type(uint256)"
																	}
																],
																"id": 509,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10745:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10745:13:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint256",
																"typeString": "type(uint256)"
															}
														},
														"id": 513,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10759:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10745:17:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "10725:37:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 537,
												"nodeType": "IfStatement",
												"src": "10721:310:1",
												"trueBody": {
													"id": 536,
													"nodeType": "Block",
													"src": "10764:267:1",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 517,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 515,
																	"name": "currentAllowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 502,
																	"src": "10782:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"id": 516,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 498,
																	"src": "10801:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "10782:24:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 525,
															"nodeType": "IfStatement",
															"src": "10778:130:1",
															"trueBody": {
																"id": 524,
																"nodeType": "Block",
																"src": "10808:100:1",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 519,
																					"name": "spender",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 496,
																					"src": "10860:7:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 520,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "10869:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				{
																					"id": 521,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 498,
																					"src": "10887:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 518,
																				"name": "ERC20InsufficientAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 859,
																				"src": "10833:26:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																					"typeString": "function (address,uint256,uint256) pure returns (error)"
																				}
																			},
																			"id": 522,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "10833:60:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 523,
																		"nodeType": "RevertStatement",
																		"src": "10826:67:1"
																	}
																]
															}
														},
														{
															"id": 535,
															"nodeType": "UncheckedBlock",
															"src": "10921:100:1",
															"statements": [
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 527,
																				"name": "owner",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 494,
																				"src": "10958:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 528,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 496,
																				"src": "10965:7:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 531,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 529,
																					"name": "currentAllowance",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 502,
																					"src": "10974:16:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "-",
																				"rightExpression": {
																					"id": 530,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 498,
																					"src": "10993:5:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10974:24:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"hexValue": "66616c7365",
																				"id": 532,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "11000:5:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "false"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			],
																			"id": 526,
																			"name": "_approve",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [
																				431,
																				491
																			],
																			"referencedDeclaration": 491,
																			"src": "10949:8:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bool_$returns$__$",
																				"typeString": "function (address,address,uint256,bool)"
																			}
																		},
																		"id": 533,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "10949:57:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 534,
																	"nodeType": "ExpressionStatement",
																	"src": "10949:57:1"
																}
															]
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 492,
										"nodeType": "StructuredDocumentation",
										"src": "10284:271:1",
										"text": " @dev Updates `owner` s allowance for `spender` based on spent `value`.\n Does not update the allowance value in case of infinite allowance.\n Revert if not enough allowance is available.\n Does not emit an {Approval} event."
									},
									"id": 539,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_spendAllowance",
									"nameLocation": "10569:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 499,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 494,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "10593:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "10585:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 493,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10585:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 496,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "10608:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "10600:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 495,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "10600:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 498,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10625:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 539,
												"src": "10617:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 497,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10617:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10584:47:1"
									},
									"returnParameters": {
										"id": 500,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10649:0:1"
									},
									"scope": 540,
									"src": "10560:477:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 541,
							"src": "1298:9741:1",
							"usedErrors": [
								840,
								845,
								850,
								859,
								864,
								869
							],
							"usedEvents": [
								552,
								561
							]
						}
					],
					"src": "105:10935:1"
				},
				"id": 1
			},
			"IERC20.sol": {
				"ast": {
					"absolutePath": "IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							618
						]
					},
					"id": 619,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 542,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 543,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:2",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 618,
							"linearizedBaseContracts": [
								618
							],
							"name": "IERC20",
							"nameLocation": "213:6:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 544,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:2",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 552,
									"name": "Transfer",
									"nameLocation": "395:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 546,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "404:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 545,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 548,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "426:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 547,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 550,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 552,
												"src": "446:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:2"
									},
									"src": "389:72:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 553,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:2",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 561,
									"name": "Approval",
									"nameLocation": "626:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 560,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 555,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "635:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 554,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 557,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "658:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 556,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 559,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 561,
												"src": "683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 558,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:2"
									},
									"src": "620:78:2"
								},
								{
									"documentation": {
										"id": 562,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:2",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 567,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 563,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:2"
									},
									"returnParameters": {
										"id": 566,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 565,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 567,
												"src": "820:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 564,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:2"
									},
									"scope": 618,
									"src": "774:55:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 568,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:2",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 575,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 570,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "930:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 569,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:2"
									},
									"returnParameters": {
										"id": 574,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 573,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 575,
												"src": "970:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 572,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:2"
									},
									"scope": 618,
									"src": "911:68:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 576,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:2",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 585,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 581,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 578,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1221:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 577,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 580,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1233:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 579,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:2"
									},
									"returnParameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "1266:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 582,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:2"
									},
									"scope": 618,
									"src": "1203:69:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:2",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 595,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 591,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "1566:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 590,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "1581:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 589,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:2"
									},
									"returnParameters": {
										"id": 594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 593,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "1621:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:2"
									},
									"scope": 618,
									"src": "1547:83:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:2",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 605,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 601,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "2325:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 597,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 600,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "2342:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 599,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:2"
									},
									"returnParameters": {
										"id": 604,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 603,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 605,
												"src": "2375:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 602,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:2"
									},
									"scope": 618,
									"src": "2308:73:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 606,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:2",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 617,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 613,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 608,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2711:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 607,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 610,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2725:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 609,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 612,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2737:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 611,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:2"
									},
									"returnParameters": {
										"id": 616,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 615,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 617,
												"src": "2770:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 614,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:2"
									},
									"scope": 618,
									"src": "2689:87:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 619,
							"src": "203:2575:2",
							"usedErrors": [],
							"usedEvents": [
								552,
								561
							]
						}
					],
					"src": "106:2673:2"
				},
				"id": 2
			},
			"IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							618
						],
						"IERC20Metadata": [
							644
						]
					},
					"id": 645,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 620,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:3"
						},
						{
							"absolutePath": "IERC20.sol",
							"file": "../IERC20.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 645,
							"sourceUnit": 619,
							"src": "151:37:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 621,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 618,
										"src": "159:6:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 624,
										"name": "IERC20",
										"nameLocations": [
											"305:6:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 618,
										"src": "305:6:3"
									},
									"id": 625,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:3"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 623,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:3",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 644,
							"linearizedBaseContracts": [
								644,
								618
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 626,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:3",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 631,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 627,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:3"
									},
									"returnParameters": {
										"id": 630,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 629,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 631,
												"src": "416:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 628,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:3"
									},
									"scope": 644,
									"src": "377:54:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 632,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:3",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 637,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:3"
									},
									"returnParameters": {
										"id": 636,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 635,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 637,
												"src": "539:13:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 634,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:3"
									},
									"scope": 644,
									"src": "498:56:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 638,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:3",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 643,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 639,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:3"
									},
									"returnParameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 641,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 643,
												"src": "673:5:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 640,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:3"
									},
									"scope": 644,
									"src": "630:50:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 645,
							"src": "277:405:3",
							"usedErrors": [],
							"usedEvents": [
								552,
								561
							]
						}
					],
					"src": "125:558:3"
				},
				"id": 3
			},
			"TRTtheSalad.sol": {
				"ast": {
					"absolutePath": "TRTtheSalad.sol",
					"exportedSymbols": {
						"Context": [
							29
						],
						"ERC20": [
							540
						],
						"IERC1155Errors": [
							965
						],
						"IERC20": [
							618
						],
						"IERC20Errors": [
							870
						],
						"IERC20Metadata": [
							644
						],
						"IERC721Errors": [
							918
						],
						"TRTtheSalad": [
							828
						]
					},
					"id": 829,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 646,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "33:24:4"
						},
						{
							"absolutePath": "ERC20.sol",
							"file": "./ERC20.sol",
							"id": 647,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 829,
							"sourceUnit": 541,
							"src": "61:21:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 648,
										"name": "ERC20",
										"nameLocations": [
											"110:5:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 540,
										"src": "110:5:4"
									},
									"id": 649,
									"nodeType": "InheritanceSpecifier",
									"src": "110:5:4"
								}
							],
							"canonicalName": "TRTtheSalad",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 828,
							"linearizedBaseContracts": [
								828,
								540,
								870,
								644,
								618,
								29
							],
							"name": "TRTtheSalad",
							"nameLocation": "95:11:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9f0c8125",
									"id": 651,
									"mutability": "mutable",
									"name": "_tokenName",
									"nameLocation": "203:10:4",
									"nodeType": "VariableDeclaration",
									"scope": 828,
									"src": "189:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 650,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "189:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "ecf35cca",
									"id": 653,
									"mutability": "mutable",
									"name": "_tokenSymbol",
									"nameLocation": "234:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 828,
									"src": "220:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_storage",
										"typeString": "string"
									},
									"typeName": {
										"id": 652,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "220:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "3eaaf86b",
									"id": 655,
									"mutability": "mutable",
									"name": "_totalSupply",
									"nameLocation": "268:12:4",
									"nodeType": "VariableDeclaration",
									"scope": 828,
									"src": "253:27:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 654,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "253:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 682,
										"nodeType": "Block",
										"src": "438:183:4",
										"statements": [
											{
												"expression": {
													"id": 666,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 664,
														"name": "_tokenName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 651,
														"src": "449:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "54525474686553616c6164",
														"id": 665,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "462:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_aca1041d20d917d5277025bcde10dee6eadad43140ea8aaa1decce2a5f8bad5f",
															"typeString": "literal_string \"TRTtheSalad\""
														},
														"value": "TRTtheSalad"
													},
													"src": "449:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 667,
												"nodeType": "ExpressionStatement",
												"src": "449:26:4"
											},
											{
												"expression": {
													"id": 670,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 668,
														"name": "_tokenSymbol",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 653,
														"src": "495:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_string_storage",
															"typeString": "string storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "545254",
														"id": 669,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "string",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "510:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_stringliteral_4e5ba25df52ddf8078e933195233027d9039a04866724f0e69834d6a823ab781",
															"typeString": "literal_string \"TRT\""
														},
														"value": "TRT"
													},
													"src": "495:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"id": 671,
												"nodeType": "ExpressionStatement",
												"src": "495:20:4"
											},
											{
												"expression": {
													"id": 674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 672,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "537:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 673,
														"name": "initialSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 657,
														"src": "552:13:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "537:28:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 675,
												"nodeType": "ExpressionStatement",
												"src": "537:28:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 677,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "586:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "590:6:4",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "586:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 679,
															"name": "initialSupply",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 657,
															"src": "598:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 676,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "580:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 680,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "580:32:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 681,
												"nodeType": "ExpressionStatement",
												"src": "580:32:4"
											}
										]
									},
									"id": 683,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 660,
													"name": "_tokenName",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 651,
													"src": "412:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												{
													"id": 661,
													"name": "_tokenSymbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 653,
													"src": "424:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												}
											],
											"id": 662,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 659,
												"name": "ERC20",
												"nameLocations": [
													"406:5:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 540,
												"src": "406:5:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "406:31:4"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 657,
												"mutability": "mutable",
												"name": "initialSupply",
												"nameLocation": "391:13:4",
												"nodeType": "VariableDeclaration",
												"scope": 683,
												"src": "383:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 656,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "383:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "382:23:4"
									},
									"returnParameters": {
										"id": 663,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "438:0:4"
									},
									"scope": 828,
									"src": "371:250:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 699,
										"nodeType": "Block",
										"src": "735:134:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 685,
															"src": "752:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 687,
															"src": "756:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 690,
														"name": "_mint",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 380,
														"src": "746:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "746:17:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 694,
												"nodeType": "ExpressionStatement",
												"src": "746:17:4"
											},
											{
												"expression": {
													"id": 697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 695,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "812:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 696,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 687,
														"src": "828:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "812:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 698,
												"nodeType": "ExpressionStatement",
												"src": "812:22:4"
											}
										]
									},
									"functionSelector": "40c10f19",
									"id": 700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mint",
									"nameLocation": "695:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 688,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 685,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "708:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "700:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 684,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "700:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 687,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "720:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 700,
												"src": "712:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "712:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "699:28:4"
									},
									"returnParameters": {
										"id": 689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "735:0:4"
									},
									"scope": 828,
									"src": "686:183:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 716,
										"nodeType": "Block",
										"src": "985:136:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 708,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "1002:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 709,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 704,
															"src": "1008:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 707,
														"name": "_burn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 413,
														"src": "996:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 710,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "996:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 711,
												"nodeType": "ExpressionStatement",
												"src": "996:19:4"
											},
											{
												"expression": {
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 712,
														"name": "_totalSupply",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 655,
														"src": "1064:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 713,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 704,
														"src": "1080:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1064:22:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 715,
												"nodeType": "ExpressionStatement",
												"src": "1064:22:4"
											}
										]
									},
									"functionSelector": "9dc29fac",
									"id": 717,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "burn",
									"nameLocation": "943:4:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 705,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "956:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "948:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 701,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "948:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 704,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "970:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 717,
												"src": "962:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 703,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "947:30:4"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "985:0:4"
									},
									"scope": 828,
									"src": "934:187:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										150
									],
									"body": {
										"id": 736,
										"nodeType": "Block",
										"src": "1309:118:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 728,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1330:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 729,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1330:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 730,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 719,
															"src": "1344:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 731,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 721,
															"src": "1348:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 727,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "1320:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 732,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1320:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 733,
												"nodeType": "ExpressionStatement",
												"src": "1320:35:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 734,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1415:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 726,
												"id": 735,
												"nodeType": "Return",
												"src": "1408:11:4"
											}
										]
									},
									"functionSelector": "a9059cbb",
									"id": 737,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1241:8:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 723,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1285:8:4"
									},
									"parameters": {
										"id": 722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 719,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1258:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1250:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 718,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1250:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 721,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1270:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1262:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 720,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1262:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1249:28:4"
									},
									"returnParameters": {
										"id": 726,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 725,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 737,
												"src": "1303:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 724,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1303:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1302:6:4"
									},
									"scope": 828,
									"src": "1232:195:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										191
									],
									"body": {
										"id": 756,
										"nodeType": "Block",
										"src": "1619:121:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 748,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "1639:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 749,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1639:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 750,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 739,
															"src": "1653:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 751,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 741,
															"src": "1662:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 747,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															431,
															491
														],
														"referencedDeclaration": 431,
														"src": "1630:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 752,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1630:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 753,
												"nodeType": "ExpressionStatement",
												"src": "1630:39:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 754,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1728:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 746,
												"id": 755,
												"nodeType": "Return",
												"src": "1721:11:4"
											}
										]
									},
									"functionSelector": "095ea7b3",
									"id": 757,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "1547:7:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 743,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1595:8:4"
									},
									"parameters": {
										"id": 742,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 739,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1563:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1555:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 738,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1555:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 741,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1580:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1572:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 740,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1554:33:4"
									},
									"returnParameters": {
										"id": 746,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 745,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 757,
												"src": "1613:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 744,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1613:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1612:6:4"
									},
									"scope": 828,
									"src": "1538:202:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										223
									],
									"body": {
										"id": 790,
										"nodeType": "Block",
										"src": "1943:215:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 770,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "1964:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 771,
															"name": "to",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 761,
															"src": "1970:2:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 772,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 763,
															"src": "1974:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 769,
														"name": "_transfer",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 270,
														"src": "1954:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 773,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1954:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 774,
												"nodeType": "ExpressionStatement",
												"src": "1954:27:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 776,
															"name": "from",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 759,
															"src": "2043:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 777,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "2049:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 778,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2049:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 785,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 780,
																		"name": "from",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 759,
																		"src": "2073:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 781,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 11,
																			"src": "2079:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 782,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2079:12:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 779,
																	"name": "allowance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 167,
																	"src": "2063:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
																		"typeString": "function (address,address) view returns (uint256)"
																	}
																},
																"id": 783,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2063:29:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"id": 784,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 763,
																"src": "2095:6:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2063:38:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 775,
														"name": "_approve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															431,
															491
														],
														"referencedDeclaration": 431,
														"src": "2034:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256)"
														}
													},
													"id": 786,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2034:68:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 787,
												"nodeType": "ExpressionStatement",
												"src": "2034:68:4"
											},
											{
												"expression": {
													"hexValue": "74727565",
													"id": 788,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "2146:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 768,
												"id": 789,
												"nodeType": "Return",
												"src": "2139:11:4"
											}
										]
									},
									"functionSelector": "23b872dd",
									"id": 791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "1857:12:4",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 765,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1919:8:4"
									},
									"parameters": {
										"id": 764,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1878:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1870:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 758,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1870:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 761,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1892:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1884:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 760,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1884:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 763,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1904:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1896:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 762,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1896:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1869:42:4"
									},
									"returnParameters": {
										"id": 768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 767,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 791,
												"src": "1937:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 766,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1937:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1936:6:4"
									},
									"scope": 828,
									"src": "1848:310:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 802,
										"nodeType": "Block",
										"src": "2294:81:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 799,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 793,
															"src": "2322:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 798,
														"name": "balanceOf",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 126,
														"src": "2312:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) view returns (uint256)"
														}
													},
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2312:18:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 797,
												"id": 801,
												"nodeType": "Return",
												"src": "2305:25:4"
											}
										]
									},
									"functionSelector": "9b96eece",
									"id": 803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBalanceOf",
									"nameLocation": "2234:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 794,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 793,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2255:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "2247:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 792,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2247:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2246:17:4"
									},
									"returnParameters": {
										"id": 797,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 796,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 803,
												"src": "2285:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 795,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2285:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2284:9:4"
									},
									"scope": 828,
									"src": "2225:150:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "2493:36:4",
										"statements": [
											{
												"expression": {
													"id": 808,
													"name": "_tokenName",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 651,
													"src": "2511:10:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 807,
												"id": 809,
												"nodeType": "Return",
												"src": "2504:17:4"
											}
										]
									},
									"functionSelector": "862b092b",
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenName",
									"nameLocation": "2442:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 804,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2454:2:4"
									},
									"returnParameters": {
										"id": 807,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 806,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "2478:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 805,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2478:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2477:15:4"
									},
									"scope": 828,
									"src": "2433:96:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 818,
										"nodeType": "Block",
										"src": "2599:38:4",
										"statements": [
											{
												"expression": {
													"id": 816,
													"name": "_tokenSymbol",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 653,
													"src": "2617:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage",
														"typeString": "string storage ref"
													}
												},
												"functionReturnParameters": 815,
												"id": 817,
												"nodeType": "Return",
												"src": "2610:19:4"
											}
										]
									},
									"functionSelector": "f1850af8",
									"id": 819,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTokenSymbol",
									"nameLocation": "2546:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2560:2:4"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "2584:13:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 813,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2584:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2583:15:4"
									},
									"scope": 828,
									"src": "2537:100:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 826,
										"nodeType": "Block",
										"src": "2701:38:4",
										"statements": [
											{
												"expression": {
													"id": 824,
													"name": "_totalSupply",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 655,
													"src": "2719:12:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 823,
												"id": 825,
												"nodeType": "Return",
												"src": "2712:19:4"
											}
										]
									},
									"functionSelector": "c4e41b22",
									"id": 827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getTotalSupply",
									"nameLocation": "2654:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 820,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2668:2:4"
									},
									"returnParameters": {
										"id": 823,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 822,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 827,
												"src": "2692:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 821,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2692:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2691:9:4"
									},
									"scope": 828,
									"src": "2645:94:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 829,
							"src": "86:2656:4",
							"usedErrors": [
								840,
								845,
								850,
								859,
								864,
								869
							],
							"usedEvents": [
								552,
								561
							]
						}
					],
					"src": "33:2711:4"
				},
				"id": 4
			},
			"draft-IERC6093.sol": {
				"ast": {
					"absolutePath": "draft-IERC6093.sol",
					"exportedSymbols": {
						"IERC1155Errors": [
							965
						],
						"IERC20Errors": [
							870
						],
						"IERC721Errors": [
							918
						]
					},
					"id": 966,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 830,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 831,
								"nodeType": "StructuredDocumentation",
								"src": "138:139:5",
								"text": " @dev Standard ERC20 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC20 tokens."
							},
							"fullyImplemented": true,
							"id": 870,
							"linearizedBaseContracts": [
								870
							],
							"name": "IERC20Errors",
							"nameLocation": "288:12:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 832,
										"nodeType": "StructuredDocumentation",
										"src": "307:309:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "e450d38c",
									"id": 840,
									"name": "ERC20InsufficientBalance",
									"nameLocation": "627:24:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 834,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "660:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "652:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 833,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "676:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "668:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 835,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "693:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 840,
												"src": "685:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "685:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "651:49:5"
									},
									"src": "621:80:5"
								},
								{
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "707:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "96c6fd1e",
									"id": 845,
									"name": "ERC20InvalidSender",
									"nameLocation": "870:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 844,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 843,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "897:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 845,
												"src": "889:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 842,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "889:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "888:16:5"
									},
									"src": "864:41:5"
								},
								{
									"documentation": {
										"id": 846,
										"nodeType": "StructuredDocumentation",
										"src": "911:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "ec442f05",
									"id": 850,
									"name": "ERC20InvalidReceiver",
									"nameLocation": "1081:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "1110:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 850,
												"src": "1102:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1102:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1101:18:5"
									},
									"src": "1075:45:5"
								},
								{
									"documentation": {
										"id": 851,
										"nodeType": "StructuredDocumentation",
										"src": "1126:345:5",
										"text": " @dev Indicates a failure with the `spender`’s `allowance`. Used in transfers.\n @param spender Address that may be allowed to operate on tokens without being their owner.\n @param allowance Amount of tokens a `spender` is allowed to operate with.\n @param needed Minimum amount required to perform a transfer."
									},
									"errorSelector": "fb8f41b2",
									"id": 859,
									"name": "ERC20InsufficientAllowance",
									"nameLocation": "1482:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 853,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1517:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "1509:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 852,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 855,
												"mutability": "mutable",
												"name": "allowance",
												"nameLocation": "1534:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "1526:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 854,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1526:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 857,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "1553:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "1545:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 856,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1545:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:52:5"
									},
									"src": "1476:85:5"
								},
								{
									"documentation": {
										"id": 860,
										"nodeType": "StructuredDocumentation",
										"src": "1567:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "e602df05",
									"id": 864,
									"name": "ERC20InvalidApprover",
									"nameLocation": "1752:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 862,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "1781:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 864,
												"src": "1773:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 861,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1773:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1772:18:5"
									},
									"src": "1746:45:5"
								},
								{
									"documentation": {
										"id": 865,
										"nodeType": "StructuredDocumentation",
										"src": "1797:195:5",
										"text": " @dev Indicates a failure with the `spender` to be approved. Used in approvals.\n @param spender Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "94280d62",
									"id": 869,
									"name": "ERC20InvalidSpender",
									"nameLocation": "2003:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 867,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2031:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 869,
												"src": "2023:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 866,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2023:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:17:5"
									},
									"src": "1997:43:5"
								}
							],
							"scope": 966,
							"src": "278:1764:5",
							"usedErrors": [
								840,
								845,
								850,
								859,
								864,
								869
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC721Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 871,
								"nodeType": "StructuredDocumentation",
								"src": "2044:141:5",
								"text": " @dev Standard ERC721 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC721 tokens."
							},
							"fullyImplemented": true,
							"id": 918,
							"linearizedBaseContracts": [
								918
							],
							"name": "IERC721Errors",
							"nameLocation": "2196:13:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 872,
										"nodeType": "StructuredDocumentation",
										"src": "2216:219:5",
										"text": " @dev Indicates that an address can't be an owner. For example, `address(0)` is a forbidden owner in EIP-20.\n Used in balance queries.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "89c62b64",
									"id": 876,
									"name": "ERC721InvalidOwner",
									"nameLocation": "2446:18:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 874,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "2473:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 876,
												"src": "2465:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 873,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2465:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2464:15:5"
									},
									"src": "2440:40:5"
								},
								{
									"documentation": {
										"id": 877,
										"nodeType": "StructuredDocumentation",
										"src": "2486:132:5",
										"text": " @dev Indicates a `tokenId` whose `owner` is the zero address.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "7e273289",
									"id": 881,
									"name": "ERC721NonexistentToken",
									"nameLocation": "2629:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 879,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2660:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 881,
												"src": "2652:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 878,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2652:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2651:17:5"
									},
									"src": "2623:46:5"
								},
								{
									"documentation": {
										"id": 882,
										"nodeType": "StructuredDocumentation",
										"src": "2675:289:5",
										"text": " @dev Indicates an error related to the ownership over a particular token. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param tokenId Identifier number of a token.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "64283d7b",
									"id": 890,
									"name": "ERC721IncorrectOwner",
									"nameLocation": "2975:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 889,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 884,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3004:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "2996:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 883,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2996:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 886,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3020:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3012:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3012:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 888,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3037:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 890,
												"src": "3029:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 887,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3029:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2995:48:5"
									},
									"src": "2969:75:5"
								},
								{
									"documentation": {
										"id": 891,
										"nodeType": "StructuredDocumentation",
										"src": "3050:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "73c6ac6e",
									"id": 895,
									"name": "ERC721InvalidSender",
									"nameLocation": "3213:19:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 894,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 893,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "3241:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 895,
												"src": "3233:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 892,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3233:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3232:16:5"
									},
									"src": "3207:42:5"
								},
								{
									"documentation": {
										"id": 896,
										"nodeType": "StructuredDocumentation",
										"src": "3255:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "64a0ae92",
									"id": 900,
									"name": "ERC721InvalidReceiver",
									"nameLocation": "3425:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 898,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "3455:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "3447:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 897,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3447:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3446:18:5"
									},
									"src": "3419:46:5"
								},
								{
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "3471:247:5",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "177e802f",
									"id": 907,
									"name": "ERC721InsufficientApproval",
									"nameLocation": "3729:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "3764:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3756:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3756:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3782:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 907,
												"src": "3774:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 904,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3755:35:5"
									},
									"src": "3723:68:5"
								},
								{
									"documentation": {
										"id": 908,
										"nodeType": "StructuredDocumentation",
										"src": "3797:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "a9fbf51f",
									"id": 912,
									"name": "ERC721InvalidApprover",
									"nameLocation": "3982:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 911,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 910,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "4012:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 912,
												"src": "4004:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 909,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4004:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4003:18:5"
									},
									"src": "3976:46:5"
								},
								{
									"documentation": {
										"id": 913,
										"nodeType": "StructuredDocumentation",
										"src": "4028:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "5b08ba18",
									"id": 917,
									"name": "ERC721InvalidOperator",
									"nameLocation": "4236:21:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4266:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "4258:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 914,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4258:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4257:18:5"
									},
									"src": "4230:46:5"
								}
							],
							"scope": 966,
							"src": "2186:2092:5",
							"usedErrors": [
								876,
								881,
								890,
								895,
								900,
								907,
								912,
								917
							],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1155Errors",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 919,
								"nodeType": "StructuredDocumentation",
								"src": "4280:143:5",
								"text": " @dev Standard ERC1155 Errors\n Interface of the https://eips.ethereum.org/EIPS/eip-6093[ERC-6093] custom errors for ERC1155 tokens."
							},
							"fullyImplemented": true,
							"id": 965,
							"linearizedBaseContracts": [
								965
							],
							"name": "IERC1155Errors",
							"nameLocation": "4434:14:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "4455:361:5",
										"text": " @dev Indicates an error related to the current `balance` of a `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred.\n @param balance Current balance for the interacting account.\n @param needed Minimum amount required to perform a transfer.\n @param tokenId Identifier number of a token."
									},
									"errorSelector": "03dee4c5",
									"id": 930,
									"name": "ERC1155InsufficientBalance",
									"nameLocation": "4827:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 922,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "4862:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "4854:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 921,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4854:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 924,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "4878:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "4870:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 923,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4870:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 926,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "4895:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "4887:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 925,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4887:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4911:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 930,
												"src": "4903:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 927,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4903:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4853:66:5"
									},
									"src": "4821:99:5"
								},
								{
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "4926:152:5",
										"text": " @dev Indicates a failure with the token `sender`. Used in transfers.\n @param sender Address whose tokens are being transferred."
									},
									"errorSelector": "01a83514",
									"id": 935,
									"name": "ERC1155InvalidSender",
									"nameLocation": "5089:20:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 933,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "5118:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 935,
												"src": "5110:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 932,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5110:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5109:16:5"
									},
									"src": "5083:43:5"
								},
								{
									"documentation": {
										"id": 936,
										"nodeType": "StructuredDocumentation",
										"src": "5132:159:5",
										"text": " @dev Indicates a failure with the token `receiver`. Used in transfers.\n @param receiver Address to which tokens are being transferred."
									},
									"errorSelector": "57f447ce",
									"id": 940,
									"name": "ERC1155InvalidReceiver",
									"nameLocation": "5302:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 939,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 938,
												"mutability": "mutable",
												"name": "receiver",
												"nameLocation": "5333:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 940,
												"src": "5325:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 937,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5325:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5324:18:5"
									},
									"src": "5296:47:5"
								},
								{
									"documentation": {
										"id": 941,
										"nodeType": "StructuredDocumentation",
										"src": "5349:256:5",
										"text": " @dev Indicates a failure with the `operator`’s approval. Used in transfers.\n @param operator Address that may be allowed to operate on tokens without being their owner.\n @param owner Address of the current owner of a token."
									},
									"errorSelector": "e237d922",
									"id": 947,
									"name": "ERC1155MissingApprovalForAll",
									"nameLocation": "5616:28:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 943,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "5653:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5645:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 945,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "5671:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "5663:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 944,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5663:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5644:33:5"
									},
									"src": "5610:68:5"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "5684:174:5",
										"text": " @dev Indicates a failure with the `approver` of a token to be approved. Used in approvals.\n @param approver Address initiating an approval operation."
									},
									"errorSelector": "3e31884e",
									"id": 952,
									"name": "ERC1155InvalidApprover",
									"nameLocation": "5869:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 951,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "approver",
												"nameLocation": "5900:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 952,
												"src": "5892:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5892:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5891:18:5"
									},
									"src": "5863:47:5"
								},
								{
									"documentation": {
										"id": 953,
										"nodeType": "StructuredDocumentation",
										"src": "5916:197:5",
										"text": " @dev Indicates a failure with the `operator` to be approved. Used in approvals.\n @param operator Address that may be allowed to operate on tokens without being their owner."
									},
									"errorSelector": "ced3e100",
									"id": 957,
									"name": "ERC1155InvalidOperator",
									"nameLocation": "6124:22:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 955,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "6155:8:5",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "6147:16:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 954,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6147:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6146:18:5"
									},
									"src": "6118:47:5"
								},
								{
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "6171:280:5",
										"text": " @dev Indicates an array length mismatch between ids and values in a safeBatchTransferFrom operation.\n Used in batch transfers.\n @param idsLength Length of the array of token identifiers\n @param valuesLength Length of the array of token amounts"
									},
									"errorSelector": "5b059991",
									"id": 964,
									"name": "ERC1155InvalidArrayLength",
									"nameLocation": "6462:25:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "idsLength",
												"nameLocation": "6496:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6488:17:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6488:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "valuesLength",
												"nameLocation": "6515:12:5",
												"nodeType": "VariableDeclaration",
												"scope": 964,
												"src": "6507:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6507:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6487:41:5"
									},
									"src": "6456:73:5"
								}
							],
							"scope": 966,
							"src": "4424:2107:5",
							"usedErrors": [
								930,
								935,
								940,
								947,
								952,
								957,
								964
							],
							"usedEvents": []
						}
					],
					"src": "112:6420:5"
				},
				"id": 5
			}
		}
	}
}